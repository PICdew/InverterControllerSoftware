

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Oct 02 00:54:18 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.00
    37                           ; Generated 27/05/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F18855 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  001C                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0110                     	;# 
   125  0110                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0119                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  018F                     	;# 
   165  0190                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  0196                     	;# 
   169  0197                     	;# 
   170  0198                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  020C                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  020E                     	;# 
   179  020F                     	;# 
   180  020F                     	;# 
   181  0210                     	;# 
   182  0210                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0216                     	;# 
   192  0216                     	;# 
   193  0217                     	;# 
   194  0217                     	;# 
   195  0218                     	;# 
   196  0218                     	;# 
   197  0219                     	;# 
   198  021A                     	;# 
   199  021B                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021C                     	;# 
   203  021D                     	;# 
   204  021D                     	;# 
   205  021E                     	;# 
   206  021F                     	;# 
   207  028C                     	;# 
   208  028C                     	;# 
   209  028D                     	;# 
   210  028D                     	;# 
   211  028E                     	;# 
   212  028F                     	;# 
   213  0290                     	;# 
   214  0290                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0296                     	;# 
   224  0297                     	;# 
   225  0298                     	;# 
   226  0298                     	;# 
   227  0299                     	;# 
   228  0299                     	;# 
   229  029A                     	;# 
   230  029B                     	;# 
   231  029C                     	;# 
   232  029C                     	;# 
   233  029D                     	;# 
   234  030C                     	;# 
   235  030C                     	;# 
   236  030D                     	;# 
   237  030E                     	;# 
   238  030F                     	;# 
   239  0310                     	;# 
   240  0310                     	;# 
   241  0311                     	;# 
   242  0312                     	;# 
   243  0313                     	;# 
   244  0314                     	;# 
   245  0314                     	;# 
   246  0315                     	;# 
   247  0316                     	;# 
   248  0317                     	;# 
   249  0318                     	;# 
   250  0318                     	;# 
   251  0319                     	;# 
   252  031A                     	;# 
   253  031B                     	;# 
   254  031C                     	;# 
   255  031C                     	;# 
   256  031D                     	;# 
   257  031E                     	;# 
   258  031F                     	;# 
   259  038C                     	;# 
   260  038C                     	;# 
   261  038D                     	;# 
   262  038E                     	;# 
   263  0390                     	;# 
   264  0390                     	;# 
   265  0391                     	;# 
   266  0392                     	;# 
   267  040C                     	;# 
   268  040D                     	;# 
   269  040E                     	;# 
   270  040F                     	;# 
   271  0410                     	;# 
   272  0411                     	;# 
   273  0416                     	;# 
   274  0416                     	;# 
   275  0417                     	;# 
   276  0418                     	;# 
   277  0418                     	;# 
   278  0419                     	;# 
   279  041A                     	;# 
   280  041A                     	;# 
   281  041B                     	;# 
   282  041C                     	;# 
   283  041C                     	;# 
   284  041D                     	;# 
   285  041E                     	;# 
   286  041F                     	;# 
   287  048C                     	;# 
   288  048C                     	;# 
   289  048D                     	;# 
   290  048E                     	;# 
   291  048F                     	;# 
   292  048F                     	;# 
   293  0490                     	;# 
   294  0491                     	;# 
   295  0492                     	;# 
   296  0492                     	;# 
   297  0493                     	;# 
   298  0494                     	;# 
   299  0495                     	;# 
   300  0495                     	;# 
   301  0496                     	;# 
   302  0497                     	;# 
   303  0498                     	;# 
   304  0499                     	;# 
   305  049A                     	;# 
   306  049B                     	;# 
   307  049C                     	;# 
   308  049D                     	;# 
   309  050C                     	;# 
   310  050C                     	;# 
   311  050D                     	;# 
   312  050E                     	;# 
   313  050F                     	;# 
   314  050F                     	;# 
   315  0510                     	;# 
   316  0511                     	;# 
   317  0512                     	;# 
   318  0512                     	;# 
   319  0513                     	;# 
   320  0514                     	;# 
   321  0515                     	;# 
   322  0515                     	;# 
   323  0516                     	;# 
   324  0517                     	;# 
   325  0518                     	;# 
   326  0519                     	;# 
   327  051A                     	;# 
   328  051B                     	;# 
   329  051C                     	;# 
   330  051D                     	;# 
   331  058C                     	;# 
   332  058C                     	;# 
   333  058D                     	;# 
   334  058E                     	;# 
   335  058F                     	;# 
   336  058F                     	;# 
   337  0590                     	;# 
   338  0591                     	;# 
   339  0592                     	;# 
   340  0593                     	;# 
   341  060C                     	;# 
   342  060D                     	;# 
   343  060E                     	;# 
   344  060F                     	;# 
   345  0610                     	;# 
   346  0611                     	;# 
   347  0612                     	;# 
   348  0613                     	;# 
   349  0614                     	;# 
   350  0616                     	;# 
   351  0617                     	;# 
   352  0618                     	;# 
   353  0619                     	;# 
   354  061A                     	;# 
   355  061B                     	;# 
   356  061C                     	;# 
   357  061D                     	;# 
   358  061E                     	;# 
   359  068C                     	;# 
   360  068D                     	;# 
   361  068E                     	;# 
   362  068F                     	;# 
   363  0690                     	;# 
   364  0691                     	;# 
   365  0692                     	;# 
   366  0693                     	;# 
   367  0694                     	;# 
   368  070C                     	;# 
   369  070D                     	;# 
   370  070E                     	;# 
   371  070F                     	;# 
   372  0710                     	;# 
   373  0711                     	;# 
   374  0712                     	;# 
   375  0713                     	;# 
   376  0714                     	;# 
   377  0716                     	;# 
   378  0717                     	;# 
   379  0718                     	;# 
   380  0719                     	;# 
   381  071A                     	;# 
   382  071B                     	;# 
   383  071C                     	;# 
   384  071D                     	;# 
   385  071E                     	;# 
   386  0796                     	;# 
   387  0797                     	;# 
   388  0798                     	;# 
   389  0799                     	;# 
   390  079A                     	;# 
   391  079B                     	;# 
   392  080C                     	;# 
   393  080D                     	;# 
   394  080E                     	;# 
   395  080F                     	;# 
   396  0810                     	;# 
   397  0811                     	;# 
   398  0812                     	;# 
   399  0813                     	;# 
   400  0814                     	;# 
   401  081A                     	;# 
   402  081B                     	;# 
   403  081C                     	;# 
   404  081D                     	;# 
   405  081E                     	;# 
   406  081F                     	;# 
   407  088C                     	;# 
   408  088D                     	;# 
   409  088E                     	;# 
   410  088F                     	;# 
   411  0890                     	;# 
   412  0891                     	;# 
   413  0892                     	;# 
   414  0893                     	;# 
   415  0895                     	;# 
   416  0896                     	;# 
   417  0897                     	;# 
   418  0898                     	;# 
   419  0899                     	;# 
   420  089A                     	;# 
   421  089B                     	;# 
   422  090C                     	;# 
   423  090E                     	;# 
   424  090F                     	;# 
   425  091F                     	;# 
   426  091F                     	;# 
   427  098F                     	;# 
   428  098F                     	;# 
   429  0990                     	;# 
   430  0991                     	;# 
   431  0992                     	;# 
   432  0993                     	;# 
   433  0994                     	;# 
   434  0995                     	;# 
   435  0996                     	;# 
   436  0997                     	;# 
   437  0E0F                     	;# 
   438  0E10                     	;# 
   439  0E11                     	;# 
   440  0E12                     	;# 
   441  0E13                     	;# 
   442  0E14                     	;# 
   443  0E15                     	;# 
   444  0E16                     	;# 
   445  0E17                     	;# 
   446  0E18                     	;# 
   447  0E19                     	;# 
   448  0E1A                     	;# 
   449  0E1B                     	;# 
   450  0E1C                     	;# 
   451  0E1D                     	;# 
   452  0E1E                     	;# 
   453  0E1F                     	;# 
   454  0E20                     	;# 
   455  0E21                     	;# 
   456  0E22                     	;# 
   457  0E23                     	;# 
   458  0E24                     	;# 
   459  0E25                     	;# 
   460  0E26                     	;# 
   461  0E27                     	;# 
   462  0E28                     	;# 
   463  0E29                     	;# 
   464  0E2A                     	;# 
   465  0E2B                     	;# 
   466  0E2C                     	;# 
   467  0E2D                     	;# 
   468  0E2E                     	;# 
   469  0E2F                     	;# 
   470  0E30                     	;# 
   471  0E31                     	;# 
   472  0E32                     	;# 
   473  0E33                     	;# 
   474  0E34                     	;# 
   475  0E35                     	;# 
   476  0E36                     	;# 
   477  0E37                     	;# 
   478  0E8F                     	;# 
   479  0E90                     	;# 
   480  0E91                     	;# 
   481  0E92                     	;# 
   482  0E93                     	;# 
   483  0E94                     	;# 
   484  0E95                     	;# 
   485  0E96                     	;# 
   486  0E97                     	;# 
   487  0E9C                     	;# 
   488  0E9D                     	;# 
   489  0E9E                     	;# 
   490  0EA1                     	;# 
   491  0EA2                     	;# 
   492  0EA3                     	;# 
   493  0EA4                     	;# 
   494  0EA5                     	;# 
   495  0EA9                     	;# 
   496  0EAA                     	;# 
   497  0EAB                     	;# 
   498  0EAC                     	;# 
   499  0EB1                     	;# 
   500  0EB2                     	;# 
   501  0EB3                     	;# 
   502  0EB8                     	;# 
   503  0EB9                     	;# 
   504  0EBA                     	;# 
   505  0EBB                     	;# 
   506  0EBC                     	;# 
   507  0EBD                     	;# 
   508  0EBE                     	;# 
   509  0EC3                     	;# 
   510  0EC5                     	;# 
   511  0EC6                     	;# 
   512  0EC7                     	;# 
   513  0EC8                     	;# 
   514  0EC9                     	;# 
   515  0ECA                     	;# 
   516  0ECB                     	;# 
   517  0ECC                     	;# 
   518  0F10                     	;# 
   519  0F11                     	;# 
   520  0F12                     	;# 
   521  0F13                     	;# 
   522  0F14                     	;# 
   523  0F15                     	;# 
   524  0F16                     	;# 
   525  0F17                     	;# 
   526  0F18                     	;# 
   527  0F19                     	;# 
   528  0F1A                     	;# 
   529  0F1B                     	;# 
   530  0F1C                     	;# 
   531  0F1D                     	;# 
   532  0F1E                     	;# 
   533  0F1F                     	;# 
   534  0F20                     	;# 
   535  0F21                     	;# 
   536  0F22                     	;# 
   537  0F23                     	;# 
   538  0F24                     	;# 
   539  0F25                     	;# 
   540  0F26                     	;# 
   541  0F27                     	;# 
   542  0F38                     	;# 
   543  0F39                     	;# 
   544  0F3A                     	;# 
   545  0F3B                     	;# 
   546  0F3C                     	;# 
   547  0F3D                     	;# 
   548  0F3E                     	;# 
   549  0F3F                     	;# 
   550  0F40                     	;# 
   551  0F41                     	;# 
   552  0F43                     	;# 
   553  0F44                     	;# 
   554  0F45                     	;# 
   555  0F46                     	;# 
   556  0F47                     	;# 
   557  0F48                     	;# 
   558  0F49                     	;# 
   559  0F4A                     	;# 
   560  0F4B                     	;# 
   561  0F4C                     	;# 
   562  0F4E                     	;# 
   563  0F4F                     	;# 
   564  0F50                     	;# 
   565  0F51                     	;# 
   566  0F52                     	;# 
   567  0F53                     	;# 
   568  0F54                     	;# 
   569  0F55                     	;# 
   570  0F56                     	;# 
   571  0F57                     	;# 
   572  0F65                     	;# 
   573  0F68                     	;# 
   574  0F69                     	;# 
   575  0F6A                     	;# 
   576  0F6B                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  000E                     	;# 
   603  0010                     	;# 
   604  0011                     	;# 
   605  0012                     	;# 
   606  0013                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  001C                     	;# 
   611  001C                     	;# 
   612  001D                     	;# 
   613  001D                     	;# 
   614  001E                     	;# 
   615  001F                     	;# 
   616  008C                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  008E                     	;# 
   620  008E                     	;# 
   621  008F                     	;# 
   622  0090                     	;# 
   623  0090                     	;# 
   624  0091                     	;# 
   625  0093                     	;# 
   626  0094                     	;# 
   627  0095                     	;# 
   628  0096                     	;# 
   629  0097                     	;# 
   630  0098                     	;# 
   631  0099                     	;# 
   632  009A                     	;# 
   633  009B                     	;# 
   634  009C                     	;# 
   635  009D                     	;# 
   636  009E                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010E                     	;# 
   641  010F                     	;# 
   642  0110                     	;# 
   643  0110                     	;# 
   644  0111                     	;# 
   645  0112                     	;# 
   646  0112                     	;# 
   647  0113                     	;# 
   648  0114                     	;# 
   649  0114                     	;# 
   650  0115                     	;# 
   651  0116                     	;# 
   652  0116                     	;# 
   653  0117                     	;# 
   654  0119                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  011A                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011B                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011C                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011D                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011E                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011F                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  018C                     	;# 
   680  018D                     	;# 
   681  018E                     	;# 
   682  018F                     	;# 
   683  0190                     	;# 
   684  0191                     	;# 
   685  0192                     	;# 
   686  0196                     	;# 
   687  0197                     	;# 
   688  0198                     	;# 
   689  0199                     	;# 
   690  019A                     	;# 
   691  019B                     	;# 
   692  019C                     	;# 
   693  020C                     	;# 
   694  020C                     	;# 
   695  020D                     	;# 
   696  020E                     	;# 
   697  020F                     	;# 
   698  020F                     	;# 
   699  0210                     	;# 
   700  0210                     	;# 
   701  0211                     	;# 
   702  0211                     	;# 
   703  0212                     	;# 
   704  0212                     	;# 
   705  0213                     	;# 
   706  0214                     	;# 
   707  0215                     	;# 
   708  0215                     	;# 
   709  0216                     	;# 
   710  0216                     	;# 
   711  0217                     	;# 
   712  0217                     	;# 
   713  0218                     	;# 
   714  0218                     	;# 
   715  0219                     	;# 
   716  021A                     	;# 
   717  021B                     	;# 
   718  021B                     	;# 
   719  021C                     	;# 
   720  021C                     	;# 
   721  021D                     	;# 
   722  021D                     	;# 
   723  021E                     	;# 
   724  021F                     	;# 
   725  028C                     	;# 
   726  028C                     	;# 
   727  028D                     	;# 
   728  028D                     	;# 
   729  028E                     	;# 
   730  028F                     	;# 
   731  0290                     	;# 
   732  0290                     	;# 
   733  0291                     	;# 
   734  0292                     	;# 
   735  0292                     	;# 
   736  0293                     	;# 
   737  0293                     	;# 
   738  0294                     	;# 
   739  0295                     	;# 
   740  0296                     	;# 
   741  0296                     	;# 
   742  0297                     	;# 
   743  0298                     	;# 
   744  0298                     	;# 
   745  0299                     	;# 
   746  0299                     	;# 
   747  029A                     	;# 
   748  029B                     	;# 
   749  029C                     	;# 
   750  029C                     	;# 
   751  029D                     	;# 
   752  030C                     	;# 
   753  030C                     	;# 
   754  030D                     	;# 
   755  030E                     	;# 
   756  030F                     	;# 
   757  0310                     	;# 
   758  0310                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0314                     	;# 
   763  0314                     	;# 
   764  0315                     	;# 
   765  0316                     	;# 
   766  0317                     	;# 
   767  0318                     	;# 
   768  0318                     	;# 
   769  0319                     	;# 
   770  031A                     	;# 
   771  031B                     	;# 
   772  031C                     	;# 
   773  031C                     	;# 
   774  031D                     	;# 
   775  031E                     	;# 
   776  031F                     	;# 
   777  038C                     	;# 
   778  038C                     	;# 
   779  038D                     	;# 
   780  038E                     	;# 
   781  0390                     	;# 
   782  0390                     	;# 
   783  0391                     	;# 
   784  0392                     	;# 
   785  040C                     	;# 
   786  040D                     	;# 
   787  040E                     	;# 
   788  040F                     	;# 
   789  0410                     	;# 
   790  0411                     	;# 
   791  0416                     	;# 
   792  0416                     	;# 
   793  0417                     	;# 
   794  0418                     	;# 
   795  0418                     	;# 
   796  0419                     	;# 
   797  041A                     	;# 
   798  041A                     	;# 
   799  041B                     	;# 
   800  041C                     	;# 
   801  041C                     	;# 
   802  041D                     	;# 
   803  041E                     	;# 
   804  041F                     	;# 
   805  048C                     	;# 
   806  048C                     	;# 
   807  048D                     	;# 
   808  048E                     	;# 
   809  048F                     	;# 
   810  048F                     	;# 
   811  0490                     	;# 
   812  0491                     	;# 
   813  0492                     	;# 
   814  0492                     	;# 
   815  0493                     	;# 
   816  0494                     	;# 
   817  0495                     	;# 
   818  0495                     	;# 
   819  0496                     	;# 
   820  0497                     	;# 
   821  0498                     	;# 
   822  0499                     	;# 
   823  049A                     	;# 
   824  049B                     	;# 
   825  049C                     	;# 
   826  049D                     	;# 
   827  050C                     	;# 
   828  050C                     	;# 
   829  050D                     	;# 
   830  050E                     	;# 
   831  050F                     	;# 
   832  050F                     	;# 
   833  0510                     	;# 
   834  0511                     	;# 
   835  0512                     	;# 
   836  0512                     	;# 
   837  0513                     	;# 
   838  0514                     	;# 
   839  0515                     	;# 
   840  0515                     	;# 
   841  0516                     	;# 
   842  0517                     	;# 
   843  0518                     	;# 
   844  0519                     	;# 
   845  051A                     	;# 
   846  051B                     	;# 
   847  051C                     	;# 
   848  051D                     	;# 
   849  058C                     	;# 
   850  058C                     	;# 
   851  058D                     	;# 
   852  058E                     	;# 
   853  058F                     	;# 
   854  058F                     	;# 
   855  0590                     	;# 
   856  0591                     	;# 
   857  0592                     	;# 
   858  0593                     	;# 
   859  060C                     	;# 
   860  060D                     	;# 
   861  060E                     	;# 
   862  060F                     	;# 
   863  0610                     	;# 
   864  0611                     	;# 
   865  0612                     	;# 
   866  0613                     	;# 
   867  0614                     	;# 
   868  0616                     	;# 
   869  0617                     	;# 
   870  0618                     	;# 
   871  0619                     	;# 
   872  061A                     	;# 
   873  061B                     	;# 
   874  061C                     	;# 
   875  061D                     	;# 
   876  061E                     	;# 
   877  068C                     	;# 
   878  068D                     	;# 
   879  068E                     	;# 
   880  068F                     	;# 
   881  0690                     	;# 
   882  0691                     	;# 
   883  0692                     	;# 
   884  0693                     	;# 
   885  0694                     	;# 
   886  070C                     	;# 
   887  070D                     	;# 
   888  070E                     	;# 
   889  070F                     	;# 
   890  0710                     	;# 
   891  0711                     	;# 
   892  0712                     	;# 
   893  0713                     	;# 
   894  0714                     	;# 
   895  0716                     	;# 
   896  0717                     	;# 
   897  0718                     	;# 
   898  0719                     	;# 
   899  071A                     	;# 
   900  071B                     	;# 
   901  071C                     	;# 
   902  071D                     	;# 
   903  071E                     	;# 
   904  0796                     	;# 
   905  0797                     	;# 
   906  0798                     	;# 
   907  0799                     	;# 
   908  079A                     	;# 
   909  079B                     	;# 
   910  080C                     	;# 
   911  080D                     	;# 
   912  080E                     	;# 
   913  080F                     	;# 
   914  0810                     	;# 
   915  0811                     	;# 
   916  0812                     	;# 
   917  0813                     	;# 
   918  0814                     	;# 
   919  081A                     	;# 
   920  081B                     	;# 
   921  081C                     	;# 
   922  081D                     	;# 
   923  081E                     	;# 
   924  081F                     	;# 
   925  088C                     	;# 
   926  088D                     	;# 
   927  088E                     	;# 
   928  088F                     	;# 
   929  0890                     	;# 
   930  0891                     	;# 
   931  0892                     	;# 
   932  0893                     	;# 
   933  0895                     	;# 
   934  0896                     	;# 
   935  0897                     	;# 
   936  0898                     	;# 
   937  0899                     	;# 
   938  089A                     	;# 
   939  089B                     	;# 
   940  090C                     	;# 
   941  090E                     	;# 
   942  090F                     	;# 
   943  091F                     	;# 
   944  091F                     	;# 
   945  098F                     	;# 
   946  098F                     	;# 
   947  0990                     	;# 
   948  0991                     	;# 
   949  0992                     	;# 
   950  0993                     	;# 
   951  0994                     	;# 
   952  0995                     	;# 
   953  0996                     	;# 
   954  0997                     	;# 
   955  0E0F                     	;# 
   956  0E10                     	;# 
   957  0E11                     	;# 
   958  0E12                     	;# 
   959  0E13                     	;# 
   960  0E14                     	;# 
   961  0E15                     	;# 
   962  0E16                     	;# 
   963  0E17                     	;# 
   964  0E18                     	;# 
   965  0E19                     	;# 
   966  0E1A                     	;# 
   967  0E1B                     	;# 
   968  0E1C                     	;# 
   969  0E1D                     	;# 
   970  0E1E                     	;# 
   971  0E1F                     	;# 
   972  0E20                     	;# 
   973  0E21                     	;# 
   974  0E22                     	;# 
   975  0E23                     	;# 
   976  0E24                     	;# 
   977  0E25                     	;# 
   978  0E26                     	;# 
   979  0E27                     	;# 
   980  0E28                     	;# 
   981  0E29                     	;# 
   982  0E2A                     	;# 
   983  0E2B                     	;# 
   984  0E2C                     	;# 
   985  0E2D                     	;# 
   986  0E2E                     	;# 
   987  0E2F                     	;# 
   988  0E30                     	;# 
   989  0E31                     	;# 
   990  0E32                     	;# 
   991  0E33                     	;# 
   992  0E34                     	;# 
   993  0E35                     	;# 
   994  0E36                     	;# 
   995  0E37                     	;# 
   996  0E8F                     	;# 
   997  0E90                     	;# 
   998  0E91                     	;# 
   999  0E92                     	;# 
  1000  0E93                     	;# 
  1001  0E94                     	;# 
  1002  0E95                     	;# 
  1003  0E96                     	;# 
  1004  0E97                     	;# 
  1005  0E9C                     	;# 
  1006  0E9D                     	;# 
  1007  0E9E                     	;# 
  1008  0EA1                     	;# 
  1009  0EA2                     	;# 
  1010  0EA3                     	;# 
  1011  0EA4                     	;# 
  1012  0EA5                     	;# 
  1013  0EA9                     	;# 
  1014  0EAA                     	;# 
  1015  0EAB                     	;# 
  1016  0EAC                     	;# 
  1017  0EB1                     	;# 
  1018  0EB2                     	;# 
  1019  0EB3                     	;# 
  1020  0EB8                     	;# 
  1021  0EB9                     	;# 
  1022  0EBA                     	;# 
  1023  0EBB                     	;# 
  1024  0EBC                     	;# 
  1025  0EBD                     	;# 
  1026  0EBE                     	;# 
  1027  0EC3                     	;# 
  1028  0EC5                     	;# 
  1029  0EC6                     	;# 
  1030  0EC7                     	;# 
  1031  0EC8                     	;# 
  1032  0EC9                     	;# 
  1033  0ECA                     	;# 
  1034  0ECB                     	;# 
  1035  0ECC                     	;# 
  1036  0F10                     	;# 
  1037  0F11                     	;# 
  1038  0F12                     	;# 
  1039  0F13                     	;# 
  1040  0F14                     	;# 
  1041  0F15                     	;# 
  1042  0F16                     	;# 
  1043  0F17                     	;# 
  1044  0F18                     	;# 
  1045  0F19                     	;# 
  1046  0F1A                     	;# 
  1047  0F1B                     	;# 
  1048  0F1C                     	;# 
  1049  0F1D                     	;# 
  1050  0F1E                     	;# 
  1051  0F1F                     	;# 
  1052  0F20                     	;# 
  1053  0F21                     	;# 
  1054  0F22                     	;# 
  1055  0F23                     	;# 
  1056  0F24                     	;# 
  1057  0F25                     	;# 
  1058  0F26                     	;# 
  1059  0F27                     	;# 
  1060  0F38                     	;# 
  1061  0F39                     	;# 
  1062  0F3A                     	;# 
  1063  0F3B                     	;# 
  1064  0F3C                     	;# 
  1065  0F3D                     	;# 
  1066  0F3E                     	;# 
  1067  0F3F                     	;# 
  1068  0F40                     	;# 
  1069  0F41                     	;# 
  1070  0F43                     	;# 
  1071  0F44                     	;# 
  1072  0F45                     	;# 
  1073  0F46                     	;# 
  1074  0F47                     	;# 
  1075  0F48                     	;# 
  1076  0F49                     	;# 
  1077  0F4A                     	;# 
  1078  0F4B                     	;# 
  1079  0F4C                     	;# 
  1080  0F4E                     	;# 
  1081  0F4F                     	;# 
  1082  0F50                     	;# 
  1083  0F51                     	;# 
  1084  0F52                     	;# 
  1085  0F53                     	;# 
  1086  0F54                     	;# 
  1087  0F55                     	;# 
  1088  0F56                     	;# 
  1089  0F57                     	;# 
  1090  0F65                     	;# 
  1091  0F68                     	;# 
  1092  0F69                     	;# 
  1093  0F6A                     	;# 
  1094  0F6B                     	;# 
  1095  0FE4                     	;# 
  1096  0FE5                     	;# 
  1097  0FE6                     	;# 
  1098  0FE7                     	;# 
  1099  0FE8                     	;# 
  1100  0FE9                     	;# 
  1101  0FEA                     	;# 
  1102  0FEB                     	;# 
  1103  0FED                     	;# 
  1104  0FEE                     	;# 
  1105  0FEF                     	;# 
  1106  0000                     	;# 
  1107  0001                     	;# 
  1108  0002                     	;# 
  1109  0003                     	;# 
  1110  0004                     	;# 
  1111  0005                     	;# 
  1112  0006                     	;# 
  1113  0007                     	;# 
  1114  0008                     	;# 
  1115  0009                     	;# 
  1116  000A                     	;# 
  1117  000B                     	;# 
  1118  000C                     	;# 
  1119  000D                     	;# 
  1120  000E                     	;# 
  1121  0010                     	;# 
  1122  0011                     	;# 
  1123  0012                     	;# 
  1124  0013                     	;# 
  1125  0016                     	;# 
  1126  0017                     	;# 
  1127  0018                     	;# 
  1128  001C                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001D                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  008C                     	;# 
  1135  008C                     	;# 
  1136  008D                     	;# 
  1137  008E                     	;# 
  1138  008E                     	;# 
  1139  008F                     	;# 
  1140  0090                     	;# 
  1141  0090                     	;# 
  1142  0091                     	;# 
  1143  0093                     	;# 
  1144  0094                     	;# 
  1145  0095                     	;# 
  1146  0096                     	;# 
  1147  0097                     	;# 
  1148  0098                     	;# 
  1149  0099                     	;# 
  1150  009A                     	;# 
  1151  009B                     	;# 
  1152  009C                     	;# 
  1153  009D                     	;# 
  1154  009E                     	;# 
  1155  010C                     	;# 
  1156  010D                     	;# 
  1157  010E                     	;# 
  1158  010E                     	;# 
  1159  010F                     	;# 
  1160  0110                     	;# 
  1161  0110                     	;# 
  1162  0111                     	;# 
  1163  0112                     	;# 
  1164  0112                     	;# 
  1165  0113                     	;# 
  1166  0114                     	;# 
  1167  0114                     	;# 
  1168  0115                     	;# 
  1169  0116                     	;# 
  1170  0116                     	;# 
  1171  0117                     	;# 
  1172  0119                     	;# 
  1173  0119                     	;# 
  1174  0119                     	;# 
  1175  011A                     	;# 
  1176  011A                     	;# 
  1177  011A                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011B                     	;# 
  1183  011C                     	;# 
  1184  011C                     	;# 
  1185  011C                     	;# 
  1186  011D                     	;# 
  1187  011D                     	;# 
  1188  011D                     	;# 
  1189  011E                     	;# 
  1190  011E                     	;# 
  1191  011E                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  011F                     	;# 
  1197  018C                     	;# 
  1198  018D                     	;# 
  1199  018E                     	;# 
  1200  018F                     	;# 
  1201  0190                     	;# 
  1202  0191                     	;# 
  1203  0192                     	;# 
  1204  0196                     	;# 
  1205  0197                     	;# 
  1206  0198                     	;# 
  1207  0199                     	;# 
  1208  019A                     	;# 
  1209  019B                     	;# 
  1210  019C                     	;# 
  1211  020C                     	;# 
  1212  020C                     	;# 
  1213  020D                     	;# 
  1214  020E                     	;# 
  1215  020F                     	;# 
  1216  020F                     	;# 
  1217  0210                     	;# 
  1218  0210                     	;# 
  1219  0211                     	;# 
  1220  0211                     	;# 
  1221  0212                     	;# 
  1222  0212                     	;# 
  1223  0213                     	;# 
  1224  0214                     	;# 
  1225  0215                     	;# 
  1226  0215                     	;# 
  1227  0216                     	;# 
  1228  0216                     	;# 
  1229  0217                     	;# 
  1230  0217                     	;# 
  1231  0218                     	;# 
  1232  0218                     	;# 
  1233  0219                     	;# 
  1234  021A                     	;# 
  1235  021B                     	;# 
  1236  021B                     	;# 
  1237  021C                     	;# 
  1238  021C                     	;# 
  1239  021D                     	;# 
  1240  021D                     	;# 
  1241  021E                     	;# 
  1242  021F                     	;# 
  1243  028C                     	;# 
  1244  028C                     	;# 
  1245  028D                     	;# 
  1246  028D                     	;# 
  1247  028E                     	;# 
  1248  028F                     	;# 
  1249  0290                     	;# 
  1250  0290                     	;# 
  1251  0291                     	;# 
  1252  0292                     	;# 
  1253  0292                     	;# 
  1254  0293                     	;# 
  1255  0293                     	;# 
  1256  0294                     	;# 
  1257  0295                     	;# 
  1258  0296                     	;# 
  1259  0296                     	;# 
  1260  0297                     	;# 
  1261  0298                     	;# 
  1262  0298                     	;# 
  1263  0299                     	;# 
  1264  0299                     	;# 
  1265  029A                     	;# 
  1266  029B                     	;# 
  1267  029C                     	;# 
  1268  029C                     	;# 
  1269  029D                     	;# 
  1270  030C                     	;# 
  1271  030C                     	;# 
  1272  030D                     	;# 
  1273  030E                     	;# 
  1274  030F                     	;# 
  1275  0310                     	;# 
  1276  0310                     	;# 
  1277  0311                     	;# 
  1278  0312                     	;# 
  1279  0313                     	;# 
  1280  0314                     	;# 
  1281  0314                     	;# 
  1282  0315                     	;# 
  1283  0316                     	;# 
  1284  0317                     	;# 
  1285  0318                     	;# 
  1286  0318                     	;# 
  1287  0319                     	;# 
  1288  031A                     	;# 
  1289  031B                     	;# 
  1290  031C                     	;# 
  1291  031C                     	;# 
  1292  031D                     	;# 
  1293  031E                     	;# 
  1294  031F                     	;# 
  1295  038C                     	;# 
  1296  038C                     	;# 
  1297  038D                     	;# 
  1298  038E                     	;# 
  1299  0390                     	;# 
  1300  0390                     	;# 
  1301  0391                     	;# 
  1302  0392                     	;# 
  1303  040C                     	;# 
  1304  040D                     	;# 
  1305  040E                     	;# 
  1306  040F                     	;# 
  1307  0410                     	;# 
  1308  0411                     	;# 
  1309  0416                     	;# 
  1310  0416                     	;# 
  1311  0417                     	;# 
  1312  0418                     	;# 
  1313  0418                     	;# 
  1314  0419                     	;# 
  1315  041A                     	;# 
  1316  041A                     	;# 
  1317  041B                     	;# 
  1318  041C                     	;# 
  1319  041C                     	;# 
  1320  041D                     	;# 
  1321  041E                     	;# 
  1322  041F                     	;# 
  1323  048C                     	;# 
  1324  048C                     	;# 
  1325  048D                     	;# 
  1326  048E                     	;# 
  1327  048F                     	;# 
  1328  048F                     	;# 
  1329  0490                     	;# 
  1330  0491                     	;# 
  1331  0492                     	;# 
  1332  0492                     	;# 
  1333  0493                     	;# 
  1334  0494                     	;# 
  1335  0495                     	;# 
  1336  0495                     	;# 
  1337  0496                     	;# 
  1338  0497                     	;# 
  1339  0498                     	;# 
  1340  0499                     	;# 
  1341  049A                     	;# 
  1342  049B                     	;# 
  1343  049C                     	;# 
  1344  049D                     	;# 
  1345  050C                     	;# 
  1346  050C                     	;# 
  1347  050D                     	;# 
  1348  050E                     	;# 
  1349  050F                     	;# 
  1350  050F                     	;# 
  1351  0510                     	;# 
  1352  0511                     	;# 
  1353  0512                     	;# 
  1354  0512                     	;# 
  1355  0513                     	;# 
  1356  0514                     	;# 
  1357  0515                     	;# 
  1358  0515                     	;# 
  1359  0516                     	;# 
  1360  0517                     	;# 
  1361  0518                     	;# 
  1362  0519                     	;# 
  1363  051A                     	;# 
  1364  051B                     	;# 
  1365  051C                     	;# 
  1366  051D                     	;# 
  1367  058C                     	;# 
  1368  058C                     	;# 
  1369  058D                     	;# 
  1370  058E                     	;# 
  1371  058F                     	;# 
  1372  058F                     	;# 
  1373  0590                     	;# 
  1374  0591                     	;# 
  1375  0592                     	;# 
  1376  0593                     	;# 
  1377  060C                     	;# 
  1378  060D                     	;# 
  1379  060E                     	;# 
  1380  060F                     	;# 
  1381  0610                     	;# 
  1382  0611                     	;# 
  1383  0612                     	;# 
  1384  0613                     	;# 
  1385  0614                     	;# 
  1386  0616                     	;# 
  1387  0617                     	;# 
  1388  0618                     	;# 
  1389  0619                     	;# 
  1390  061A                     	;# 
  1391  061B                     	;# 
  1392  061C                     	;# 
  1393  061D                     	;# 
  1394  061E                     	;# 
  1395  068C                     	;# 
  1396  068D                     	;# 
  1397  068E                     	;# 
  1398  068F                     	;# 
  1399  0690                     	;# 
  1400  0691                     	;# 
  1401  0692                     	;# 
  1402  0693                     	;# 
  1403  0694                     	;# 
  1404  070C                     	;# 
  1405  070D                     	;# 
  1406  070E                     	;# 
  1407  070F                     	;# 
  1408  0710                     	;# 
  1409  0711                     	;# 
  1410  0712                     	;# 
  1411  0713                     	;# 
  1412  0714                     	;# 
  1413  0716                     	;# 
  1414  0717                     	;# 
  1415  0718                     	;# 
  1416  0719                     	;# 
  1417  071A                     	;# 
  1418  071B                     	;# 
  1419  071C                     	;# 
  1420  071D                     	;# 
  1421  071E                     	;# 
  1422  0796                     	;# 
  1423  0797                     	;# 
  1424  0798                     	;# 
  1425  0799                     	;# 
  1426  079A                     	;# 
  1427  079B                     	;# 
  1428  080C                     	;# 
  1429  080D                     	;# 
  1430  080E                     	;# 
  1431  080F                     	;# 
  1432  0810                     	;# 
  1433  0811                     	;# 
  1434  0812                     	;# 
  1435  0813                     	;# 
  1436  0814                     	;# 
  1437  081A                     	;# 
  1438  081B                     	;# 
  1439  081C                     	;# 
  1440  081D                     	;# 
  1441  081E                     	;# 
  1442  081F                     	;# 
  1443  088C                     	;# 
  1444  088D                     	;# 
  1445  088E                     	;# 
  1446  088F                     	;# 
  1447  0890                     	;# 
  1448  0891                     	;# 
  1449  0892                     	;# 
  1450  0893                     	;# 
  1451  0895                     	;# 
  1452  0896                     	;# 
  1453  0897                     	;# 
  1454  0898                     	;# 
  1455  0899                     	;# 
  1456  089A                     	;# 
  1457  089B                     	;# 
  1458  090C                     	;# 
  1459  090E                     	;# 
  1460  090F                     	;# 
  1461  091F                     	;# 
  1462  091F                     	;# 
  1463  098F                     	;# 
  1464  098F                     	;# 
  1465  0990                     	;# 
  1466  0991                     	;# 
  1467  0992                     	;# 
  1468  0993                     	;# 
  1469  0994                     	;# 
  1470  0995                     	;# 
  1471  0996                     	;# 
  1472  0997                     	;# 
  1473  0E0F                     	;# 
  1474  0E10                     	;# 
  1475  0E11                     	;# 
  1476  0E12                     	;# 
  1477  0E13                     	;# 
  1478  0E14                     	;# 
  1479  0E15                     	;# 
  1480  0E16                     	;# 
  1481  0E17                     	;# 
  1482  0E18                     	;# 
  1483  0E19                     	;# 
  1484  0E1A                     	;# 
  1485  0E1B                     	;# 
  1486  0E1C                     	;# 
  1487  0E1D                     	;# 
  1488  0E1E                     	;# 
  1489  0E1F                     	;# 
  1490  0E20                     	;# 
  1491  0E21                     	;# 
  1492  0E22                     	;# 
  1493  0E23                     	;# 
  1494  0E24                     	;# 
  1495  0E25                     	;# 
  1496  0E26                     	;# 
  1497  0E27                     	;# 
  1498  0E28                     	;# 
  1499  0E29                     	;# 
  1500  0E2A                     	;# 
  1501  0E2B                     	;# 
  1502  0E2C                     	;# 
  1503  0E2D                     	;# 
  1504  0E2E                     	;# 
  1505  0E2F                     	;# 
  1506  0E30                     	;# 
  1507  0E31                     	;# 
  1508  0E32                     	;# 
  1509  0E33                     	;# 
  1510  0E34                     	;# 
  1511  0E35                     	;# 
  1512  0E36                     	;# 
  1513  0E37                     	;# 
  1514  0E8F                     	;# 
  1515  0E90                     	;# 
  1516  0E91                     	;# 
  1517  0E92                     	;# 
  1518  0E93                     	;# 
  1519  0E94                     	;# 
  1520  0E95                     	;# 
  1521  0E96                     	;# 
  1522  0E97                     	;# 
  1523  0E9C                     	;# 
  1524  0E9D                     	;# 
  1525  0E9E                     	;# 
  1526  0EA1                     	;# 
  1527  0EA2                     	;# 
  1528  0EA3                     	;# 
  1529  0EA4                     	;# 
  1530  0EA5                     	;# 
  1531  0EA9                     	;# 
  1532  0EAA                     	;# 
  1533  0EAB                     	;# 
  1534  0EAC                     	;# 
  1535  0EB1                     	;# 
  1536  0EB2                     	;# 
  1537  0EB3                     	;# 
  1538  0EB8                     	;# 
  1539  0EB9                     	;# 
  1540  0EBA                     	;# 
  1541  0EBB                     	;# 
  1542  0EBC                     	;# 
  1543  0EBD                     	;# 
  1544  0EBE                     	;# 
  1545  0EC3                     	;# 
  1546  0EC5                     	;# 
  1547  0EC6                     	;# 
  1548  0EC7                     	;# 
  1549  0EC8                     	;# 
  1550  0EC9                     	;# 
  1551  0ECA                     	;# 
  1552  0ECB                     	;# 
  1553  0ECC                     	;# 
  1554  0F10                     	;# 
  1555  0F11                     	;# 
  1556  0F12                     	;# 
  1557  0F13                     	;# 
  1558  0F14                     	;# 
  1559  0F15                     	;# 
  1560  0F16                     	;# 
  1561  0F17                     	;# 
  1562  0F18                     	;# 
  1563  0F19                     	;# 
  1564  0F1A                     	;# 
  1565  0F1B                     	;# 
  1566  0F1C                     	;# 
  1567  0F1D                     	;# 
  1568  0F1E                     	;# 
  1569  0F1F                     	;# 
  1570  0F20                     	;# 
  1571  0F21                     	;# 
  1572  0F22                     	;# 
  1573  0F23                     	;# 
  1574  0F24                     	;# 
  1575  0F25                     	;# 
  1576  0F26                     	;# 
  1577  0F27                     	;# 
  1578  0F38                     	;# 
  1579  0F39                     	;# 
  1580  0F3A                     	;# 
  1581  0F3B                     	;# 
  1582  0F3C                     	;# 
  1583  0F3D                     	;# 
  1584  0F3E                     	;# 
  1585  0F3F                     	;# 
  1586  0F40                     	;# 
  1587  0F41                     	;# 
  1588  0F43                     	;# 
  1589  0F44                     	;# 
  1590  0F45                     	;# 
  1591  0F46                     	;# 
  1592  0F47                     	;# 
  1593  0F48                     	;# 
  1594  0F49                     	;# 
  1595  0F4A                     	;# 
  1596  0F4B                     	;# 
  1597  0F4C                     	;# 
  1598  0F4E                     	;# 
  1599  0F4F                     	;# 
  1600  0F50                     	;# 
  1601  0F51                     	;# 
  1602  0F52                     	;# 
  1603  0F53                     	;# 
  1604  0F54                     	;# 
  1605  0F55                     	;# 
  1606  0F56                     	;# 
  1607  0F57                     	;# 
  1608  0F65                     	;# 
  1609  0F68                     	;# 
  1610  0F69                     	;# 
  1611  0F6A                     	;# 
  1612  0F6B                     	;# 
  1613  0FE4                     	;# 
  1614  0FE5                     	;# 
  1615  0FE6                     	;# 
  1616  0FE7                     	;# 
  1617  0FE8                     	;# 
  1618  0FE9                     	;# 
  1619  0FEA                     	;# 
  1620  0FEB                     	;# 
  1621  0FED                     	;# 
  1622  0FEE                     	;# 
  1623  0FEF                     	;# 
  1624  0000                     	;# 
  1625  0001                     	;# 
  1626  0002                     	;# 
  1627  0003                     	;# 
  1628  0004                     	;# 
  1629  0005                     	;# 
  1630  0006                     	;# 
  1631  0007                     	;# 
  1632  0008                     	;# 
  1633  0009                     	;# 
  1634  000A                     	;# 
  1635  000B                     	;# 
  1636  000C                     	;# 
  1637  000D                     	;# 
  1638  000E                     	;# 
  1639  0010                     	;# 
  1640  0011                     	;# 
  1641  0012                     	;# 
  1642  0013                     	;# 
  1643  0016                     	;# 
  1644  0017                     	;# 
  1645  0018                     	;# 
  1646  001C                     	;# 
  1647  001C                     	;# 
  1648  001D                     	;# 
  1649  001D                     	;# 
  1650  001E                     	;# 
  1651  001F                     	;# 
  1652  008C                     	;# 
  1653  008C                     	;# 
  1654  008D                     	;# 
  1655  008E                     	;# 
  1656  008E                     	;# 
  1657  008F                     	;# 
  1658  0090                     	;# 
  1659  0090                     	;# 
  1660  0091                     	;# 
  1661  0093                     	;# 
  1662  0094                     	;# 
  1663  0095                     	;# 
  1664  0096                     	;# 
  1665  0097                     	;# 
  1666  0098                     	;# 
  1667  0099                     	;# 
  1668  009A                     	;# 
  1669  009B                     	;# 
  1670  009C                     	;# 
  1671  009D                     	;# 
  1672  009E                     	;# 
  1673  010C                     	;# 
  1674  010D                     	;# 
  1675  010E                     	;# 
  1676  010E                     	;# 
  1677  010F                     	;# 
  1678  0110                     	;# 
  1679  0110                     	;# 
  1680  0111                     	;# 
  1681  0112                     	;# 
  1682  0112                     	;# 
  1683  0113                     	;# 
  1684  0114                     	;# 
  1685  0114                     	;# 
  1686  0115                     	;# 
  1687  0116                     	;# 
  1688  0116                     	;# 
  1689  0117                     	;# 
  1690  0119                     	;# 
  1691  0119                     	;# 
  1692  0119                     	;# 
  1693  011A                     	;# 
  1694  011A                     	;# 
  1695  011A                     	;# 
  1696  011B                     	;# 
  1697  011B                     	;# 
  1698  011B                     	;# 
  1699  011B                     	;# 
  1700  011B                     	;# 
  1701  011C                     	;# 
  1702  011C                     	;# 
  1703  011C                     	;# 
  1704  011D                     	;# 
  1705  011D                     	;# 
  1706  011D                     	;# 
  1707  011E                     	;# 
  1708  011E                     	;# 
  1709  011E                     	;# 
  1710  011F                     	;# 
  1711  011F                     	;# 
  1712  011F                     	;# 
  1713  011F                     	;# 
  1714  011F                     	;# 
  1715  018C                     	;# 
  1716  018D                     	;# 
  1717  018E                     	;# 
  1718  018F                     	;# 
  1719  0190                     	;# 
  1720  0191                     	;# 
  1721  0192                     	;# 
  1722  0196                     	;# 
  1723  0197                     	;# 
  1724  0198                     	;# 
  1725  0199                     	;# 
  1726  019A                     	;# 
  1727  019B                     	;# 
  1728  019C                     	;# 
  1729  020C                     	;# 
  1730  020C                     	;# 
  1731  020D                     	;# 
  1732  020E                     	;# 
  1733  020F                     	;# 
  1734  020F                     	;# 
  1735  0210                     	;# 
  1736  0210                     	;# 
  1737  0211                     	;# 
  1738  0211                     	;# 
  1739  0212                     	;# 
  1740  0212                     	;# 
  1741  0213                     	;# 
  1742  0214                     	;# 
  1743  0215                     	;# 
  1744  0215                     	;# 
  1745  0216                     	;# 
  1746  0216                     	;# 
  1747  0217                     	;# 
  1748  0217                     	;# 
  1749  0218                     	;# 
  1750  0218                     	;# 
  1751  0219                     	;# 
  1752  021A                     	;# 
  1753  021B                     	;# 
  1754  021B                     	;# 
  1755  021C                     	;# 
  1756  021C                     	;# 
  1757  021D                     	;# 
  1758  021D                     	;# 
  1759  021E                     	;# 
  1760  021F                     	;# 
  1761  028C                     	;# 
  1762  028C                     	;# 
  1763  028D                     	;# 
  1764  028D                     	;# 
  1765  028E                     	;# 
  1766  028F                     	;# 
  1767  0290                     	;# 
  1768  0290                     	;# 
  1769  0291                     	;# 
  1770  0292                     	;# 
  1771  0292                     	;# 
  1772  0293                     	;# 
  1773  0293                     	;# 
  1774  0294                     	;# 
  1775  0295                     	;# 
  1776  0296                     	;# 
  1777  0296                     	;# 
  1778  0297                     	;# 
  1779  0298                     	;# 
  1780  0298                     	;# 
  1781  0299                     	;# 
  1782  0299                     	;# 
  1783  029A                     	;# 
  1784  029B                     	;# 
  1785  029C                     	;# 
  1786  029C                     	;# 
  1787  029D                     	;# 
  1788  030C                     	;# 
  1789  030C                     	;# 
  1790  030D                     	;# 
  1791  030E                     	;# 
  1792  030F                     	;# 
  1793  0310                     	;# 
  1794  0310                     	;# 
  1795  0311                     	;# 
  1796  0312                     	;# 
  1797  0313                     	;# 
  1798  0314                     	;# 
  1799  0314                     	;# 
  1800  0315                     	;# 
  1801  0316                     	;# 
  1802  0317                     	;# 
  1803  0318                     	;# 
  1804  0318                     	;# 
  1805  0319                     	;# 
  1806  031A                     	;# 
  1807  031B                     	;# 
  1808  031C                     	;# 
  1809  031C                     	;# 
  1810  031D                     	;# 
  1811  031E                     	;# 
  1812  031F                     	;# 
  1813  038C                     	;# 
  1814  038C                     	;# 
  1815  038D                     	;# 
  1816  038E                     	;# 
  1817  0390                     	;# 
  1818  0390                     	;# 
  1819  0391                     	;# 
  1820  0392                     	;# 
  1821  040C                     	;# 
  1822  040D                     	;# 
  1823  040E                     	;# 
  1824  040F                     	;# 
  1825  0410                     	;# 
  1826  0411                     	;# 
  1827  0416                     	;# 
  1828  0416                     	;# 
  1829  0417                     	;# 
  1830  0418                     	;# 
  1831  0418                     	;# 
  1832  0419                     	;# 
  1833  041A                     	;# 
  1834  041A                     	;# 
  1835  041B                     	;# 
  1836  041C                     	;# 
  1837  041C                     	;# 
  1838  041D                     	;# 
  1839  041E                     	;# 
  1840  041F                     	;# 
  1841  048C                     	;# 
  1842  048C                     	;# 
  1843  048D                     	;# 
  1844  048E                     	;# 
  1845  048F                     	;# 
  1846  048F                     	;# 
  1847  0490                     	;# 
  1848  0491                     	;# 
  1849  0492                     	;# 
  1850  0492                     	;# 
  1851  0493                     	;# 
  1852  0494                     	;# 
  1853  0495                     	;# 
  1854  0495                     	;# 
  1855  0496                     	;# 
  1856  0497                     	;# 
  1857  0498                     	;# 
  1858  0499                     	;# 
  1859  049A                     	;# 
  1860  049B                     	;# 
  1861  049C                     	;# 
  1862  049D                     	;# 
  1863  050C                     	;# 
  1864  050C                     	;# 
  1865  050D                     	;# 
  1866  050E                     	;# 
  1867  050F                     	;# 
  1868  050F                     	;# 
  1869  0510                     	;# 
  1870  0511                     	;# 
  1871  0512                     	;# 
  1872  0512                     	;# 
  1873  0513                     	;# 
  1874  0514                     	;# 
  1875  0515                     	;# 
  1876  0515                     	;# 
  1877  0516                     	;# 
  1878  0517                     	;# 
  1879  0518                     	;# 
  1880  0519                     	;# 
  1881  051A                     	;# 
  1882  051B                     	;# 
  1883  051C                     	;# 
  1884  051D                     	;# 
  1885  058C                     	;# 
  1886  058C                     	;# 
  1887  058D                     	;# 
  1888  058E                     	;# 
  1889  058F                     	;# 
  1890  058F                     	;# 
  1891  0590                     	;# 
  1892  0591                     	;# 
  1893  0592                     	;# 
  1894  0593                     	;# 
  1895  060C                     	;# 
  1896  060D                     	;# 
  1897  060E                     	;# 
  1898  060F                     	;# 
  1899  0610                     	;# 
  1900  0611                     	;# 
  1901  0612                     	;# 
  1902  0613                     	;# 
  1903  0614                     	;# 
  1904  0616                     	;# 
  1905  0617                     	;# 
  1906  0618                     	;# 
  1907  0619                     	;# 
  1908  061A                     	;# 
  1909  061B                     	;# 
  1910  061C                     	;# 
  1911  061D                     	;# 
  1912  061E                     	;# 
  1913  068C                     	;# 
  1914  068D                     	;# 
  1915  068E                     	;# 
  1916  068F                     	;# 
  1917  0690                     	;# 
  1918  0691                     	;# 
  1919  0692                     	;# 
  1920  0693                     	;# 
  1921  0694                     	;# 
  1922  070C                     	;# 
  1923  070D                     	;# 
  1924  070E                     	;# 
  1925  070F                     	;# 
  1926  0710                     	;# 
  1927  0711                     	;# 
  1928  0712                     	;# 
  1929  0713                     	;# 
  1930  0714                     	;# 
  1931  0716                     	;# 
  1932  0717                     	;# 
  1933  0718                     	;# 
  1934  0719                     	;# 
  1935  071A                     	;# 
  1936  071B                     	;# 
  1937  071C                     	;# 
  1938  071D                     	;# 
  1939  071E                     	;# 
  1940  0796                     	;# 
  1941  0797                     	;# 
  1942  0798                     	;# 
  1943  0799                     	;# 
  1944  079A                     	;# 
  1945  079B                     	;# 
  1946  080C                     	;# 
  1947  080D                     	;# 
  1948  080E                     	;# 
  1949  080F                     	;# 
  1950  0810                     	;# 
  1951  0811                     	;# 
  1952  0812                     	;# 
  1953  0813                     	;# 
  1954  0814                     	;# 
  1955  081A                     	;# 
  1956  081B                     	;# 
  1957  081C                     	;# 
  1958  081D                     	;# 
  1959  081E                     	;# 
  1960  081F                     	;# 
  1961  088C                     	;# 
  1962  088D                     	;# 
  1963  088E                     	;# 
  1964  088F                     	;# 
  1965  0890                     	;# 
  1966  0891                     	;# 
  1967  0892                     	;# 
  1968  0893                     	;# 
  1969  0895                     	;# 
  1970  0896                     	;# 
  1971  0897                     	;# 
  1972  0898                     	;# 
  1973  0899                     	;# 
  1974  089A                     	;# 
  1975  089B                     	;# 
  1976  090C                     	;# 
  1977  090E                     	;# 
  1978  090F                     	;# 
  1979  091F                     	;# 
  1980  091F                     	;# 
  1981  098F                     	;# 
  1982  098F                     	;# 
  1983  0990                     	;# 
  1984  0991                     	;# 
  1985  0992                     	;# 
  1986  0993                     	;# 
  1987  0994                     	;# 
  1988  0995                     	;# 
  1989  0996                     	;# 
  1990  0997                     	;# 
  1991  0E0F                     	;# 
  1992  0E10                     	;# 
  1993  0E11                     	;# 
  1994  0E12                     	;# 
  1995  0E13                     	;# 
  1996  0E14                     	;# 
  1997  0E15                     	;# 
  1998  0E16                     	;# 
  1999  0E17                     	;# 
  2000  0E18                     	;# 
  2001  0E19                     	;# 
  2002  0E1A                     	;# 
  2003  0E1B                     	;# 
  2004  0E1C                     	;# 
  2005  0E1D                     	;# 
  2006  0E1E                     	;# 
  2007  0E1F                     	;# 
  2008  0E20                     	;# 
  2009  0E21                     	;# 
  2010  0E22                     	;# 
  2011  0E23                     	;# 
  2012  0E24                     	;# 
  2013  0E25                     	;# 
  2014  0E26                     	;# 
  2015  0E27                     	;# 
  2016  0E28                     	;# 
  2017  0E29                     	;# 
  2018  0E2A                     	;# 
  2019  0E2B                     	;# 
  2020  0E2C                     	;# 
  2021  0E2D                     	;# 
  2022  0E2E                     	;# 
  2023  0E2F                     	;# 
  2024  0E30                     	;# 
  2025  0E31                     	;# 
  2026  0E32                     	;# 
  2027  0E33                     	;# 
  2028  0E34                     	;# 
  2029  0E35                     	;# 
  2030  0E36                     	;# 
  2031  0E37                     	;# 
  2032  0E8F                     	;# 
  2033  0E90                     	;# 
  2034  0E91                     	;# 
  2035  0E92                     	;# 
  2036  0E93                     	;# 
  2037  0E94                     	;# 
  2038  0E95                     	;# 
  2039  0E96                     	;# 
  2040  0E97                     	;# 
  2041  0E9C                     	;# 
  2042  0E9D                     	;# 
  2043  0E9E                     	;# 
  2044  0EA1                     	;# 
  2045  0EA2                     	;# 
  2046  0EA3                     	;# 
  2047  0EA4                     	;# 
  2048  0EA5                     	;# 
  2049  0EA9                     	;# 
  2050  0EAA                     	;# 
  2051  0EAB                     	;# 
  2052  0EAC                     	;# 
  2053  0EB1                     	;# 
  2054  0EB2                     	;# 
  2055  0EB3                     	;# 
  2056  0EB8                     	;# 
  2057  0EB9                     	;# 
  2058  0EBA                     	;# 
  2059  0EBB                     	;# 
  2060  0EBC                     	;# 
  2061  0EBD                     	;# 
  2062  0EBE                     	;# 
  2063  0EC3                     	;# 
  2064  0EC5                     	;# 
  2065  0EC6                     	;# 
  2066  0EC7                     	;# 
  2067  0EC8                     	;# 
  2068  0EC9                     	;# 
  2069  0ECA                     	;# 
  2070  0ECB                     	;# 
  2071  0ECC                     	;# 
  2072  0F10                     	;# 
  2073  0F11                     	;# 
  2074  0F12                     	;# 
  2075  0F13                     	;# 
  2076  0F14                     	;# 
  2077  0F15                     	;# 
  2078  0F16                     	;# 
  2079  0F17                     	;# 
  2080  0F18                     	;# 
  2081  0F19                     	;# 
  2082  0F1A                     	;# 
  2083  0F1B                     	;# 
  2084  0F1C                     	;# 
  2085  0F1D                     	;# 
  2086  0F1E                     	;# 
  2087  0F1F                     	;# 
  2088  0F20                     	;# 
  2089  0F21                     	;# 
  2090  0F22                     	;# 
  2091  0F23                     	;# 
  2092  0F24                     	;# 
  2093  0F25                     	;# 
  2094  0F26                     	;# 
  2095  0F27                     	;# 
  2096  0F38                     	;# 
  2097  0F39                     	;# 
  2098  0F3A                     	;# 
  2099  0F3B                     	;# 
  2100  0F3C                     	;# 
  2101  0F3D                     	;# 
  2102  0F3E                     	;# 
  2103  0F3F                     	;# 
  2104  0F40                     	;# 
  2105  0F41                     	;# 
  2106  0F43                     	;# 
  2107  0F44                     	;# 
  2108  0F45                     	;# 
  2109  0F46                     	;# 
  2110  0F47                     	;# 
  2111  0F48                     	;# 
  2112  0F49                     	;# 
  2113  0F4A                     	;# 
  2114  0F4B                     	;# 
  2115  0F4C                     	;# 
  2116  0F4E                     	;# 
  2117  0F4F                     	;# 
  2118  0F50                     	;# 
  2119  0F51                     	;# 
  2120  0F52                     	;# 
  2121  0F53                     	;# 
  2122  0F54                     	;# 
  2123  0F55                     	;# 
  2124  0F56                     	;# 
  2125  0F57                     	;# 
  2126  0F65                     	;# 
  2127  0F68                     	;# 
  2128  0F69                     	;# 
  2129  0F6A                     	;# 
  2130  0F6B                     	;# 
  2131  0FE4                     	;# 
  2132  0FE5                     	;# 
  2133  0FE6                     	;# 
  2134  0FE7                     	;# 
  2135  0FE8                     	;# 
  2136  0FE9                     	;# 
  2137  0FEA                     	;# 
  2138  0FEB                     	;# 
  2139  0FED                     	;# 
  2140  0FEE                     	;# 
  2141  0FEF                     	;# 
  2142                           
  2143                           	psect	idataBANK1
  2144  0E20                     __pidataBANK1:	
  2145                           
  2146                           ;initializer for _char_lookup
  2147  0E20  34BE               	retlw	190
  2148  0E21  3482               	retlw	130
  2149  0E22  3437               	retlw	55
  2150  0E23  34A7               	retlw	167
  2151  0E24  348B               	retlw	139
  2152  0E25  34AD               	retlw	173
  2153  0E26  34BD               	retlw	189
  2154  0E27  3486               	retlw	134
  2155  0E28  34BF               	retlw	191
  2156  0E29  34AF               	retlw	175
  2157  0018                     _LATC	set	24
  2158  0017                     _LATBbits	set	23
  2159  000B                     _INTCONbits	set	11
  2160  000D                     _PORTBbits	set	13
  2161  0016                     _LATAbits	set	22
  2162  0012                     _TRISBbits	set	18
  2163  0013                     _TRISCbits	set	19
  2164  0011                     _TRISAbits	set	17
  2165  000C                     _PORTAbits	set	12
  2166  020E                     _T1CONbits	set	526
  2167  0211                     _T1CLKbits	set	529
  2168  028D                     _PR2	set	653
  2169  028E                     _T2CONbits	set	654
  2170  0290                     _T2CLKCONbits	set	656
  2171  0310                     _CCPR2L	set	784
  2172  0311                     _CCPR2H	set	785
  2173  030C                     _CCPR1L	set	780
  2174  030D                     _CCPR1H	set	781
  2175  0313                     _CCP2CAPbits	set	787
  2176  0312                     _CCP2CONbits	set	786
  2177  030F                     _CCP1CAPbits	set	783
  2178  030E                     _CCP1CONbits	set	782
  2179  071C                     _PIE6bits	set	1820
  2180  071A                     _PIE4bits	set	1818
  2181  0712                     _PIR6bits	set	1810
  2182  0710                     _PIR4bits	set	1808
  2183  0EA2                     _CCP2PPS	set	3746
  2184  0EA1                     _CCP1PPS	set	3745
  2185  0E8F                     _PPSLOCKbits	set	3727
  2186  0E8F                     _PPSLOCK	set	3727
  2187  0F43                     _ANSELBbits	set	3907
  2188  0F38                     _ANSELAbits	set	3896
  2189                           
  2190                           ; #config settings
  2191  0000                     
  2192                           	psect	cinit
  2193  0021                     start_initialization:	
  2194  0021                     __initialization:	
  2195                           
  2196                           ; Initialize objects allocated to BANK1
  2197  0021  3020               	movlw	low __pidataBANK1
  2198  0022  0084               	movwf	4
  2199  0023  308E               	movlw	(high __pidataBANK1)| (0+128)
  2200  0024  0085               	movwf	5
  2201  0025  30A0               	movlw	low __pdataBANK1
  2202  0026  0086               	movwf	6
  2203  0027  3000               	movlw	high __pdataBANK1
  2204  0028  0087               	movwf	7
  2205  0029  300A               	movlw	10
  2206  002A  318E  261A  3180   	fcall	init_ram
  2207                           
  2208                           ; Clear objects allocated to COMMON
  2209  002D  01F8               	clrf	__pbssCOMMON& (0+127)
  2210  002E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2211                           
  2212                           ; Clear objects allocated to BANK0
  2213  002F  3058               	movlw	low __pbssBANK0
  2214  0030  0084               	movwf	4
  2215  0031  3000               	movlw	high __pbssBANK0
  2216  0032  0085               	movwf	5
  2217  0033  3016               	movlw	22
  2218  0034  318E  2614         	fcall	clear_ram0
  2219                           
  2220                           ; Clear objects allocated to BANK1
  2221  0036  0021               	movlb	1	; select bank1
  2222  0037  01AA               	clrf	__pbssBANK1& (0+127)
  2223  0038  01AB               	clrf	(__pbssBANK1+1)& (0+127)
  2224  0039  01AC               	clrf	(__pbssBANK1+2)& (0+127)
  2225  003A  01AD               	clrf	(__pbssBANK1+3)& (0+127)
  2226  003B                     end_of_initialization:	
  2227                           ;End of C runtime variable initialization code
  2228                           
  2229  003B                     __end_of__initialization:	
  2230  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2231  003C  0020               	movlb	0
  2232  003D  318E  2E4E         	ljmp	_main	;jump to C main() function
  2233                           
  2234                           	psect	bssCOMMON
  2235  0078                     __pbssCOMMON:	
  2236  0078                     _rollover_cnt:	
  2237  0078                     	ds	1
  2238  0079                     _segment:	
  2239  0079                     	ds	1
  2240                           
  2241                           	psect	bssBANK0
  2242  0058                     __pbssBANK0:	
  2243  0058                     _os:	
  2244  0058                     	ds	18
  2245  006A                     _time:	
  2246  006A                     	ds	4
  2247                           
  2248                           	psect	bssBANK1
  2249  00AA                     __pbssBANK1:	
  2250  00AA                     _characters:	
  2251  00AA                     	ds	4
  2252                           
  2253                           	psect	dataBANK1
  2254  00A0                     __pdataBANK1:	
  2255  00A0                     _char_lookup:	
  2256  00A0                     	ds	10
  2257                           
  2258                           	psect	inittext
  2259  0E1A                     init_ram:	
  2260  0E1A  00FE               	movwf	126
  2261  0E1B                     initloop:	
  2262  0E1B  0012               	moviw fsr0++
  2263  0E1C  001E               	movwi fsr1++
  2264  0E1D  0BFE               	decfsz	126,f
  2265  0E1E  2E1B               	goto	initloop
  2266  0E1F  3400               	retlw	0
  2267                           
  2268                           	psect	clrtext
  2269  0E14                     clear_ram0:	
  2270                           ;	Called with FSR0 containing the base address, and
  2271                           ;	WREG with the size to clear
  2272                           
  2273  0E14  0064               	clrwdt	;clear the watchdog before getting into this loop
  2274  0E15                     clrloop0:	
  2275  0E15  0180               	clrf	0	;clear RAM location pointed to by FSR
  2276  0E16  3101               	addfsr 0,1
  2277  0E17  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2278  0E18  2E15               	goto	clrloop0	;have we reached the end yet?
  2279  0E19  3400               	retlw	0	;all done for this memory range, return
  2280                           
  2281                           	psect	cstackCOMMON
  2282  0070                     __pcstackCOMMON:	
  2283  0070                     ?__system_init:	
  2284  0070                     ?__handle_relays:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287  0070                     ?__calculate_speed:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290  0070                     ?_timer_1_isr:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293  0070                     ??_timer_1_isr:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296  0070                     ?_capture_A_isr:	
  2297                           ; 1 bytes @ 0x0
  2298                           
  2299  0070                     ??_capture_A_isr:	
  2300                           ; 1 bytes @ 0x0
  2301                           
  2302  0070                     ?_capture_B_isr:	
  2303                           ; 1 bytes @ 0x0
  2304                           
  2305  0070                     ??_capture_B_isr:	
  2306                           ; 1 bytes @ 0x0
  2307                           
  2308  0070                     ?_display_isr:	
  2309                           ; 1 bytes @ 0x0
  2310                           
  2311  0070                     ??_display_isr:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314  0070                     ?_display_init:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317  0070                     ?_encoder_init:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320  0070                     ?_main:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323  0070                     ?__isr:	
  2324                           ; 1 bytes @ 0x0
  2325                           
  2326                           
  2327                           ; 1 bytes @ 0x0
  2328  0070                     	ds	4
  2329  0074                     ??__handle_relays:	
  2330  0074                     ??_display_init:	
  2331                           ; 1 bytes @ 0x4
  2332                           
  2333  0074                     ??_encoder_init:	
  2334                           ; 1 bytes @ 0x4
  2335                           
  2336  0074                     ??__isr:	
  2337                           ; 1 bytes @ 0x4
  2338                           
  2339  0074                     ??___lmul:	
  2340                           ; 1 bytes @ 0x4
  2341                           
  2342  0074                     ?__Umul8_16:	
  2343                           ; 1 bytes @ 0x4
  2344                           
  2345  0074                     ?___lwdiv:	
  2346                           ; 2 bytes @ 0x4
  2347                           
  2348  0074                     ?___lwmod:	
  2349                           ; 2 bytes @ 0x4
  2350                           
  2351  0074                     ?___fltol:	
  2352                           ; 2 bytes @ 0x4
  2353                           
  2354  0074                     ?___xxtofl:	
  2355                           ; 4 bytes @ 0x4
  2356                           
  2357  0074                     __Umul8_16@multiplicand:	
  2358                           ; 4 bytes @ 0x4
  2359                           
  2360  0074                     ___lwdiv@divisor:	
  2361                           ; 1 bytes @ 0x4
  2362                           
  2363  0074                     ___lwmod@divisor:	
  2364                           ; 2 bytes @ 0x4
  2365                           
  2366  0074                     ___lmul@product:	
  2367                           ; 2 bytes @ 0x4
  2368                           
  2369  0074                     ___fltol@f1:	
  2370                           ; 4 bytes @ 0x4
  2371                           
  2372  0074                     ___xxtofl@val:	
  2373                           ; 4 bytes @ 0x4
  2374                           
  2375                           
  2376                           ; 4 bytes @ 0x4
  2377  0074                     	ds	1
  2378  0075                     ??__system_init:	
  2379                           
  2380                           ; 1 bytes @ 0x5
  2381  0075                     	ds	1
  2382  0076                     ??__Umul8_16:	
  2383  0076                     ___lwdiv@dividend:	
  2384                           ; 1 bytes @ 0x6
  2385                           
  2386  0076                     ___lwmod@dividend:	
  2387                           ; 2 bytes @ 0x6
  2388                           
  2389                           
  2390                           ; 2 bytes @ 0x6
  2391  0076                     	ds	2
  2392  0078                     ??_main:	
  2393                           
  2394                           	psect	cstackBANK0
  2395  0020                     __pcstackBANK0:	
  2396                           ; 1 bytes @ 0x8
  2397                           
  2398  0020                     ??___fltol:	
  2399  0020                     ??___lwdiv:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0020                     ??___lwmod:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0020                     ??___xxtofl:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0020                     ?___lmul:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0020                     __Umul8_16@product:	
  2412                           ; 4 bytes @ 0x0
  2413                           
  2414  0020                     ___lmul@multiplier:	
  2415                           ; 2 bytes @ 0x0
  2416                           
  2417                           
  2418                           ; 4 bytes @ 0x0
  2419  0020                     	ds	1
  2420  0021                     ___lwdiv@counter:	
  2421  0021                     ___lwmod@counter:	
  2422                           ; 1 bytes @ 0x1
  2423                           
  2424                           
  2425                           ; 1 bytes @ 0x1
  2426  0021                     	ds	1
  2427  0022                     ___lwdiv@quotient:	
  2428  0022                     __Umul8_16@word_mpld:	
  2429                           ; 2 bytes @ 0x2
  2430                           
  2431                           
  2432                           ; 2 bytes @ 0x2
  2433  0022                     	ds	2
  2434  0024                     ?_display_set:	
  2435  0024                     ___xxtofl@sign:	
  2436                           ; 1 bytes @ 0x4
  2437                           
  2438  0024                     __Umul8_16@multiplier:	
  2439                           ; 1 bytes @ 0x4
  2440                           
  2441  0024                     display_set@value:	
  2442                           ; 1 bytes @ 0x4
  2443                           
  2444  0024                     ___lmul@multiplicand:	
  2445                           ; 2 bytes @ 0x4
  2446                           
  2447                           
  2448                           ; 4 bytes @ 0x4
  2449  0024                     	ds	1
  2450  0025                     ?___flmul:	
  2451  0025                     ___fltol@sign1:	
  2452                           ; 4 bytes @ 0x5
  2453                           
  2454  0025                     ___xxtofl@exp:	
  2455                           ; 1 bytes @ 0x5
  2456                           
  2457  0025                     ___flmul@b:	
  2458                           ; 1 bytes @ 0x5
  2459                           
  2460                           
  2461                           ; 4 bytes @ 0x5
  2462  0025                     	ds	1
  2463  0026                     display_set@decimal_flags:	
  2464  0026                     ___fltol@exp1:	
  2465                           ; 1 bytes @ 0x6
  2466                           
  2467  0026                     ___xxtofl@arg:	
  2468                           ; 1 bytes @ 0x6
  2469                           
  2470                           
  2471                           ; 4 bytes @ 0x6
  2472  0026                     	ds	1
  2473  0027                     ??_display_set:	
  2474                           
  2475                           ; 1 bytes @ 0x7
  2476  0027                     	ds	2
  2477  0029                     display_set@temp_chars:	
  2478  0029                     ___flmul@a:	
  2479                           ; 4 bytes @ 0x9
  2480                           
  2481                           
  2482                           ; 4 bytes @ 0x9
  2483  0029                     	ds	1
  2484  002A                     ?___fldiv:	
  2485  002A                     ___fldiv@a:	
  2486                           ; 4 bytes @ 0xA
  2487                           
  2488                           
  2489                           ; 4 bytes @ 0xA
  2490  002A                     	ds	3
  2491  002D                     ??___flmul:	
  2492  002D                     display_set@abs_value:	
  2493                           ; 1 bytes @ 0xD
  2494                           
  2495                           
  2496                           ; 2 bytes @ 0xD
  2497  002D                     	ds	1
  2498  002E                     ___fldiv@b:	
  2499                           
  2500                           ; 4 bytes @ 0xE
  2501  002E                     	ds	4
  2502  0032                     ??___fldiv:	
  2503  0032                     ___flmul@sign:	
  2504                           ; 1 bytes @ 0x12
  2505                           
  2506                           
  2507                           ; 1 bytes @ 0x12
  2508  0032                     	ds	1
  2509  0033                     ___flmul@grs:	
  2510                           
  2511                           ; 4 bytes @ 0x13
  2512  0033                     	ds	4
  2513  0037                     ___flmul@aexp:	
  2514  0037                     ___fldiv@rem:	
  2515                           ; 1 bytes @ 0x17
  2516                           
  2517                           
  2518                           ; 4 bytes @ 0x17
  2519  0037                     	ds	1
  2520  0038                     ___flmul@bexp:	
  2521                           
  2522                           ; 1 bytes @ 0x18
  2523  0038                     	ds	1
  2524  0039                     ___flmul@prod:	
  2525                           
  2526                           ; 4 bytes @ 0x19
  2527  0039                     	ds	2
  2528  003B                     ___fldiv@sign:	
  2529                           
  2530                           ; 1 bytes @ 0x1B
  2531  003B                     	ds	1
  2532  003C                     ___fldiv@new_exp:	
  2533                           
  2534                           ; 2 bytes @ 0x1C
  2535  003C                     	ds	1
  2536  003D                     ___flmul@temp:	
  2537                           
  2538                           ; 2 bytes @ 0x1D
  2539  003D                     	ds	1
  2540  003E                     ___fldiv@grs:	
  2541                           
  2542                           ; 4 bytes @ 0x1E
  2543  003E                     	ds	4
  2544  0042                     ___fldiv@bexp:	
  2545                           
  2546                           ; 1 bytes @ 0x22
  2547  0042                     	ds	1
  2548  0043                     ___fldiv@aexp:	
  2549                           
  2550                           ; 1 bytes @ 0x23
  2551  0043                     	ds	1
  2552  0044                     ??__calculate_speed:	
  2553                           
  2554                           ; 1 bytes @ 0x24
  2555  0044                     	ds	8
  2556  004C                     __calculate_speed@time_difference:	
  2557                           
  2558                           ; 4 bytes @ 0x2C
  2559  004C                     	ds	4
  2560  0050                     __calculate_speed@distance:	
  2561                           
  2562                           ; 4 bytes @ 0x30
  2563  0050                     	ds	4
  2564  0054                     __calculate_speed@speed:	
  2565                           
  2566                           ; 4 bytes @ 0x34
  2567  0054                     	ds	4
  2568                           
  2569                           	psect	maintext
  2570  0E4E                     __pmaintext:	
  2571 ;;
  2572 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2573 ;;
  2574 ;; *************** function _main *****************
  2575 ;; Defined at:
  2576 ;;		line 27 in file "main.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : B1F/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels required when called:    5
  2596 ;; This function calls:
  2597 ;;		__calculate_speed
  2598 ;;		__handle_relays
  2599 ;;		__system_init
  2600 ;;		_display_set
  2601 ;; This function is called by:
  2602 ;;		Startup code after reset
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function _main
  2608  0E4E                     _main:	
  2609                           
  2610                           ;main.c: 29:     _system_init();
  2611                           
  2612                           ;incstack = 0
  2613                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2614  0E4E  318F  2776  318E   	fcall	__system_init
  2615  0E51                     l55:	
  2616                           ;main.c: 31:     while(1)
  2617                           
  2618                           
  2619                           ;main.c: 32:     {;main.c: 33:         _handle_relays();
  2620  0E51  3187  273F  318E   	fcall	__handle_relays
  2621                           
  2622                           ;main.c: 35:         if(os.ready)
  2623  0E54  0020               	movlb	0	; select bank0
  2624  0E55  085F               	movf	_os+7,w	;volatile
  2625  0E56  1903               	btfsc	3,2
  2626  0E57  2E51               	goto	l55
  2627                           
  2628                           ;main.c: 36:         {;main.c: 37:             _calculate_speed();
  2629  0E58  3183  23FE  318E   	fcall	__calculate_speed
  2630                           
  2631                           ;main.c: 38:             os.ready = 0;
  2632  0E5B  0020               	movlb	0	; select bank0
  2633  0E5C  01DF               	clrf	_os+7	;volatile
  2634                           
  2635                           ;main.c: 41:             if(PORTAbits.RA3)
  2636  0E5D  1D8C               	btfss	12,3	;volatile
  2637  0E5E  2E69               	goto	l2333
  2638                           
  2639                           ;main.c: 42:             {;main.c: 43:                 display_set(os.speed, 0b00000001)
      +                          ;
  2640  0E5F  0869               	movf	_os+17,w	;volatile
  2641  0E60  00A5               	movwf	display_set@value+1
  2642  0E61  0868               	movf	_os+16,w	;volatile
  2643  0E62  00A4               	movwf	display_set@value
  2644  0E63  01A6               	clrf	display_set@decimal_flags
  2645  0E64  0AA6               	incf	display_set@decimal_flags,f
  2646  0E65  3185  2501  318E   	fcall	_display_set
  2647                           
  2648                           ;main.c: 44:             }
  2649  0E68  2E51               	goto	l55
  2650  0E69                     l2333:	
  2651                           ;main.c: 45:             else
  2652                           
  2653                           
  2654                           ;main.c: 46:             {;main.c: 47:                 display_set(os.speed, 0x00);
  2655  0E69  0020               	movlb	0	; select bank0
  2656  0E6A  0869               	movf	_os+17,w	;volatile
  2657  0E6B  00A5               	movwf	display_set@value+1
  2658  0E6C  0868               	movf	_os+16,w	;volatile
  2659  0E6D  00A4               	movwf	display_set@value
  2660  0E6E  01A6               	clrf	display_set@decimal_flags
  2661  0E6F  3185  2501  318E   	fcall	_display_set
  2662                           
  2663                           ;main.c: 50:     }
  2664                           
  2665                           ;main.c: 49:         }
  2666                           
  2667                           ;main.c: 48:             }
  2668  0E72  2E51               	goto	l55
  2669  0E73                     __end_of_main:	
  2670                           
  2671                           	psect	text1
  2672  0501                     __ptext1:	
  2673 ;; *************** function _display_set *****************
  2674 ;; Defined at:
  2675 ;;		line 58 in file "display.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  value           2    4[BANK0 ] short 
  2678 ;;  decimal_flag    1    6[BANK0 ] unsigned char 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  temp_chars      4    9[BANK0 ] unsigned char [4]
  2681 ;;  abs_value       2   13[BANK0 ] unsigned short 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2691 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2692 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2694 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;Total ram usage:       11 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    3
  2698 ;; This function calls:
  2699 ;;		___lwdiv
  2700 ;;		___lwmod
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           
  2707                           ;psect for function _display_set
  2708  0501                     _display_set:	
  2709                           
  2710                           ;display.c: 58: void display_set(int16_t value, uint8_t decimal_flags);display.c: 59: {;
      +                          display.c: 60:     uint16_t abs_value;;display.c: 61:     uint8_t temp_chars[4];;display
      +                          .c: 63:     if(value<0)
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _display_set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2714  0501  0020               	movlb	0	; select bank0
  2715  0502  1FA5               	btfss	display_set@value+1,7
  2716  0503  2D10               	goto	l2279
  2717                           
  2718                           ;display.c: 64:     {;display.c: 65:         abs_value = -value;
  2719  0504  0924               	comf	display_set@value,w
  2720  0505  00A7               	movwf	??_display_set
  2721  0506  0925               	comf	display_set@value+1,w
  2722  0507  00A8               	movwf	??_display_set+1
  2723  0508  0AA7               	incf	??_display_set,f
  2724  0509  1903               	skipnz
  2725  050A  0AA8               	incf	??_display_set+1,f
  2726  050B  0827               	movf	??_display_set,w
  2727  050C  00AD               	movwf	display_set@abs_value
  2728  050D  0828               	movf	??_display_set+1,w
  2729  050E  00AE               	movwf	display_set@abs_value+1
  2730                           
  2731                           ;display.c: 66:     }
  2732  050F  2D14               	goto	l2281
  2733  0510                     l2279:	
  2734                           ;display.c: 67:     else
  2735                           
  2736                           
  2737                           ;display.c: 68:     {;display.c: 69:         abs_value = value;
  2738  0510  0825               	movf	display_set@value+1,w
  2739  0511  00AE               	movwf	display_set@abs_value+1
  2740  0512  0824               	movf	display_set@value,w
  2741  0513  00AD               	movwf	display_set@abs_value
  2742  0514                     l2281:	
  2743                           ;display.c: 70:     }
  2744                           
  2745                           
  2746                           ;display.c: 73:     temp_chars[3] = 0x00;
  2747  0514  01AC               	clrf	display_set@temp_chars+3
  2748                           
  2749                           ;display.c: 74:     temp_chars[2] = 0x00;
  2750  0515  01AB               	clrf	display_set@temp_chars+2
  2751                           
  2752                           ;display.c: 75:     temp_chars[1] = 0x00;
  2753  0516  01AA               	clrf	display_set@temp_chars+1
  2754                           
  2755                           ;display.c: 76:     temp_chars[0] = 0x00;
  2756  0517  01A9               	clrf	display_set@temp_chars
  2757                           
  2758                           ;display.c: 79:     temp_chars[3] = char_lookup[abs_value%10];
  2759  0518  300A               	movlw	10
  2760  0519  00F4               	movwf	___lwmod@divisor
  2761  051A  3000               	movlw	0
  2762  051B  00F5               	movwf	___lwmod@divisor+1
  2763  051C  082E               	movf	display_set@abs_value+1,w
  2764  051D  00F7               	movwf	___lwmod@dividend+1
  2765  051E  082D               	movf	display_set@abs_value,w
  2766  051F  00F6               	movwf	___lwmod@dividend
  2767  0520  318E  2673  3185   	fcall	___lwmod
  2768  0523  0874               	movf	?___lwmod,w
  2769  0524  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2770  0525  0086               	movwf	6
  2771  0526  0187               	clrf	7
  2772  0527  0801               	movf	1,w
  2773  0528  0020               	movlb	0	; select bank0
  2774  0529  00A7               	movwf	??_display_set
  2775  052A  0827               	movf	??_display_set,w
  2776  052B  00AC               	movwf	display_set@temp_chars+3
  2777                           
  2778                           ;display.c: 80:     abs_value /= 10;
  2779  052C  300A               	movlw	10
  2780  052D  00F4               	movwf	___lwdiv@divisor
  2781  052E  3000               	movlw	0
  2782  052F  00F5               	movwf	___lwdiv@divisor+1
  2783  0530  082E               	movf	display_set@abs_value+1,w
  2784  0531  00F7               	movwf	___lwdiv@dividend+1
  2785  0532  082D               	movf	display_set@abs_value,w
  2786  0533  00F6               	movwf	___lwdiv@dividend
  2787  0534  318F  2703  3185   	fcall	___lwdiv
  2788  0537  0875               	movf	?___lwdiv+1,w
  2789  0538  0020               	movlb	0	; select bank0
  2790  0539  00AE               	movwf	display_set@abs_value+1
  2791  053A  0874               	movf	?___lwdiv,w
  2792  053B  00AD               	movwf	display_set@abs_value
  2793                           
  2794                           ;display.c: 81:     if(abs_value)
  2795  053C  082D               	movf	display_set@abs_value,w
  2796  053D  042E               	iorwf	display_set@abs_value+1,w
  2797  053E  1903               	btfsc	3,2
  2798  053F  2DA4               	goto	l2309
  2799                           
  2800                           ;display.c: 82:     {;display.c: 83:         temp_chars[2] = char_lookup[abs_value%10];
  2801  0540  300A               	movlw	10
  2802  0541  00F4               	movwf	___lwmod@divisor
  2803  0542  3000               	movlw	0
  2804  0543  00F5               	movwf	___lwmod@divisor+1
  2805  0544  082E               	movf	display_set@abs_value+1,w
  2806  0545  00F7               	movwf	___lwmod@dividend+1
  2807  0546  082D               	movf	display_set@abs_value,w
  2808  0547  00F6               	movwf	___lwmod@dividend
  2809  0548  318E  2673  3185   	fcall	___lwmod
  2810  054B  0874               	movf	?___lwmod,w
  2811  054C  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2812  054D  0086               	movwf	6
  2813  054E  0187               	clrf	7
  2814  054F  0801               	movf	1,w
  2815  0550  0020               	movlb	0	; select bank0
  2816  0551  00A7               	movwf	??_display_set
  2817  0552  0827               	movf	??_display_set,w
  2818  0553  00AB               	movwf	display_set@temp_chars+2
  2819                           
  2820                           ;display.c: 84:         abs_value /= 10;
  2821  0554  300A               	movlw	10
  2822  0555  00F4               	movwf	___lwdiv@divisor
  2823  0556  3000               	movlw	0
  2824  0557  00F5               	movwf	___lwdiv@divisor+1
  2825  0558  082E               	movf	display_set@abs_value+1,w
  2826  0559  00F7               	movwf	___lwdiv@dividend+1
  2827  055A  082D               	movf	display_set@abs_value,w
  2828  055B  00F6               	movwf	___lwdiv@dividend
  2829  055C  318F  2703  3185   	fcall	___lwdiv
  2830  055F  0875               	movf	?___lwdiv+1,w
  2831  0560  0020               	movlb	0	; select bank0
  2832  0561  00AE               	movwf	display_set@abs_value+1
  2833  0562  0874               	movf	?___lwdiv,w
  2834  0563  00AD               	movwf	display_set@abs_value
  2835                           
  2836                           ;display.c: 85:         if(abs_value)
  2837  0564  082D               	movf	display_set@abs_value,w
  2838  0565  042E               	iorwf	display_set@abs_value+1,w
  2839  0566  1903               	btfsc	3,2
  2840  0567  2DA4               	goto	l2309
  2841                           
  2842                           ;display.c: 86:         {;display.c: 87:             temp_chars[1] = char_lookup[abs_val
      +                          ue%10];
  2843  0568  300A               	movlw	10
  2844  0569  00F4               	movwf	___lwmod@divisor
  2845  056A  3000               	movlw	0
  2846  056B  00F5               	movwf	___lwmod@divisor+1
  2847  056C  082E               	movf	display_set@abs_value+1,w
  2848  056D  00F7               	movwf	___lwmod@dividend+1
  2849  056E  082D               	movf	display_set@abs_value,w
  2850  056F  00F6               	movwf	___lwmod@dividend
  2851  0570  318E  2673  3185   	fcall	___lwmod
  2852  0573  0874               	movf	?___lwmod,w
  2853  0574  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2854  0575  0086               	movwf	6
  2855  0576  0187               	clrf	7
  2856  0577  0801               	movf	1,w
  2857  0578  0020               	movlb	0	; select bank0
  2858  0579  00A7               	movwf	??_display_set
  2859  057A  0827               	movf	??_display_set,w
  2860  057B  00AA               	movwf	display_set@temp_chars+1
  2861                           
  2862                           ;display.c: 88:             abs_value /= 10;
  2863  057C  300A               	movlw	10
  2864  057D  00F4               	movwf	___lwdiv@divisor
  2865  057E  3000               	movlw	0
  2866  057F  00F5               	movwf	___lwdiv@divisor+1
  2867  0580  082E               	movf	display_set@abs_value+1,w
  2868  0581  00F7               	movwf	___lwdiv@dividend+1
  2869  0582  082D               	movf	display_set@abs_value,w
  2870  0583  00F6               	movwf	___lwdiv@dividend
  2871  0584  318F  2703  3185   	fcall	___lwdiv
  2872  0587  0875               	movf	?___lwdiv+1,w
  2873  0588  0020               	movlb	0	; select bank0
  2874  0589  00AE               	movwf	display_set@abs_value+1
  2875  058A  0874               	movf	?___lwdiv,w
  2876  058B  00AD               	movwf	display_set@abs_value
  2877                           
  2878                           ;display.c: 89:             if(abs_value)
  2879  058C  082D               	movf	display_set@abs_value,w
  2880  058D  042E               	iorwf	display_set@abs_value+1,w
  2881  058E  1903               	btfsc	3,2
  2882  058F  2DA4               	goto	l2309
  2883                           
  2884                           ;display.c: 90:             {;display.c: 91:                 temp_chars[0] = char_lookup
      +                          [abs_value%10];
  2885  0590  300A               	movlw	10
  2886  0591  00F4               	movwf	___lwmod@divisor
  2887  0592  3000               	movlw	0
  2888  0593  00F5               	movwf	___lwmod@divisor+1
  2889  0594  082E               	movf	display_set@abs_value+1,w
  2890  0595  00F7               	movwf	___lwmod@dividend+1
  2891  0596  082D               	movf	display_set@abs_value,w
  2892  0597  00F6               	movwf	___lwmod@dividend
  2893  0598  318E  2673  3185   	fcall	___lwmod
  2894  059B  0874               	movf	?___lwmod,w
  2895  059C  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2896  059D  0086               	movwf	6
  2897  059E  0187               	clrf	7
  2898  059F  0801               	movf	1,w
  2899  05A0  0020               	movlb	0	; select bank0
  2900  05A1  00A7               	movwf	??_display_set
  2901  05A2  0827               	movf	??_display_set,w
  2902  05A3  00A9               	movwf	display_set@temp_chars
  2903  05A4                     l2309:	
  2904                           ;display.c: 94:     }
  2905                           
  2906                           ;display.c: 93:         }
  2907                           
  2908                           ;display.c: 92:             }
  2909                           
  2910                           
  2911                           ;display.c: 97:     if(value<0 || (decimal_flags&0b00001000))
  2912  05A4  1FA5               	btfss	display_set@value+1,7
  2913  05A5  19A6               	btfsc	display_set@decimal_flags,3
  2914                           
  2915                           ;display.c: 98:     {;display.c: 99:         temp_chars[3] |= 0b01000000;
  2916  05A6  172C               	bsf	display_set@temp_chars+3,6
  2917                           
  2918                           ;display.c: 101:     if(decimal_flags & 0b00000100)
  2919                           
  2920                           ;display.c: 100:     }
  2921  05A7  1926               	btfsc	display_set@decimal_flags,2
  2922                           
  2923                           ;display.c: 102:     {;display.c: 103:         temp_chars[2] |= 0b01000000;
  2924  05A8  172B               	bsf	display_set@temp_chars+2,6
  2925                           
  2926                           ;display.c: 105:     if(decimal_flags & 0b00000010)
  2927                           
  2928                           ;display.c: 104:     }
  2929  05A9  18A6               	btfsc	display_set@decimal_flags,1
  2930                           
  2931                           ;display.c: 106:     {;display.c: 107:         temp_chars[1] |= 0b01000000;
  2932  05AA  172A               	bsf	display_set@temp_chars+1,6
  2933                           
  2934                           ;display.c: 109:     if(decimal_flags & 0b00000001)
  2935                           
  2936                           ;display.c: 108:     }
  2937  05AB  1826               	btfsc	display_set@decimal_flags,0
  2938                           
  2939                           ;display.c: 110:     {;display.c: 111:         temp_chars[0] |= 0b01000000;
  2940  05AC  1729               	bsf	display_set@temp_chars,6
  2941                           
  2942                           ;display.c: 115:     characters[0] = temp_chars[0];
  2943                           
  2944                           ;display.c: 112:     }
  2945  05AD  0829               	movf	display_set@temp_chars,w
  2946  05AE  00A7               	movwf	??_display_set
  2947  05AF  0827               	movf	??_display_set,w
  2948  05B0  0021               	movlb	1	; select bank1
  2949  05B1  00AA               	movwf	_characters^(0+128)
  2950                           
  2951                           ;display.c: 116:     characters[1] = temp_chars[1];
  2952  05B2  0020               	movlb	0	; select bank0
  2953  05B3  082A               	movf	display_set@temp_chars+1,w
  2954  05B4  00A7               	movwf	??_display_set
  2955  05B5  0827               	movf	??_display_set,w
  2956  05B6  0021               	movlb	1	; select bank1
  2957  05B7  00AB               	movwf	(_characters^(0+128)+1)
  2958                           
  2959                           ;display.c: 117:     characters[2] = temp_chars[2];
  2960  05B8  0020               	movlb	0	; select bank0
  2961  05B9  082B               	movf	display_set@temp_chars+2,w
  2962  05BA  00A7               	movwf	??_display_set
  2963  05BB  0827               	movf	??_display_set,w
  2964  05BC  0021               	movlb	1	; select bank1
  2965  05BD  00AC               	movwf	(_characters^(0+128)+2)
  2966                           
  2967                           ;display.c: 118:     characters[3] = temp_chars[3];
  2968  05BE  0020               	movlb	0	; select bank0
  2969  05BF  082C               	movf	display_set@temp_chars+3,w
  2970  05C0  00A7               	movwf	??_display_set
  2971  05C1  0827               	movf	??_display_set,w
  2972  05C2  0021               	movlb	1	; select bank1
  2973  05C3  00AD               	movwf	(_characters^(0+128)+3)
  2974  05C4  0008               	return
  2975  05C5                     __end_of_display_set:	
  2976                           
  2977                           	psect	text2
  2978  0E73                     __ptext2:	
  2979 ;; *************** function ___lwmod *****************
  2980 ;; Defined at:
  2981 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  divisor         2    4[COMMON] unsigned int 
  2984 ;;  dividend        2    6[COMMON] unsigned int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  counter         1    1[BANK0 ] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  2    4[COMMON] unsigned int 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;Total ram usage:        6 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    2
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_display_set
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function ___lwmod
  3012  0E73                     ___lwmod:	
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3016  0E73  0874               	movf	___lwmod@divisor,w
  3017  0E74  0475               	iorwf	___lwmod@divisor+1,w
  3018  0E75  1903               	btfsc	3,2
  3019  0E76  2E9B               	goto	l2247
  3020  0E77  0020               	movlb	0	; select bank0
  3021  0E78  01A1               	clrf	___lwmod@counter
  3022  0E79  0AA1               	incf	___lwmod@counter,f
  3023  0E7A                     l2237:	
  3024  0E7A  1BF5               	btfsc	___lwmod@divisor+1,7
  3025  0E7B  2E86               	goto	l2239
  3026  0E7C  3001               	movlw	1
  3027  0E7D                     u2935:	
  3028  0E7D  35F4               	lslf	___lwmod@divisor,f
  3029  0E7E  0DF5               	rlf	___lwmod@divisor+1,f
  3030  0E7F  0B89               	decfsz	9,f
  3031  0E80  2E7D               	goto	u2935
  3032  0E81  3001               	movlw	1
  3033  0E82  00A0               	movwf	??___lwmod
  3034  0E83  0820               	movf	??___lwmod,w
  3035  0E84  07A1               	addwf	___lwmod@counter,f
  3036  0E85  2E7A               	goto	l2237
  3037  0E86                     l2239:	
  3038  0E86  0875               	movf	___lwmod@divisor+1,w
  3039  0E87  0277               	subwf	___lwmod@dividend+1,w
  3040  0E88  1D03               	skipz
  3041  0E89  2E8C               	goto	u2955
  3042  0E8A  0874               	movf	___lwmod@divisor,w
  3043  0E8B  0276               	subwf	___lwmod@dividend,w
  3044  0E8C                     u2955:	
  3045  0E8C  1C03               	skipc
  3046  0E8D  2E92               	goto	l2243
  3047  0E8E  0874               	movf	___lwmod@divisor,w
  3048  0E8F  02F6               	subwf	___lwmod@dividend,f
  3049  0E90  0875               	movf	___lwmod@divisor+1,w
  3050  0E91  3BF7               	subwfb	___lwmod@dividend+1,f
  3051  0E92                     l2243:	
  3052  0E92  3001               	movlw	1
  3053  0E93                     u2965:	
  3054  0E93  36F5               	lsrf	___lwmod@divisor+1,f
  3055  0E94  0CF4               	rrf	___lwmod@divisor,f
  3056  0E95  0B89               	decfsz	9,f
  3057  0E96  2E93               	goto	u2965
  3058  0E97  3001               	movlw	1
  3059  0E98  02A1               	subwf	___lwmod@counter,f
  3060  0E99  1D03               	btfss	3,2
  3061  0E9A  2E86               	goto	l2239
  3062  0E9B                     l2247:	
  3063  0E9B  0877               	movf	___lwmod@dividend+1,w
  3064  0E9C  00F5               	movwf	?___lwmod+1
  3065  0E9D  0876               	movf	___lwmod@dividend,w
  3066  0E9E  00F4               	movwf	?___lwmod
  3067  0E9F  0008               	return
  3068  0EA0                     __end_of___lwmod:	
  3069                           
  3070                           	psect	text3
  3071  0F03                     __ptext3:	
  3072 ;; *************** function ___lwdiv *****************
  3073 ;; Defined at:
  3074 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  divisor         2    4[COMMON] unsigned int 
  3077 ;;  dividend        2    6[COMMON] unsigned int 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  quotient        2    2[BANK0 ] unsigned int 
  3080 ;;  counter         1    1[BANK0 ] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  2    4[COMMON] unsigned int 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;Total ram usage:        8 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    2
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_display_set
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function ___lwdiv
  3106  0F03                     ___lwdiv:	
  3107                           
  3108                           ;incstack = 0
  3109                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3110  0F03  0020               	movlb	0	; select bank0
  3111  0F04  01A2               	clrf	___lwdiv@quotient
  3112  0F05  01A3               	clrf	___lwdiv@quotient+1
  3113  0F06  0874               	movf	___lwdiv@divisor,w
  3114  0F07  0475               	iorwf	___lwdiv@divisor+1,w
  3115  0F08  1903               	btfsc	3,2
  3116  0F09  2F33               	goto	l2225
  3117  0F0A  01A1               	clrf	___lwdiv@counter
  3118  0F0B  0AA1               	incf	___lwdiv@counter,f
  3119  0F0C                     l2213:	
  3120  0F0C  1BF5               	btfsc	___lwdiv@divisor+1,7
  3121  0F0D  2F18               	goto	l2215
  3122  0F0E  3001               	movlw	1
  3123  0F0F                     u2865:	
  3124  0F0F  35F4               	lslf	___lwdiv@divisor,f
  3125  0F10  0DF5               	rlf	___lwdiv@divisor+1,f
  3126  0F11  0B89               	decfsz	9,f
  3127  0F12  2F0F               	goto	u2865
  3128  0F13  3001               	movlw	1
  3129  0F14  00A0               	movwf	??___lwdiv
  3130  0F15  0820               	movf	??___lwdiv,w
  3131  0F16  07A1               	addwf	___lwdiv@counter,f
  3132  0F17  2F0C               	goto	l2213
  3133  0F18                     l2215:	
  3134  0F18  3001               	movlw	1
  3135  0F19                     u2885:	
  3136  0F19  35A2               	lslf	___lwdiv@quotient,f
  3137  0F1A  0DA3               	rlf	___lwdiv@quotient+1,f
  3138  0F1B  0B89               	decfsz	9,f
  3139  0F1C  2F19               	goto	u2885
  3140  0F1D  0875               	movf	___lwdiv@divisor+1,w
  3141  0F1E  0277               	subwf	___lwdiv@dividend+1,w
  3142  0F1F  1D03               	skipz
  3143  0F20  2F23               	goto	u2895
  3144  0F21  0874               	movf	___lwdiv@divisor,w
  3145  0F22  0276               	subwf	___lwdiv@dividend,w
  3146  0F23                     u2895:	
  3147  0F23  1C03               	skipc
  3148  0F24  2F2A               	goto	l2221
  3149  0F25  0874               	movf	___lwdiv@divisor,w
  3150  0F26  02F6               	subwf	___lwdiv@dividend,f
  3151  0F27  0875               	movf	___lwdiv@divisor+1,w
  3152  0F28  3BF7               	subwfb	___lwdiv@dividend+1,f
  3153  0F29  1422               	bsf	___lwdiv@quotient,0
  3154  0F2A                     l2221:	
  3155  0F2A  3001               	movlw	1
  3156  0F2B                     u2905:	
  3157  0F2B  36F5               	lsrf	___lwdiv@divisor+1,f
  3158  0F2C  0CF4               	rrf	___lwdiv@divisor,f
  3159  0F2D  0B89               	decfsz	9,f
  3160  0F2E  2F2B               	goto	u2905
  3161  0F2F  3001               	movlw	1
  3162  0F30  02A1               	subwf	___lwdiv@counter,f
  3163  0F31  1D03               	btfss	3,2
  3164  0F32  2F18               	goto	l2215
  3165  0F33                     l2225:	
  3166  0F33  0823               	movf	___lwdiv@quotient+1,w
  3167  0F34  00F5               	movwf	?___lwdiv+1
  3168  0F35  0822               	movf	___lwdiv@quotient,w
  3169  0F36  00F4               	movwf	?___lwdiv
  3170  0F37  0008               	return
  3171  0F38                     __end_of___lwdiv:	
  3172                           
  3173                           	psect	text4
  3174  0F76                     __ptext4:	
  3175 ;; *************** function __system_init *****************
  3176 ;; Defined at:
  3177 ;;		line 82 in file "main.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0, pclath, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    3
  3198 ;; This function calls:
  3199 ;;		_display_init
  3200 ;;		_encoder_init
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function __system_init
  3208  0F76                     __system_init:	
  3209                           
  3210                           ;main.c: 84:     TRISAbits.TRISA1 = 0;
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in __system_init: [wreg+status,2+status,0+pclath+cstack]
  3214  0F76  0020               	movlb	0	; select bank0
  3215  0F77  1091               	bcf	17,1	;volatile
  3216                           
  3217                           ;main.c: 85:     TRISAbits.TRISA2 = 0;
  3218  0F78  1111               	bcf	17,2	;volatile
  3219                           
  3220                           ;main.c: 86:     TRISAbits.TRISA0 = 0;
  3221  0F79  1011               	bcf	17,0	;volatile
  3222                           
  3223                           ;main.c: 88:     TRISAbits.TRISA3 = 1;
  3224  0F7A  1591               	bsf	17,3	;volatile
  3225                           
  3226                           ;main.c: 89:     ANSELAbits.ANSA3 = 0;
  3227  0F7B  003E               	movlb	30	; select bank30
  3228  0F7C  11B8               	bcf	56,3	;volatile
  3229                           
  3230                           ;main.c: 90:     TRISAbits.TRISA4 = 1;
  3231  0F7D  0020               	movlb	0	; select bank0
  3232  0F7E  1611               	bsf	17,4	;volatile
  3233                           
  3234                           ;main.c: 91:     ANSELAbits.ANSA4 = 0;
  3235  0F7F  003E               	movlb	30	; select bank30
  3236  0F80  1238               	bcf	56,4	;volatile
  3237                           
  3238                           ;main.c: 92:     TRISAbits.TRISA5 = 1;
  3239  0F81  0020               	movlb	0	; select bank0
  3240  0F82  1691               	bsf	17,5	;volatile
  3241                           
  3242                           ;main.c: 93:     ANSELAbits.ANSA5 = 0;
  3243  0F83  003E               	movlb	30	; select bank30
  3244  0F84  12B8               	bcf	56,5	;volatile
  3245                           
  3246                           ;main.c: 95:     TRISCbits.TRISC2 = 0;
  3247  0F85  0020               	movlb	0	; select bank0
  3248  0F86  1113               	bcf	19,2	;volatile
  3249                           
  3250                           ;main.c: 96:     TRISCbits.TRISC1 = 0;
  3251  0F87  1093               	bcf	19,1	;volatile
  3252                           
  3253                           ;main.c: 97:     TRISCbits.TRISC7 = 0;
  3254  0F88  1393               	bcf	19,7	;volatile
  3255                           
  3256                           ;main.c: 98:     TRISCbits.TRISC5 = 0;
  3257  0F89  1293               	bcf	19,5	;volatile
  3258                           
  3259                           ;main.c: 99:     TRISCbits.TRISC4 = 0;
  3260  0F8A  1213               	bcf	19,4	;volatile
  3261                           
  3262                           ;main.c: 100:     TRISCbits.TRISC3 = 0;
  3263  0F8B  1193               	bcf	19,3	;volatile
  3264                           
  3265                           ;main.c: 101:     TRISCbits.TRISC0 = 0;
  3266  0F8C  1013               	bcf	19,0	;volatile
  3267                           
  3268                           ;main.c: 102:     TRISCbits.TRISC6 = 0;
  3269  0F8D  1313               	bcf	19,6	;volatile
  3270                           
  3271                           ;main.c: 103:     TRISBbits.TRISB7 = 0;
  3272  0F8E  1392               	bcf	18,7	;volatile
  3273                           
  3274                           ;main.c: 104:     TRISBbits.TRISB6 = 0;
  3275  0F8F  1312               	bcf	18,6	;volatile
  3276                           
  3277                           ;main.c: 105:     TRISBbits.TRISB5 = 0;
  3278  0F90  1292               	bcf	18,5	;volatile
  3279                           
  3280                           ;main.c: 106:     TRISBbits.TRISB4 = 0;
  3281  0F91  1212               	bcf	18,4	;volatile
  3282                           
  3283                           ;main.c: 108:     TRISBbits.TRISB0 = 1;
  3284  0F92  1412               	bsf	18,0	;volatile
  3285                           
  3286                           ;main.c: 109:     ANSELBbits.ANSB0 = 0;
  3287  0F93  003E               	movlb	30	; select bank30
  3288  0F94  1043               	bcf	67,0	;volatile
  3289                           
  3290                           ;main.c: 110:     TRISBbits.TRISB3 = 1;
  3291  0F95  0020               	movlb	0	; select bank0
  3292  0F96  1592               	bsf	18,3	;volatile
  3293                           
  3294                           ;main.c: 111:     ANSELBbits.ANSB3 = 0;
  3295  0F97  003E               	movlb	30	; select bank30
  3296  0F98  11C3               	bcf	67,3	;volatile
  3297                           
  3298                           ;main.c: 113:     TRISBbits.TRISB2 = 1;
  3299  0F99  0020               	movlb	0	; select bank0
  3300  0F9A  1512               	bsf	18,2	;volatile
  3301                           
  3302                           ;main.c: 114:     ANSELBbits.ANSB2 = 0;
  3303  0F9B  003E               	movlb	30	; select bank30
  3304  0F9C  1143               	bcf	67,2	;volatile
  3305                           
  3306                           ;main.c: 115:     TRISBbits.TRISB1 = 1;
  3307  0F9D  0020               	movlb	0	; select bank0
  3308  0F9E  1492               	bsf	18,1	;volatile
  3309                           
  3310                           ;main.c: 116:     ANSELBbits.ANSB1 = 0;
  3311  0F9F  003E               	movlb	30	; select bank30
  3312  0FA0  10C3               	bcf	67,1	;volatile
  3313                           
  3314                           ;main.c: 118:     {PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0;};
  3315  0FA1  3055               	movlw	85
  3316  0FA2  003D               	movlb	29	; select bank29
  3317  0FA3  008F               	movwf	15	;volsfr
  3318  0FA4  30AA               	movlw	170
  3319  0FA5  008F               	movwf	15	;volsfr
  3320  0FA6  100F               	bcf	15,0	;volsfr
  3321                           
  3322                           ;main.c: 119:     CCP1PPS = 0x0A;
  3323  0FA7  300A               	movlw	10
  3324  0FA8  00A1               	movwf	33	;volatile
  3325                           
  3326                           ;main.c: 120:     CCP2PPS = 0x09;
  3327  0FA9  3009               	movlw	9
  3328  0FAA  00A2               	movwf	34	;volatile
  3329                           
  3330                           ;main.c: 121:     {PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 1;};
  3331  0FAB  3055               	movlw	85
  3332  0FAC  008F               	movwf	15	;volsfr
  3333  0FAD  30AA               	movlw	170
  3334  0FAE  008F               	movwf	15	;volsfr
  3335  0FAF  140F               	bsf	15,0	;volsfr
  3336                           
  3337                           ;main.c: 123:     display_init();
  3338  0FB0  318E  262A  318F   	fcall	_display_init
  3339                           
  3340                           ;main.c: 124:     encoder_init();
  3341  0FB3  318F  2738         	fcall	_encoder_init
  3342  0FB5  0008               	return
  3343  0FB6                     __end_of__system_init:	
  3344                           
  3345                           	psect	text5
  3346  0F38                     __ptext5:	
  3347 ;; *************** function _encoder_init *****************
  3348 ;; Defined at:
  3349 ;;		line 8 in file "encoder.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;Total ram usage:        0 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    2
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		__system_init
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           
  3378                           ;psect for function _encoder_init
  3379  0F38                     _encoder_init:	
  3380                           
  3381                           ;encoder.c: 10:     rollover_cnt = 0;
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in _encoder_init: [wreg+status,2+status,0]
  3385  0F38  01F8               	clrf	_rollover_cnt
  3386                           
  3387                           ;encoder.c: 12:     os.encoder = 0;
  3388  0F39  0020               	movlb	0	; select bank0
  3389  0F3A  01D8               	clrf	_os	;volatile
  3390  0F3B  01D9               	clrf	_os+1	;volatile
  3391                           
  3392                           ;encoder.c: 13:     os.encoder_last = 0;
  3393  0F3C  01DA               	clrf	_os+2	;volatile
  3394  0F3D  01DB               	clrf	_os+3	;volatile
  3395                           
  3396                           ;encoder.c: 14:     os.encoder_difference = 0;
  3397  0F3E  01DC               	clrf	_os+4	;volatile
  3398  0F3F  01DD               	clrf	_os+5	;volatile
  3399                           
  3400                           ;encoder.c: 15:     os.capture = 0;
  3401  0F40  01DE               	clrf	_os+6	;volatile
  3402                           
  3403                           ;encoder.c: 16:     os.ready = 0;
  3404  0F41  01DF               	clrf	_os+7	;volatile
  3405                           
  3406                           ;encoder.c: 17:     os.time_sum_last = 0;
  3407  0F42  3000               	movlw	0
  3408  0F43  00E3               	movwf	_os+11	;volatile
  3409  0F44  3000               	movlw	0
  3410  0F45  00E2               	movwf	_os+10	;volatile
  3411  0F46  3000               	movlw	0
  3412  0F47  00E1               	movwf	_os+9	;volatile
  3413  0F48  3000               	movlw	0
  3414  0F49  00E0               	movwf	_os+8	;volatile
  3415                           
  3416                           ;encoder.c: 18:     os.time_sum = 0;
  3417  0F4A  3000               	movlw	0
  3418  0F4B  00E7               	movwf	_os+15	;volatile
  3419  0F4C  3000               	movlw	0
  3420  0F4D  00E6               	movwf	_os+14	;volatile
  3421  0F4E  3000               	movlw	0
  3422  0F4F  00E5               	movwf	_os+13	;volatile
  3423  0F50  3000               	movlw	0
  3424  0F51  00E4               	movwf	_os+12	;volatile
  3425                           
  3426                           ;encoder.c: 19:     os.speed = 0;
  3427  0F52  01E8               	clrf	_os+16	;volatile
  3428  0F53  01E9               	clrf	_os+17	;volatile
  3429                           
  3430                           ;encoder.c: 22:     T1CLKbits.CS = 0b0001;
  3431  0F54  0024               	movlb	4	; select bank4
  3432  0F55  0811               	movf	17,w	;volatile
  3433  0F56  39F0               	andlw	-16
  3434  0F57  3801               	iorlw	1
  3435  0F58  0091               	movwf	17	;volatile
  3436                           
  3437                           ;encoder.c: 23:     T1CONbits.CKPS = 0b00;
  3438  0F59  30CF               	movlw	-49
  3439  0F5A  058E               	andwf	14,f	;volatile
  3440                           
  3441                           ;encoder.c: 24:     T1CONbits.RD16 = 1;
  3442  0F5B  148E               	bsf	14,1	;volatile
  3443                           
  3444                           ;encoder.c: 25:     T1CONbits.ON = 1;
  3445  0F5C  140E               	bsf	14,0	;volatile
  3446                           
  3447                           ;encoder.c: 28:     INTCONbits.GIE = 1;
  3448  0F5D  178B               	bsf	11,7	;volatile
  3449                           
  3450                           ;encoder.c: 29:     INTCONbits.PEIE = 1;
  3451  0F5E  170B               	bsf	11,6	;volatile
  3452                           
  3453                           ;encoder.c: 30:     PIE4bits.TMR1IE = 1;
  3454  0F5F  002E               	movlb	14	; select bank14
  3455  0F60  141A               	bsf	26,0	;volatile
  3456                           
  3457                           ;encoder.c: 33:     CCP1CONbits.MODE = 0b0011;
  3458  0F61  0026               	movlb	6	; select bank6
  3459  0F62  080E               	movf	14,w	;volatile
  3460  0F63  39F0               	andlw	-16
  3461  0F64  3803               	iorlw	3
  3462  0F65  008E               	movwf	14	;volatile
  3463                           
  3464                           ;encoder.c: 34:     CCP1CAPbits.CTS = 0b000;
  3465  0F66  018F               	clrf	15	;volatile
  3466                           
  3467                           ;encoder.c: 35:     CCP1CONbits.EN = 1;
  3468  0F67  178E               	bsf	14,7	;volatile
  3469                           
  3470                           ;encoder.c: 38:     CCP2CONbits.MODE = 0b0011;
  3471  0F68  0812               	movf	18,w	;volatile
  3472  0F69  39F0               	andlw	-16
  3473  0F6A  3803               	iorlw	3
  3474  0F6B  0092               	movwf	18	;volatile
  3475                           
  3476                           ;encoder.c: 39:     CCP2CAPbits.CTS = 0b000;
  3477  0F6C  0193               	clrf	19	;volatile
  3478                           
  3479                           ;encoder.c: 40:     CCP2CONbits.EN = 1;
  3480  0F6D  1792               	bsf	18,7	;volatile
  3481                           
  3482                           ;encoder.c: 43:     INTCONbits.GIE = 1;
  3483  0F6E  178B               	bsf	11,7	;volatile
  3484                           
  3485                           ;encoder.c: 44:     INTCONbits.PEIE = 1;
  3486  0F6F  170B               	bsf	11,6	;volatile
  3487                           
  3488                           ;encoder.c: 45:     PIR6bits.CCP1IF = 0;
  3489  0F70  002E               	movlb	14	; select bank14
  3490  0F71  1012               	bcf	18,0	;volatile
  3491                           
  3492                           ;encoder.c: 46:     PIE6bits.CCP1IE = 1;
  3493  0F72  141C               	bsf	28,0	;volatile
  3494                           
  3495                           ;encoder.c: 47:     PIR6bits.CCP2IF = 0;
  3496  0F73  1092               	bcf	18,1	;volatile
  3497                           
  3498                           ;encoder.c: 48:     PIE6bits.CCP2IE = 1;
  3499  0F74  149C               	bsf	28,1	;volatile
  3500  0F75  0008               	return
  3501  0F76                     __end_of_encoder_init:	
  3502                           
  3503                           	psect	text6
  3504  0E2A                     __ptext6:	
  3505 ;; *************** function _display_init *****************
  3506 ;; Defined at:
  3507 ;;		line 32 in file "display.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;Total ram usage:        1 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    2
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		__system_init
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function _display_init
  3537  0E2A                     _display_init:	
  3538                           
  3539                           ;display.c: 35:     segment = 0;
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _display_init: [wreg+status,2+status,0]
  3543  0E2A  01F9               	clrf	_segment
  3544                           
  3545                           ;display.c: 38:     characters[0] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 |
      +                           0b00100000 | 0b10000000);
  3546  0E2B  30BE               	movlw	190
  3547  0E2C  00F4               	movwf	??_display_init
  3548  0E2D  0874               	movf	??_display_init,w
  3549  0E2E  0021               	movlb	1	; select bank1
  3550  0E2F  00AA               	movwf	_characters^(0+128)
  3551                           
  3552                           ;display.c: 39:     characters[1] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 |
      +                           0b00100000 | 0b10000000);
  3553  0E30  30BE               	movlw	190
  3554  0E31  00F4               	movwf	??_display_init
  3555  0E32  0874               	movf	??_display_init,w
  3556  0E33  00AB               	movwf	(_characters^(0+128)+1)
  3557                           
  3558                           ;display.c: 40:     characters[2] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 |
      +                           0b00100000 | 0b10000000);
  3559  0E34  30BE               	movlw	190
  3560  0E35  00F4               	movwf	??_display_init
  3561  0E36  0874               	movf	??_display_init,w
  3562  0E37  00AC               	movwf	(_characters^(0+128)+2)
  3563                           
  3564                           ;display.c: 41:     characters[3] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 |
      +                           0b00100000 | 0b10000000);
  3565  0E38  30BE               	movlw	190
  3566  0E39  00F4               	movwf	??_display_init
  3567  0E3A  0874               	movf	??_display_init,w
  3568  0E3B  00AD               	movwf	(_characters^(0+128)+3)
  3569                           
  3570                           ;display.c: 44:     T2CLKCONbits.CS = 0b0001;
  3571  0E3C  0025               	movlb	5	; select bank5
  3572  0E3D  0810               	movf	16,w	;volatile
  3573  0E3E  39F0               	andlw	-16
  3574  0E3F  3801               	iorlw	1
  3575  0E40  0090               	movwf	16	;volatile
  3576                           
  3577                           ;display.c: 45:     T2CONbits.CKPS = 0b111;
  3578  0E41  3070               	movlw	112
  3579  0E42  048E               	iorwf	14,f	;volatile
  3580                           
  3581                           ;display.c: 46:     PR2 = 125;
  3582  0E43  307D               	movlw	125
  3583  0E44  008D               	movwf	13	;volatile
  3584                           
  3585                           ;display.c: 47:     T2CONbits.OUTPS = 0b0000;
  3586  0E45  30F0               	movlw	-16
  3587  0E46  058E               	andwf	14,f	;volatile
  3588                           
  3589                           ;display.c: 50:     INTCONbits.GIE = 1;
  3590  0E47  178B               	bsf	11,7	;volatile
  3591                           
  3592                           ;display.c: 51:     INTCONbits.PEIE = 1;
  3593  0E48  170B               	bsf	11,6	;volatile
  3594                           
  3595                           ;display.c: 52:     PIE4bits.TMR2IE = 1;
  3596  0E49  002E               	movlb	14	; select bank14
  3597  0E4A  149A               	bsf	26,1	;volatile
  3598                           
  3599                           ;display.c: 55:     T2CONbits.ON = 1;
  3600  0E4B  0025               	movlb	5	; select bank5
  3601  0E4C  178E               	bsf	14,7	;volatile
  3602  0E4D  0008               	return
  3603  0E4E                     __end_of_display_init:	
  3604                           
  3605                           	psect	text7
  3606  073F                     __ptext7:	
  3607 ;; *************** function __handle_relays *****************
  3608 ;; Defined at:
  3609 ;;		line 128 in file "main.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;Total ram usage:        1 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    2
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function __handle_relays
  3639  073F                     __handle_relays:	
  3640                           
  3641                           ;main.c: 130:     if(PORTAbits.RA3)
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in __handle_relays: [wreg]
  3645  073F  0020               	movlb	0	; select bank0
  3646  0740  1D8C               	btfss	12,3	;volatile
  3647  0741  2F6B               	goto	l76
  3648                           
  3649                           ;main.c: 131:     {;main.c: 134:         LATAbits.LATA0 = 1;
  3650  0742  1416               	bsf	22,0	;volatile
  3651                           
  3652                           ;main.c: 135:         if(PORTAbits.RA4)
  3653  0743  1E0C               	btfss	12,4	;volatile
  3654  0744  2F68               	goto	l77
  3655                           
  3656                           ;main.c: 136:         {;main.c: 138:             if(PORTAbits.RA5 && (os.speed<30))
  3657  0745  1E8C               	btfss	12,5	;volatile
  3658  0746  2F56               	goto	l78
  3659  0747  0869               	movf	_os+17,w	;volatile
  3660  0748  3A80               	xorlw	128
  3661  0749  00F4               	movwf	??__handle_relays
  3662  074A  3080               	movlw	128
  3663  074B  0274               	subwf	??__handle_relays,w
  3664  074C  1D03               	skipz
  3665  074D  2F50               	goto	u1035
  3666  074E  301E               	movlw	30
  3667  074F  0268               	subwf	_os+16,w	;volatile
  3668  0750                     u1035:	
  3669  0750  1803               	skipnc
  3670  0751  2F56               	goto	l78
  3671                           
  3672                           ;main.c: 139:             {;main.c: 140:                 LATAbits.LATA1 = 0;
  3673  0752  0020               	movlb	0	; select bank0
  3674  0753  1096               	bcf	22,1	;volatile
  3675                           
  3676                           ;main.c: 141:                 LATAbits.LATA2 = 1;
  3677  0754  1516               	bsf	22,2	;volatile
  3678                           
  3679                           ;main.c: 142:             }
  3680  0755  0008               	return
  3681  0756                     l78:	
  3682                           ;main.c: 143:             else if((!PORTAbits.RA5) && (os.speed>-30))
  3683                           
  3684  0756  0020               	movlb	0	; select bank0
  3685  0757  1A8C               	btfsc	12,5	;volatile
  3686  0758  0008               	return
  3687  0759  0869               	movf	_os+17,w	;volatile
  3688  075A  3A80               	xorlw	128
  3689  075B  00F4               	movwf	??__handle_relays
  3690  075C  307F               	movlw	127
  3691  075D  0274               	subwf	??__handle_relays,w
  3692  075E  1D03               	skipz
  3693  075F  2F62               	goto	u1055
  3694  0760  30E3               	movlw	227
  3695  0761  0268               	subwf	_os+16,w	;volatile
  3696  0762                     u1055:	
  3697  0762  1C03               	skipc
  3698  0763  0008               	return
  3699                           
  3700                           ;main.c: 144:             {;main.c: 145:                 LATAbits.LATA2 = 0;
  3701  0764  0020               	movlb	0	; select bank0
  3702  0765  1116               	bcf	22,2	;volatile
  3703                           
  3704                           ;main.c: 146:                 LATAbits.LATA1 = 1;
  3705  0766  1496               	bsf	22,1	;volatile
  3706                           
  3707                           ;main.c: 148:         }
  3708                           
  3709                           ;main.c: 147:             }
  3710  0767  0008               	return
  3711  0768                     l77:	
  3712                           ;main.c: 149:         else
  3713                           
  3714                           
  3715                           ;main.c: 150:         {;main.c: 152:             LATAbits.LATA1 = 0;
  3716  0768  1096               	bcf	22,1	;volatile
  3717                           
  3718                           ;main.c: 153:             LATAbits.LATA2 = 0;
  3719  0769  1116               	bcf	22,2	;volatile
  3720                           
  3721                           ;main.c: 155:     }
  3722                           
  3723                           ;main.c: 154:         }
  3724  076A  0008               	return
  3725  076B                     l76:	
  3726                           ;main.c: 156:     else
  3727                           
  3728                           
  3729                           ;main.c: 157:     {;main.c: 160:         LATAbits.LATA0 = 0;
  3730  076B  1016               	bcf	22,0	;volatile
  3731                           
  3732                           ;main.c: 161:         if(PORTBbits.RB0 && (os.speed>-30))
  3733  076C  1C0D               	btfss	13,0	;volatile
  3734  076D  2F7D               	goto	l83
  3735  076E  0869               	movf	_os+17,w	;volatile
  3736  076F  3A80               	xorlw	128
  3737  0770  00F4               	movwf	??__handle_relays
  3738  0771  307F               	movlw	127
  3739  0772  0274               	subwf	??__handle_relays,w
  3740  0773  1D03               	skipz
  3741  0774  2F77               	goto	u1075
  3742  0775  30E3               	movlw	227
  3743  0776  0268               	subwf	_os+16,w	;volatile
  3744  0777                     u1075:	
  3745  0777  1C03               	skipc
  3746  0778  2F7D               	goto	l83
  3747                           
  3748                           ;main.c: 162:         {;main.c: 163:             LATAbits.LATA2 = 0;
  3749  0779  0020               	movlb	0	; select bank0
  3750  077A  1116               	bcf	22,2	;volatile
  3751                           
  3752                           ;main.c: 164:             LATAbits.LATA1 = 1;
  3753  077B  1496               	bsf	22,1	;volatile
  3754                           
  3755                           ;main.c: 165:         }
  3756  077C  0008               	return
  3757  077D                     l83:	
  3758                           ;main.c: 166:         else if(PORTBbits.RB3 && (os.speed<30))
  3759                           
  3760  077D  0020               	movlb	0	; select bank0
  3761  077E  1D8D               	btfss	13,3	;volatile
  3762  077F  2F8F               	goto	l85
  3763  0780  0869               	movf	_os+17,w	;volatile
  3764  0781  3A80               	xorlw	128
  3765  0782  00F4               	movwf	??__handle_relays
  3766  0783  3080               	movlw	128
  3767  0784  0274               	subwf	??__handle_relays,w
  3768  0785  1D03               	skipz
  3769  0786  2F89               	goto	u1095
  3770  0787  301E               	movlw	30
  3771  0788  0268               	subwf	_os+16,w	;volatile
  3772  0789                     u1095:	
  3773  0789  1803               	skipnc
  3774  078A  2F8F               	goto	l85
  3775                           
  3776                           ;main.c: 167:         {;main.c: 168:             LATAbits.LATA1 = 0;
  3777  078B  0020               	movlb	0	; select bank0
  3778  078C  1096               	bcf	22,1	;volatile
  3779                           
  3780                           ;main.c: 169:             LATAbits.LATA2 = 1;
  3781  078D  1516               	bsf	22,2	;volatile
  3782                           
  3783                           ;main.c: 170:         }
  3784  078E  0008               	return
  3785  078F                     l85:	
  3786                           ;main.c: 171:         else
  3787                           
  3788                           
  3789                           ;main.c: 172:         {;main.c: 173:             LATAbits.LATA1 = 0;
  3790  078F  0020               	movlb	0	; select bank0
  3791  0790  1096               	bcf	22,1	;volatile
  3792                           
  3793                           ;main.c: 174:             LATAbits.LATA2 = 0;
  3794  0791  1116               	bcf	22,2	;volatile
  3795                           
  3796                           ;main.c: 175:         }
  3797  0792  0008               	return
  3798  0793                     __end_of__handle_relays:	
  3799                           ;main.c: 176:     }
  3800                           
  3801                           
  3802                           	psect	text8
  3803  03FE                     __ptext8:	
  3804 ;; *************** function __calculate_speed *****************
  3805 ;; Defined at:
  3806 ;;		line 179 in file "main.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  speed           4   52[BANK0 ] float 
  3811 ;;  distance        4   48[BANK0 ] long 
  3812 ;;  time_differe    4   44[BANK0 ] unsigned long 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3825 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3826 ;;Total ram usage:       20 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    4
  3829 ;; This function calls:
  3830 ;;		___fldiv
  3831 ;;		___flmul
  3832 ;;		___fltol
  3833 ;;		___lmul
  3834 ;;		___xxtofl
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           
  3841                           ;psect for function __calculate_speed
  3842  03FE                     __calculate_speed:	
  3843                           
  3844                           ;main.c: 181:     int32_t distance;;main.c: 182:     uint32_t time_difference;;main.c: 1
      +                          83:     float speed;;main.c: 185:     if((os.time_sum_last==0) || (os.time_sum==0))
  3845                           
  3846                           ;incstack = 0
  3847                           ; Regs used in __calculate_speed: [wreg+status,2+status,0+pclath+cstack]
  3848  03FE  0020               	movlb	0	; select bank0
  3849  03FF  0863               	movf	_os+11,w	;volatile
  3850  0400  0462               	iorwf	_os+10,w	;volatile
  3851  0401  0461               	iorwf	_os+9,w	;volatile
  3852  0402  0460               	iorwf	_os+8,w	;volatile
  3853  0403  1903               	skipnz
  3854  0404  2C0B               	goto	l2255
  3855  0405  0867               	movf	_os+15,w	;volatile
  3856  0406  0466               	iorwf	_os+14,w	;volatile
  3857  0407  0465               	iorwf	_os+13,w	;volatile
  3858  0408  0464               	iorwf	_os+12,w	;volatile
  3859  0409  1D03               	skipz
  3860  040A  2C13               	goto	l2257
  3861  040B                     l2255:	
  3862                           
  3863                           ;main.c: 186:     {;main.c: 188:         time_difference = 67108864;
  3864  040B  3004               	movlw	4
  3865  040C  00CF               	movwf	__calculate_speed@time_difference+3
  3866  040D  3000               	movlw	0
  3867  040E  00CE               	movwf	__calculate_speed@time_difference+2
  3868  040F  3000               	movlw	0
  3869  0410  00CD               	movwf	__calculate_speed@time_difference+1
  3870  0411  3000               	movlw	0
  3871  0412  2C39               	goto	L1
  3872  0413                     l2257:	
  3873                           ;main.c: 190:     else
  3874                           
  3875                           ;main.c: 189:     }
  3876                           
  3877                           
  3878                           ;main.c: 191:     {;main.c: 193:         time_difference = os.time_sum - os.time_sum_las
      +                          t;
  3879  0413  0864               	movf	_os+12,w	;volatile
  3880  0414  00C4               	movwf	??__calculate_speed
  3881  0415  0865               	movf	_os+13,w	;volatile
  3882  0416  00C5               	movwf	??__calculate_speed+1
  3883  0417  0866               	movf	_os+14,w	;volatile
  3884  0418  00C6               	movwf	??__calculate_speed+2
  3885  0419  0867               	movf	_os+15,w	;volatile
  3886  041A  00C7               	movwf	??__calculate_speed+3
  3887  041B  0960               	comf	_os+8,w	;volatile
  3888  041C  00C8               	movwf	??__calculate_speed+4
  3889  041D  0961               	comf	_os+9,w	;volatile
  3890  041E  00C9               	movwf	??__calculate_speed+5
  3891  041F  0962               	comf	_os+10,w	;volatile
  3892  0420  00CA               	movwf	??__calculate_speed+6
  3893  0421  0963               	comf	_os+11,w	;volatile
  3894  0422  00CB               	movwf	??__calculate_speed+7
  3895  0423  0AC8               	incf	??__calculate_speed+4,f
  3896  0424  1903               	skipnz
  3897  0425  0AC9               	incf	??__calculate_speed+5,f
  3898  0426  1903               	skipnz
  3899  0427  0ACA               	incf	??__calculate_speed+6,f
  3900  0428  1903               	skipnz
  3901  0429  0ACB               	incf	??__calculate_speed+7,f
  3902  042A  0848               	movf	??__calculate_speed+4,w
  3903  042B  07C4               	addwf	??__calculate_speed,f
  3904  042C  0849               	movf	??__calculate_speed+5,w
  3905  042D  3DC5               	addwfc	??__calculate_speed+1,f
  3906  042E  084A               	movf	??__calculate_speed+6,w
  3907  042F  3DC6               	addwfc	??__calculate_speed+2,f
  3908  0430  084B               	movf	??__calculate_speed+7,w
  3909  0431  3DC7               	addwfc	??__calculate_speed+3,f
  3910  0432  0847               	movf	??__calculate_speed+3,w
  3911  0433  00CF               	movwf	__calculate_speed@time_difference+3
  3912  0434  0846               	movf	??__calculate_speed+2,w
  3913  0435  00CE               	movwf	__calculate_speed@time_difference+2
  3914  0436  0845               	movf	??__calculate_speed+1,w
  3915  0437  00CD               	movwf	__calculate_speed@time_difference+1
  3916  0438  0844               	movf	??__calculate_speed,w
  3917  0439                     L1:	
  3918  0439  00CC               	movwf	__calculate_speed@time_difference
  3919                           
  3920                           ;main.c: 196:     distance = (uint32_t) os.encoder_difference;
  3921                           
  3922                           ;main.c: 194:     }
  3923  043A  085C               	movf	_os+4,w	;volatile
  3924  043B  00D0               	movwf	__calculate_speed@distance
  3925  043C  085D               	movf	_os+5,w	;volatile
  3926  043D  00D1               	movwf	__calculate_speed@distance+1
  3927  043E  0D89               	rlf	9,f
  3928  043F  3B89               	subwfb	9,f
  3929  0440  0989               	comf	9,f
  3930  0441  00D2               	movwf	__calculate_speed@distance+2
  3931  0442  00D3               	movwf	__calculate_speed@distance+3
  3932                           
  3933                           ;main.c: 197:     distance *= 60;
  3934  0443  3000               	movlw	0
  3935  0444  00A3               	movwf	___lmul@multiplier+3
  3936  0445  3000               	movlw	0
  3937  0446  00A2               	movwf	___lmul@multiplier+2
  3938  0447  3000               	movlw	0
  3939  0448  00A1               	movwf	___lmul@multiplier+1
  3940  0449  303C               	movlw	60
  3941  044A  00A0               	movwf	___lmul@multiplier
  3942  044B  0853               	movf	__calculate_speed@distance+3,w
  3943  044C  00A7               	movwf	___lmul@multiplicand+3
  3944  044D  0852               	movf	__calculate_speed@distance+2,w
  3945  044E  00A6               	movwf	___lmul@multiplicand+2
  3946  044F  0851               	movf	__calculate_speed@distance+1,w
  3947  0450  00A5               	movwf	___lmul@multiplicand+1
  3948  0451  0850               	movf	__calculate_speed@distance,w
  3949  0452  00A4               	movwf	___lmul@multiplicand
  3950  0453  318E  26A0  3183   	fcall	___lmul
  3951  0456  0020               	movlb	0	; select bank0
  3952  0457  0823               	movf	?___lmul+3,w
  3953  0458  00D3               	movwf	__calculate_speed@distance+3
  3954  0459  0822               	movf	?___lmul+2,w
  3955  045A  00D2               	movwf	__calculate_speed@distance+2
  3956  045B  0821               	movf	?___lmul+1,w
  3957  045C  00D1               	movwf	__calculate_speed@distance+1
  3958  045D  0820               	movf	?___lmul,w
  3959  045E  00D0               	movwf	__calculate_speed@distance
  3960                           
  3961                           ;main.c: 198:     speed = (float) distance;
  3962  045F  0853               	movf	__calculate_speed@distance+3,w
  3963  0460  00F7               	movwf	___xxtofl@val+3
  3964  0461  0852               	movf	__calculate_speed@distance+2,w
  3965  0462  00F6               	movwf	___xxtofl@val+2
  3966  0463  0851               	movf	__calculate_speed@distance+1,w
  3967  0464  00F5               	movwf	___xxtofl@val+1
  3968  0465  0850               	movf	__calculate_speed@distance,w
  3969  0466  00F4               	movwf	___xxtofl@val
  3970  0467  3001               	movlw	1
  3971  0468  3185  25C5  3183   	fcall	___xxtofl
  3972  046B  0877               	movf	?___xxtofl+3,w
  3973  046C  0020               	movlb	0	; select bank0
  3974  046D  00D7               	movwf	__calculate_speed@speed+3
  3975  046E  0876               	movf	?___xxtofl+2,w
  3976  046F  00D6               	movwf	__calculate_speed@speed+2
  3977  0470  0875               	movf	?___xxtofl+1,w
  3978  0471  00D5               	movwf	__calculate_speed@speed+1
  3979  0472  0874               	movf	?___xxtofl,w
  3980  0473  00D4               	movwf	__calculate_speed@speed
  3981                           
  3982                           ;main.c: 199:     speed /= time_difference;
  3983  0474  084F               	movf	__calculate_speed@time_difference+3,w
  3984  0475  00F7               	movwf	___xxtofl@val+3
  3985  0476  084E               	movf	__calculate_speed@time_difference+2,w
  3986  0477  00F6               	movwf	___xxtofl@val+2
  3987  0478  084D               	movf	__calculate_speed@time_difference+1,w
  3988  0479  00F5               	movwf	___xxtofl@val+1
  3989  047A  084C               	movf	__calculate_speed@time_difference,w
  3990  047B  00F4               	movwf	___xxtofl@val
  3991  047C  3000               	movlw	0
  3992  047D  3185  25C5  3183   	fcall	___xxtofl
  3993  0480  0877               	movf	?___xxtofl+3,w
  3994  0481  0020               	movlb	0	; select bank0
  3995  0482  00AD               	movwf	___fldiv@a+3
  3996  0483  0876               	movf	?___xxtofl+2,w
  3997  0484  00AC               	movwf	___fldiv@a+2
  3998  0485  0875               	movf	?___xxtofl+1,w
  3999  0486  00AB               	movwf	___fldiv@a+1
  4000  0487  0874               	movf	?___xxtofl,w
  4001  0488  00AA               	movwf	___fldiv@a
  4002  0489  0857               	movf	__calculate_speed@speed+3,w
  4003  048A  00B1               	movwf	___fldiv@b+3
  4004  048B  0856               	movf	__calculate_speed@speed+2,w
  4005  048C  00B0               	movwf	___fldiv@b+2
  4006  048D  0855               	movf	__calculate_speed@speed+1,w
  4007  048E  00AF               	movwf	___fldiv@b+1
  4008  048F  0854               	movf	__calculate_speed@speed,w
  4009  0490  00AE               	movwf	___fldiv@b
  4010  0491  3182  226B  3183   	fcall	___fldiv
  4011  0494  0020               	movlb	0	; select bank0
  4012  0495  082D               	movf	?___fldiv+3,w
  4013  0496  00D7               	movwf	__calculate_speed@speed+3
  4014  0497  082C               	movf	?___fldiv+2,w
  4015  0498  00D6               	movwf	__calculate_speed@speed+2
  4016  0499  082B               	movf	?___fldiv+1,w
  4017  049A  00D5               	movwf	__calculate_speed@speed+1
  4018  049B  082A               	movf	?___fldiv,w
  4019  049C  00D4               	movwf	__calculate_speed@speed
  4020                           
  4021                           ;main.c: 200:     speed /= 256;
  4022  049D  3043               	movlw	67
  4023  049E  00AD               	movwf	___fldiv@a+3
  4024  049F  3080               	movlw	128
  4025  04A0  00AC               	movwf	___fldiv@a+2
  4026  04A1  3000               	movlw	0
  4027  04A2  00AB               	movwf	___fldiv@a+1
  4028  04A3  3000               	movlw	0
  4029  04A4  00AA               	movwf	___fldiv@a
  4030  04A5  0857               	movf	__calculate_speed@speed+3,w
  4031  04A6  00B1               	movwf	___fldiv@b+3
  4032  04A7  0856               	movf	__calculate_speed@speed+2,w
  4033  04A8  00B0               	movwf	___fldiv@b+2
  4034  04A9  0855               	movf	__calculate_speed@speed+1,w
  4035  04AA  00AF               	movwf	___fldiv@b+1
  4036  04AB  0854               	movf	__calculate_speed@speed,w
  4037  04AC  00AE               	movwf	___fldiv@b
  4038  04AD  3182  226B  3183   	fcall	___fldiv
  4039  04B0  0020               	movlb	0	; select bank0
  4040  04B1  082D               	movf	?___fldiv+3,w
  4041  04B2  00D7               	movwf	__calculate_speed@speed+3
  4042  04B3  082C               	movf	?___fldiv+2,w
  4043  04B4  00D6               	movwf	__calculate_speed@speed+2
  4044  04B5  082B               	movf	?___fldiv+1,w
  4045  04B6  00D5               	movwf	__calculate_speed@speed+1
  4046  04B7  082A               	movf	?___fldiv,w
  4047  04B8  00D4               	movwf	__calculate_speed@speed
  4048                           
  4049                           ;main.c: 201:     speed *= 32;
  4050  04B9  3042               	movlw	66
  4051  04BA  00A8               	movwf	___flmul@b+3
  4052  04BB  3000               	movlw	0
  4053  04BC  00A7               	movwf	___flmul@b+2
  4054  04BD  3000               	movlw	0
  4055  04BE  00A6               	movwf	___flmul@b+1
  4056  04BF  3000               	movlw	0
  4057  04C0  00A5               	movwf	___flmul@b
  4058  04C1  0857               	movf	__calculate_speed@speed+3,w
  4059  04C2  00AC               	movwf	___flmul@a+3
  4060  04C3  0856               	movf	__calculate_speed@speed+2,w
  4061  04C4  00AB               	movwf	___flmul@a+2
  4062  04C5  0855               	movf	__calculate_speed@speed+1,w
  4063  04C6  00AA               	movwf	___flmul@a+1
  4064  04C7  0854               	movf	__calculate_speed@speed,w
  4065  04C8  00A9               	movwf	___flmul@a
  4066  04C9  3180  203F  3183   	fcall	___flmul
  4067  04CC  0020               	movlb	0	; select bank0
  4068  04CD  0828               	movf	?___flmul+3,w
  4069  04CE  00D7               	movwf	__calculate_speed@speed+3
  4070  04CF  0827               	movf	?___flmul+2,w
  4071  04D0  00D6               	movwf	__calculate_speed@speed+2
  4072  04D1  0826               	movf	?___flmul+1,w
  4073  04D2  00D5               	movwf	__calculate_speed@speed+1
  4074  04D3  0825               	movf	?___flmul,w
  4075  04D4  00D4               	movwf	__calculate_speed@speed
  4076                           
  4077                           ;main.c: 202:     speed *= 8000000.0;
  4078  04D5  304A               	movlw	74
  4079  04D6  00A8               	movwf	___flmul@b+3
  4080  04D7  30F4               	movlw	244
  4081  04D8  00A7               	movwf	___flmul@b+2
  4082  04D9  3024               	movlw	36
  4083  04DA  00A6               	movwf	___flmul@b+1
  4084  04DB  3000               	movlw	0
  4085  04DC  00A5               	movwf	___flmul@b
  4086  04DD  0857               	movf	__calculate_speed@speed+3,w
  4087  04DE  00AC               	movwf	___flmul@a+3
  4088  04DF  0856               	movf	__calculate_speed@speed+2,w
  4089  04E0  00AB               	movwf	___flmul@a+2
  4090  04E1  0855               	movf	__calculate_speed@speed+1,w
  4091  04E2  00AA               	movwf	___flmul@a+1
  4092  04E3  0854               	movf	__calculate_speed@speed,w
  4093  04E4  00A9               	movwf	___flmul@a
  4094  04E5  3180  203F  3183   	fcall	___flmul
  4095  04E8  0020               	movlb	0	; select bank0
  4096  04E9  0828               	movf	?___flmul+3,w
  4097  04EA  00D7               	movwf	__calculate_speed@speed+3
  4098  04EB  0827               	movf	?___flmul+2,w
  4099  04EC  00D6               	movwf	__calculate_speed@speed+2
  4100  04ED  0826               	movf	?___flmul+1,w
  4101  04EE  00D5               	movwf	__calculate_speed@speed+1
  4102  04EF  0825               	movf	?___flmul,w
  4103  04F0  00D4               	movwf	__calculate_speed@speed
  4104                           
  4105                           ;main.c: 203:     os.speed = (int16_t) speed;
  4106  04F1  0857               	movf	__calculate_speed@speed+3,w
  4107  04F2  00F7               	movwf	___fltol@f1+3
  4108  04F3  0856               	movf	__calculate_speed@speed+2,w
  4109  04F4  00F6               	movwf	___fltol@f1+2
  4110  04F5  0855               	movf	__calculate_speed@speed+1,w
  4111  04F6  00F5               	movwf	___fltol@f1+1
  4112  04F7  0854               	movf	__calculate_speed@speed,w
  4113  04F8  00F4               	movwf	___fltol@f1
  4114  04F9  3186  265B         	fcall	___fltol
  4115  04FB  0875               	movf	?___fltol+1,w
  4116  04FC  0020               	movlb	0	; select bank0
  4117  04FD  00E9               	movwf	_os+17	;volatile
  4118  04FE  0874               	movf	?___fltol,w
  4119  04FF  00E8               	movwf	_os+16	;volatile
  4120  0500  0008               	return
  4121  0501                     __end_of__calculate_speed:	
  4122                           
  4123                           	psect	text9
  4124  05C5                     __ptext9:	
  4125 ;; *************** function ___xxtofl *****************
  4126 ;; Defined at:
  4127 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  sign            1    wreg     unsigned char 
  4130 ;;  val             4    4[COMMON] long 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  sign            1    4[BANK0 ] unsigned char 
  4133 ;;  arg             4    6[BANK0 ] unsigned long 
  4134 ;;  exp             1    5[BANK0 ] unsigned char 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  4    4[COMMON] unsigned char 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4145 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;Total ram usage:       14 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    2
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		__calculate_speed
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           
  4159                           ;psect for function ___xxtofl
  4160  05C5                     ___xxtofl:	
  4161                           
  4162                           ;incstack = 0
  4163                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4164                           ;___xxtofl@sign stored from wreg
  4165  05C5  0020               	movlb	0	; select bank0
  4166  05C6  00A4               	movwf	___xxtofl@sign
  4167  05C7  0824               	movf	___xxtofl@sign,w
  4168  05C8  1D03               	btfss	3,2
  4169  05C9  1FF7               	btfss	___xxtofl@val+3,7
  4170  05CA  2DDB               	goto	l1925
  4171  05CB  0974               	comf	___xxtofl@val,w
  4172  05CC  00A6               	movwf	___xxtofl@arg
  4173  05CD  0975               	comf	___xxtofl@val+1,w
  4174  05CE  00A7               	movwf	___xxtofl@arg+1
  4175  05CF  0976               	comf	___xxtofl@val+2,w
  4176  05D0  00A8               	movwf	___xxtofl@arg+2
  4177  05D1  0977               	comf	___xxtofl@val+3,w
  4178  05D2  00A9               	movwf	___xxtofl@arg+3
  4179  05D3  0AA6               	incf	___xxtofl@arg,f
  4180  05D4  1903               	skipnz
  4181  05D5  0AA7               	incf	___xxtofl@arg+1,f
  4182  05D6  1903               	skipnz
  4183  05D7  0AA8               	incf	___xxtofl@arg+2,f
  4184  05D8  1903               	skipnz
  4185  05D9  0AA9               	incf	___xxtofl@arg+3,f
  4186  05DA  2DE3               	goto	l718
  4187  05DB                     l1925:	
  4188  05DB  0877               	movf	___xxtofl@val+3,w
  4189  05DC  00A9               	movwf	___xxtofl@arg+3
  4190  05DD  0876               	movf	___xxtofl@val+2,w
  4191  05DE  00A8               	movwf	___xxtofl@arg+2
  4192  05DF  0875               	movf	___xxtofl@val+1,w
  4193  05E0  00A7               	movwf	___xxtofl@arg+1
  4194  05E1  0874               	movf	___xxtofl@val,w
  4195  05E2  00A6               	movwf	___xxtofl@arg
  4196  05E3                     l718:	
  4197  05E3  0877               	movf	___xxtofl@val+3,w
  4198  05E4  0476               	iorwf	___xxtofl@val+2,w
  4199  05E5  0475               	iorwf	___xxtofl@val+1,w
  4200  05E6  0474               	iorwf	___xxtofl@val,w
  4201  05E7  1D03               	skipz
  4202  05E8  2DF2               	goto	l1931
  4203  05E9  3000               	movlw	0
  4204  05EA  00F7               	movwf	?___xxtofl+3
  4205  05EB  3000               	movlw	0
  4206  05EC  00F6               	movwf	?___xxtofl+2
  4207  05ED  3000               	movlw	0
  4208  05EE  00F5               	movwf	?___xxtofl+1
  4209  05EF  3000               	movlw	0
  4210  05F0  00F4               	movwf	?___xxtofl
  4211  05F1  0008               	return
  4212  05F2                     l1931:	
  4213  05F2  3096               	movlw	150
  4214  05F3  00A0               	movwf	??___xxtofl
  4215  05F4  0820               	movf	??___xxtofl,w
  4216  05F5  00A5               	movwf	___xxtofl@exp
  4217  05F6                     l1935:	
  4218  05F6  30FE               	movlw	254
  4219  05F7  0529               	andwf	___xxtofl@arg+3,w
  4220  05F8  1903               	btfsc	3,2
  4221  05F9  2E19               	goto	l724
  4222  05FA  3001               	movlw	1
  4223  05FB  00A0               	movwf	??___xxtofl
  4224  05FC  0820               	movf	??___xxtofl,w
  4225  05FD  07A5               	addwf	___xxtofl@exp,f
  4226  05FE  3001               	movlw	1
  4227  05FF                     u2335:	
  4228  05FF  36A9               	lsrf	___xxtofl@arg+3,f
  4229  0600  0CA8               	rrf	___xxtofl@arg+2,f
  4230  0601  0CA7               	rrf	___xxtofl@arg+1,f
  4231  0602  0CA6               	rrf	___xxtofl@arg,f
  4232  0603  0B89               	decfsz	9,f
  4233  0604  2DFF               	goto	u2335
  4234  0605  2DF6               	goto	l1935
  4235  0606                     l1937:	
  4236  0606  3001               	movlw	1
  4237  0607  00A0               	movwf	??___xxtofl
  4238  0608  0820               	movf	??___xxtofl,w
  4239  0609  07A5               	addwf	___xxtofl@exp,f
  4240  060A  3001               	movlw	1
  4241  060B  07A6               	addwf	___xxtofl@arg,f
  4242  060C  3000               	movlw	0
  4243  060D  3DA7               	addwfc	___xxtofl@arg+1,f
  4244  060E  3000               	movlw	0
  4245  060F  3DA8               	addwfc	___xxtofl@arg+2,f
  4246  0610  3000               	movlw	0
  4247  0611  3DA9               	addwfc	___xxtofl@arg+3,f
  4248  0612  3001               	movlw	1
  4249  0613                     u2355:	
  4250  0613  36A9               	lsrf	___xxtofl@arg+3,f
  4251  0614  0CA8               	rrf	___xxtofl@arg+2,f
  4252  0615  0CA7               	rrf	___xxtofl@arg+1,f
  4253  0616  0CA6               	rrf	___xxtofl@arg,f
  4254  0617  0B89               	decfsz	9,f
  4255  0618  2E13               	goto	u2355
  4256  0619                     l724:	
  4257  0619  30FF               	movlw	255
  4258  061A  0529               	andwf	___xxtofl@arg+3,w
  4259  061B  1903               	btfsc	3,2
  4260  061C  2E27               	goto	l1945
  4261  061D  2E06               	goto	l1937
  4262  061E                     l1943:	
  4263  061E  3001               	movlw	1
  4264  061F  02A5               	subwf	___xxtofl@exp,f
  4265  0620  3001               	movlw	1
  4266  0621                     u2375:	
  4267  0621  35A6               	lslf	___xxtofl@arg,f
  4268  0622  0DA7               	rlf	___xxtofl@arg+1,f
  4269  0623  0DA8               	rlf	___xxtofl@arg+2,f
  4270  0624  0DA9               	rlf	___xxtofl@arg+3,f
  4271  0625  0B89               	decfsz	9,f
  4272  0626  2E21               	goto	u2375
  4273  0627                     l1945:	
  4274  0627  1BA8               	btfsc	___xxtofl@arg+2,7
  4275  0628  2E2D               	goto	l731
  4276  0629  3002               	movlw	2
  4277  062A  0225               	subwf	___xxtofl@exp,w
  4278  062B  1803               	skipnc
  4279  062C  2E1E               	goto	l1943
  4280  062D                     l731:	
  4281  062D  1825               	btfsc	___xxtofl@exp,0
  4282  062E  2E37               	goto	l732
  4283  062F  30FF               	movlw	255
  4284  0630  05A6               	andwf	___xxtofl@arg,f
  4285  0631  30FF               	movlw	255
  4286  0632  05A7               	andwf	___xxtofl@arg+1,f
  4287  0633  307F               	movlw	127
  4288  0634  05A8               	andwf	___xxtofl@arg+2,f
  4289  0635  30FF               	movlw	255
  4290  0636  05A9               	andwf	___xxtofl@arg+3,f
  4291  0637                     l732:	
  4292  0637  1003               	clrc
  4293  0638  0CA5               	rrf	___xxtofl@exp,f
  4294  0639  0825               	movf	___xxtofl@exp,w
  4295  063A  00A0               	movwf	??___xxtofl
  4296  063B  01A1               	clrf	??___xxtofl+1
  4297  063C  01A2               	clrf	??___xxtofl+2
  4298  063D  01A3               	clrf	??___xxtofl+3
  4299  063E  3018               	movlw	24
  4300  063F                     u2415:	
  4301  063F  35A0               	lslf	??___xxtofl,f
  4302  0640  0DA1               	rlf	??___xxtofl+1,f
  4303  0641  0DA2               	rlf	??___xxtofl+2,f
  4304  0642  0DA3               	rlf	??___xxtofl+3,f
  4305  0643  0B89               	decfsz	9,f
  4306  0644  2E3F               	goto	u2415
  4307  0645  0820               	movf	??___xxtofl,w
  4308  0646  04A6               	iorwf	___xxtofl@arg,f
  4309  0647  0821               	movf	??___xxtofl+1,w
  4310  0648  04A7               	iorwf	___xxtofl@arg+1,f
  4311  0649  0822               	movf	??___xxtofl+2,w
  4312  064A  04A8               	iorwf	___xxtofl@arg+2,f
  4313  064B  0823               	movf	??___xxtofl+3,w
  4314  064C  04A9               	iorwf	___xxtofl@arg+3,f
  4315  064D  0824               	movf	___xxtofl@sign,w
  4316  064E  1D03               	btfss	3,2
  4317  064F  1FF7               	btfss	___xxtofl@val+3,7
  4318  0650  2E52               	goto	l1959
  4319  0651  17A9               	bsf	___xxtofl@arg+3,7
  4320  0652                     l1959:	
  4321  0652  0829               	movf	___xxtofl@arg+3,w
  4322  0653  00F7               	movwf	?___xxtofl+3
  4323  0654  0828               	movf	___xxtofl@arg+2,w
  4324  0655  00F6               	movwf	?___xxtofl+2
  4325  0656  0827               	movf	___xxtofl@arg+1,w
  4326  0657  00F5               	movwf	?___xxtofl+1
  4327  0658  0826               	movf	___xxtofl@arg,w
  4328  0659  00F4               	movwf	?___xxtofl
  4329  065A  0008               	return
  4330  065B                     __end_of___xxtofl:	
  4331                           
  4332                           	psect	text10
  4333  0EA0                     __ptext10:	
  4334 ;; *************** function ___lmul *****************
  4335 ;; Defined at:
  4336 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4339 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  product         4    4[COMMON] unsigned long 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  4    0[BANK0 ] unsigned long 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4351 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;Total ram usage:       12 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    2
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		__calculate_speed
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function ___lmul
  4367  0EA0                     ___lmul:	
  4368                           
  4369                           ;incstack = 0
  4370                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4371  0EA0  3000               	movlw	0
  4372  0EA1  00F7               	movwf	___lmul@product+3
  4373  0EA2  3000               	movlw	0
  4374  0EA3  00F6               	movwf	___lmul@product+2
  4375  0EA4  3000               	movlw	0
  4376  0EA5  00F5               	movwf	___lmul@product+1
  4377  0EA6  3000               	movlw	0
  4378  0EA7  00F4               	movwf	___lmul@product
  4379  0EA8                     l1543:	
  4380  0EA8  0020               	movlb	0	; select bank0
  4381  0EA9  1C20               	btfss	___lmul@multiplier,0
  4382  0EAA  2EB3               	goto	l1547
  4383  0EAB  0824               	movf	___lmul@multiplicand,w
  4384  0EAC  07F4               	addwf	___lmul@product,f
  4385  0EAD  0825               	movf	___lmul@multiplicand+1,w
  4386  0EAE  3DF5               	addwfc	___lmul@product+1,f
  4387  0EAF  0826               	movf	___lmul@multiplicand+2,w
  4388  0EB0  3DF6               	addwfc	___lmul@product+2,f
  4389  0EB1  0827               	movf	___lmul@multiplicand+3,w
  4390  0EB2  3DF7               	addwfc	___lmul@product+3,f
  4391  0EB3                     l1547:	
  4392  0EB3  3001               	movlw	1
  4393  0EB4                     u1495:	
  4394  0EB4  35A4               	lslf	___lmul@multiplicand,f
  4395  0EB5  0DA5               	rlf	___lmul@multiplicand+1,f
  4396  0EB6  0DA6               	rlf	___lmul@multiplicand+2,f
  4397  0EB7  0DA7               	rlf	___lmul@multiplicand+3,f
  4398  0EB8  0B89               	decfsz	9,f
  4399  0EB9  2EB4               	goto	u1495
  4400  0EBA  3001               	movlw	1
  4401  0EBB                     u1505:	
  4402  0EBB  36A3               	lsrf	___lmul@multiplier+3,f
  4403  0EBC  0CA2               	rrf	___lmul@multiplier+2,f
  4404  0EBD  0CA1               	rrf	___lmul@multiplier+1,f
  4405  0EBE  0CA0               	rrf	___lmul@multiplier,f
  4406  0EBF  0B89               	decfsz	9,f
  4407  0EC0  2EBB               	goto	u1505
  4408  0EC1  0823               	movf	___lmul@multiplier+3,w
  4409  0EC2  0422               	iorwf	___lmul@multiplier+2,w
  4410  0EC3  0421               	iorwf	___lmul@multiplier+1,w
  4411  0EC4  0420               	iorwf	___lmul@multiplier,w
  4412  0EC5  1D03               	skipz
  4413  0EC6  2EA8               	goto	l1543
  4414  0EC7  0877               	movf	___lmul@product+3,w
  4415  0EC8  00A3               	movwf	?___lmul+3
  4416  0EC9  0876               	movf	___lmul@product+2,w
  4417  0ECA  00A2               	movwf	?___lmul+2
  4418  0ECB  0875               	movf	___lmul@product+1,w
  4419  0ECC  00A1               	movwf	?___lmul+1
  4420  0ECD  0874               	movf	___lmul@product,w
  4421  0ECE  00A0               	movwf	?___lmul
  4422  0ECF  0008               	return
  4423  0ED0                     __end_of___lmul:	
  4424                           
  4425                           	psect	text11
  4426  065B                     __ptext11:	
  4427 ;; *************** function ___fltol *****************
  4428 ;; Defined at:
  4429 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  f1              4    4[COMMON] unsigned long 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  exp1            1    6[BANK0 ] unsigned char 
  4434 ;;  sign1           1    5[BANK0 ] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  4    4[COMMON] long 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Totals:         4       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;Total ram usage:       11 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    2
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		__calculate_speed
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function ___fltol
  4460  065B                     ___fltol:	
  4461                           
  4462                           ;incstack = 0
  4463                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4464  065B  0874               	movf	___fltol@f1,w
  4465  065C  0020               	movlb	0	; select bank0
  4466  065D  00A0               	movwf	??___fltol
  4467  065E  0875               	movf	___fltol@f1+1,w
  4468  065F  00A1               	movwf	??___fltol+1
  4469  0660  0876               	movf	___fltol@f1+2,w
  4470  0661  00A2               	movwf	??___fltol+2
  4471  0662  0877               	movf	___fltol@f1+3,w
  4472  0663  00A3               	movwf	??___fltol+3
  4473  0664  1003               	clrc
  4474  0665  0D22               	rlf	??___fltol+2,w
  4475  0666  0D23               	rlf	??___fltol+3,w
  4476  0667  00A4               	movwf	??___fltol+4
  4477  0668  0824               	movf	??___fltol+4,w
  4478  0669  00A6               	movwf	___fltol@exp1
  4479  066A  0826               	movf	___fltol@exp1,w
  4480  066B  1D03               	btfss	3,2
  4481  066C  2E76               	goto	l2173
  4482  066D  3000               	movlw	0
  4483  066E  00F7               	movwf	?___fltol+3
  4484  066F  3000               	movlw	0
  4485  0670  00F6               	movwf	?___fltol+2
  4486  0671  3000               	movlw	0
  4487  0672  00F5               	movwf	?___fltol+1
  4488  0673  3000               	movlw	0
  4489  0674  00F4               	movwf	?___fltol
  4490  0675  0008               	return
  4491  0676                     l2173:	
  4492  0676  0874               	movf	___fltol@f1,w
  4493  0677  00A0               	movwf	??___fltol
  4494  0678  0875               	movf	___fltol@f1+1,w
  4495  0679  00A1               	movwf	??___fltol+1
  4496  067A  0876               	movf	___fltol@f1+2,w
  4497  067B  00A2               	movwf	??___fltol+2
  4498  067C  0877               	movf	___fltol@f1+3,w
  4499  067D  00A3               	movwf	??___fltol+3
  4500  067E  301F               	movlw	31
  4501  067F                     u2765:	
  4502  067F  36A3               	lsrf	??___fltol+3,f
  4503  0680  0CA2               	rrf	??___fltol+2,f
  4504  0681  0CA1               	rrf	??___fltol+1,f
  4505  0682  0CA0               	rrf	??___fltol,f
  4506  0683  0B89               	decfsz	9,f
  4507  0684  2E7F               	goto	u2765
  4508  0685  0820               	movf	??___fltol,w
  4509  0686  00A4               	movwf	??___fltol+4
  4510  0687  0824               	movf	??___fltol+4,w
  4511  0688  00A5               	movwf	___fltol@sign1
  4512  0689  17F6               	bsf	___fltol@f1+2,7
  4513  068A  30FF               	movlw	255
  4514  068B  05F4               	andwf	___fltol@f1,f
  4515  068C  30FF               	movlw	255
  4516  068D  05F5               	andwf	___fltol@f1+1,f
  4517  068E  30FF               	movlw	255
  4518  068F  05F6               	andwf	___fltol@f1+2,f
  4519  0690  3000               	movlw	0
  4520  0691  05F7               	andwf	___fltol@f1+3,f
  4521  0692  3096               	movlw	150
  4522  0693  02A6               	subwf	___fltol@exp1,f
  4523  0694  1FA6               	btfss	___fltol@exp1,7
  4524  0695  2EB2               	goto	l2191
  4525  0696  0826               	movf	___fltol@exp1,w
  4526  0697  3A80               	xorlw	128
  4527  0698  3E97               	addlw	151
  4528  0699  1803               	skipnc
  4529  069A  2EA4               	goto	l2189
  4530  069B  3000               	movlw	0
  4531  069C  00F7               	movwf	?___fltol+3
  4532  069D  3000               	movlw	0
  4533  069E  00F6               	movwf	?___fltol+2
  4534  069F  3000               	movlw	0
  4535  06A0  00F5               	movwf	?___fltol+1
  4536  06A1  3000               	movlw	0
  4537  06A2  00F4               	movwf	?___fltol
  4538  06A3  0008               	return
  4539  06A4                     l2189:	
  4540  06A4  3001               	movlw	1
  4541  06A5                     u2795:	
  4542  06A5  36F7               	lsrf	___fltol@f1+3,f
  4543  06A6  0CF6               	rrf	___fltol@f1+2,f
  4544  06A7  0CF5               	rrf	___fltol@f1+1,f
  4545  06A8  0CF4               	rrf	___fltol@f1,f
  4546  06A9  0B89               	decfsz	9,f
  4547  06AA  2EA5               	goto	u2795
  4548  06AB  3001               	movlw	1
  4549  06AC  00A0               	movwf	??___fltol
  4550  06AD  0820               	movf	??___fltol,w
  4551  06AE  07A6               	addwf	___fltol@exp1,f
  4552  06AF  1903               	btfsc	3,2
  4553  06B0  2ECB               	goto	l2199
  4554  06B1  2EA4               	goto	l2189
  4555  06B2                     l2191:	
  4556  06B2  3020               	movlw	32
  4557  06B3  0226               	subwf	___fltol@exp1,w
  4558  06B4  1C03               	skipc
  4559  06B5  2EC8               	goto	l503
  4560  06B6  3000               	movlw	0
  4561  06B7  00F7               	movwf	?___fltol+3
  4562  06B8  3000               	movlw	0
  4563  06B9  00F6               	movwf	?___fltol+2
  4564  06BA  3000               	movlw	0
  4565  06BB  00F5               	movwf	?___fltol+1
  4566  06BC  3000               	movlw	0
  4567  06BD  00F4               	movwf	?___fltol
  4568  06BE  0008               	return
  4569  06BF                     l2197:	
  4570  06BF  3001               	movlw	1
  4571  06C0                     u2825:	
  4572  06C0  35F4               	lslf	___fltol@f1,f
  4573  06C1  0DF5               	rlf	___fltol@f1+1,f
  4574  06C2  0DF6               	rlf	___fltol@f1+2,f
  4575  06C3  0DF7               	rlf	___fltol@f1+3,f
  4576  06C4  0B89               	decfsz	9,f
  4577  06C5  2EC0               	goto	u2825
  4578  06C6  3001               	movlw	1
  4579  06C7  02A6               	subwf	___fltol@exp1,f
  4580  06C8                     l503:	
  4581  06C8  0826               	movf	___fltol@exp1,w
  4582  06C9  1D03               	btfss	3,2
  4583  06CA  2EBF               	goto	l2197
  4584  06CB                     l2199:	
  4585  06CB  0825               	movf	___fltol@sign1,w
  4586  06CC  1903               	btfsc	3,2
  4587  06CD  0008               	return
  4588  06CE  09F4               	comf	___fltol@f1,f
  4589  06CF  09F5               	comf	___fltol@f1+1,f
  4590  06D0  09F6               	comf	___fltol@f1+2,f
  4591  06D1  09F7               	comf	___fltol@f1+3,f
  4592  06D2  0AF4               	incf	___fltol@f1,f
  4593  06D3  1903               	skipnz
  4594  06D4  0AF5               	incf	___fltol@f1+1,f
  4595  06D5  1903               	skipnz
  4596  06D6  0AF6               	incf	___fltol@f1+2,f
  4597  06D7  1903               	skipnz
  4598  06D8  0AF7               	incf	___fltol@f1+3,f
  4599  06D9  0008               	return
  4600  06DA                     __end_of___fltol:	
  4601                           
  4602                           	psect	text12
  4603  003F                     __ptext12:	
  4604 ;; *************** function ___flmul *****************
  4605 ;; Defined at:
  4606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  b               4    5[BANK0 ] long 
  4609 ;;  a               4    9[BANK0 ] long 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  prod            4   25[BANK0 ] struct .
  4612 ;;  grs             4   19[BANK0 ] unsigned long 
  4613 ;;  temp            2   29[BANK0 ] struct .
  4614 ;;  bexp            1   24[BANK0 ] unsigned char 
  4615 ;;  aexp            1   23[BANK0 ] unsigned char 
  4616 ;;  sign            1   18[BANK0 ] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  4    5[BANK0 ] unsigned char 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0, pclath, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4626 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;Total ram usage:       26 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    3
  4633 ;; This function calls:
  4634 ;;		__Umul8_16
  4635 ;; This function is called by:
  4636 ;;		__calculate_speed
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function ___flmul
  4642  003F                     ___flmul:	
  4643                           
  4644                           ;incstack = 0
  4645                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4646  003F  0020               	movlb	0	; select bank0
  4647  0040  0828               	movf	___flmul@b+3,w
  4648  0041  3980               	andlw	128
  4649  0042  00AD               	movwf	??___flmul
  4650  0043  082D               	movf	??___flmul,w
  4651  0044  00B2               	movwf	___flmul@sign
  4652  0045  3528               	lslf	___flmul@b+3,w
  4653  0046  00AD               	movwf	??___flmul
  4654  0047  082D               	movf	??___flmul,w
  4655  0048  00B8               	movwf	___flmul@bexp
  4656  0049  1BA7               	btfsc	___flmul@b+2,7
  4657  004A  1438               	bsf	___flmul@bexp,0
  4658  004B  0838               	movf	___flmul@bexp,w
  4659  004C  1903               	btfsc	3,2
  4660  004D  285B               	goto	l1795
  4661  004E  0A38               	incf	___flmul@bexp,w
  4662  004F  1D03               	btfss	3,2
  4663  0050  2859               	goto	l1793
  4664  0051  3000               	movlw	0
  4665  0052  00A8               	movwf	___flmul@b+3
  4666  0053  3000               	movlw	0
  4667  0054  00A7               	movwf	___flmul@b+2
  4668  0055  3000               	movlw	0
  4669  0056  00A6               	movwf	___flmul@b+1
  4670  0057  3000               	movlw	0
  4671  0058  00A5               	movwf	___flmul@b
  4672  0059                     l1793:	
  4673  0059  17A7               	bsf	___flmul@b+2,7
  4674  005A  2863               	goto	l1797
  4675  005B                     l1795:	
  4676  005B  3000               	movlw	0
  4677  005C  00A8               	movwf	___flmul@b+3
  4678  005D  3000               	movlw	0
  4679  005E  00A7               	movwf	___flmul@b+2
  4680  005F  3000               	movlw	0
  4681  0060  00A6               	movwf	___flmul@b+1
  4682  0061  3000               	movlw	0
  4683  0062  00A5               	movwf	___flmul@b
  4684  0063                     l1797:	
  4685  0063  082C               	movf	___flmul@a+3,w
  4686  0064  3980               	andlw	128
  4687  0065  00AD               	movwf	??___flmul
  4688  0066  082D               	movf	??___flmul,w
  4689  0067  06B2               	xorwf	___flmul@sign,f
  4690  0068  352C               	lslf	___flmul@a+3,w
  4691  0069  00AD               	movwf	??___flmul
  4692  006A  082D               	movf	??___flmul,w
  4693  006B  00B7               	movwf	___flmul@aexp
  4694  006C  1BAB               	btfsc	___flmul@a+2,7
  4695  006D  1437               	bsf	___flmul@aexp,0
  4696  006E  0837               	movf	___flmul@aexp,w
  4697  006F  1903               	btfsc	3,2
  4698  0070  287E               	goto	l1813
  4699  0071  0A37               	incf	___flmul@aexp,w
  4700  0072  1D03               	btfss	3,2
  4701  0073  287C               	goto	l1811
  4702  0074  3000               	movlw	0
  4703  0075  00AC               	movwf	___flmul@a+3
  4704  0076  3000               	movlw	0
  4705  0077  00AB               	movwf	___flmul@a+2
  4706  0078  3000               	movlw	0
  4707  0079  00AA               	movwf	___flmul@a+1
  4708  007A  3000               	movlw	0
  4709  007B  00A9               	movwf	___flmul@a
  4710  007C                     l1811:	
  4711  007C  17AB               	bsf	___flmul@a+2,7
  4712  007D  2886               	goto	l1815
  4713  007E                     l1813:	
  4714  007E  3000               	movlw	0
  4715  007F  00AC               	movwf	___flmul@a+3
  4716  0080  3000               	movlw	0
  4717  0081  00AB               	movwf	___flmul@a+2
  4718  0082  3000               	movlw	0
  4719  0083  00AA               	movwf	___flmul@a+1
  4720  0084  3000               	movlw	0
  4721  0085  00A9               	movwf	___flmul@a
  4722  0086                     l1815:	
  4723  0086  0837               	movf	___flmul@aexp,w
  4724  0087  1D03               	btfss	3,2
  4725  0088  0838               	movf	___flmul@bexp,w
  4726  0089  1D03               	btfss	3,2
  4727  008A  2894               	goto	l1823
  4728  008B  3000               	movlw	0
  4729  008C  00A8               	movwf	?___flmul+3
  4730  008D  3000               	movlw	0
  4731  008E  00A7               	movwf	?___flmul+2
  4732  008F  3000               	movlw	0
  4733  0090  00A6               	movwf	?___flmul+1
  4734  0091  3000               	movlw	0
  4735  0092  00A5               	movwf	?___flmul
  4736  0093  0008               	return
  4737  0094                     l1823:	
  4738  0094  0825               	movf	___flmul@b,w
  4739  0095  00AD               	movwf	??___flmul
  4740  0096  082D               	movf	??___flmul,w
  4741  0097  00F4               	movwf	__Umul8_16@multiplicand
  4742  0098  082B               	movf	___flmul@a+2,w
  4743  0099  3187  27DD  3180   	fcall	__Umul8_16
  4744  009C  0875               	movf	?__Umul8_16+1,w
  4745  009D  0020               	movlb	0	; select bank0
  4746  009E  00BE               	movwf	___flmul@temp+1
  4747  009F  0874               	movf	?__Umul8_16,w
  4748  00A0  00BD               	movwf	___flmul@temp
  4749  00A1  083D               	movf	___flmul@temp,w
  4750  00A2  00AD               	movwf	??___flmul
  4751  00A3  01AE               	clrf	??___flmul+1
  4752  00A4  01AF               	clrf	??___flmul+2
  4753  00A5  01B0               	clrf	??___flmul+3
  4754  00A6  0830               	movf	??___flmul+3,w
  4755  00A7  00B6               	movwf	___flmul@grs+3
  4756  00A8  082F               	movf	??___flmul+2,w
  4757  00A9  00B5               	movwf	___flmul@grs+2
  4758  00AA  082E               	movf	??___flmul+1,w
  4759  00AB  00B4               	movwf	___flmul@grs+1
  4760  00AC  082D               	movf	??___flmul,w
  4761  00AD  00B3               	movwf	___flmul@grs
  4762  00AE  083E               	movf	___flmul@temp+1,w
  4763  00AF  00AD               	movwf	??___flmul
  4764  00B0  01AE               	clrf	??___flmul+1
  4765  00B1  01AF               	clrf	??___flmul+2
  4766  00B2  01B0               	clrf	??___flmul+3
  4767  00B3  0830               	movf	??___flmul+3,w
  4768  00B4  00BC               	movwf	___flmul@prod+3
  4769  00B5  082F               	movf	??___flmul+2,w
  4770  00B6  00BB               	movwf	___flmul@prod+2
  4771  00B7  082E               	movf	??___flmul+1,w
  4772  00B8  00BA               	movwf	___flmul@prod+1
  4773  00B9  082D               	movf	??___flmul,w
  4774  00BA  00B9               	movwf	___flmul@prod
  4775  00BB  0826               	movf	___flmul@b+1,w
  4776  00BC  00AD               	movwf	??___flmul
  4777  00BD  082D               	movf	??___flmul,w
  4778  00BE  00F4               	movwf	__Umul8_16@multiplicand
  4779  00BF  082A               	movf	___flmul@a+1,w
  4780  00C0  3187  27DD  3180   	fcall	__Umul8_16
  4781  00C3  0875               	movf	?__Umul8_16+1,w
  4782  00C4  0020               	movlb	0	; select bank0
  4783  00C5  00BE               	movwf	___flmul@temp+1
  4784  00C6  0874               	movf	?__Umul8_16,w
  4785  00C7  00BD               	movwf	___flmul@temp
  4786  00C8  083D               	movf	___flmul@temp,w
  4787  00C9  00AD               	movwf	??___flmul
  4788  00CA  01AE               	clrf	??___flmul+1
  4789  00CB  01AF               	clrf	??___flmul+2
  4790  00CC  01B0               	clrf	??___flmul+3
  4791  00CD  082D               	movf	??___flmul,w
  4792  00CE  07B3               	addwf	___flmul@grs,f
  4793  00CF  082E               	movf	??___flmul+1,w
  4794  00D0  3DB4               	addwfc	___flmul@grs+1,f
  4795  00D1  082F               	movf	??___flmul+2,w
  4796  00D2  3DB5               	addwfc	___flmul@grs+2,f
  4797  00D3  0830               	movf	??___flmul+3,w
  4798  00D4  3DB6               	addwfc	___flmul@grs+3,f
  4799  00D5  083E               	movf	___flmul@temp+1,w
  4800  00D6  00AD               	movwf	??___flmul
  4801  00D7  01AE               	clrf	??___flmul+1
  4802  00D8  01AF               	clrf	??___flmul+2
  4803  00D9  01B0               	clrf	??___flmul+3
  4804  00DA  082D               	movf	??___flmul,w
  4805  00DB  07B9               	addwf	___flmul@prod,f
  4806  00DC  082E               	movf	??___flmul+1,w
  4807  00DD  3DBA               	addwfc	___flmul@prod+1,f
  4808  00DE  082F               	movf	??___flmul+2,w
  4809  00DF  3DBB               	addwfc	___flmul@prod+2,f
  4810  00E0  0830               	movf	??___flmul+3,w
  4811  00E1  3DBC               	addwfc	___flmul@prod+3,f
  4812  00E2  0827               	movf	___flmul@b+2,w
  4813  00E3  00AD               	movwf	??___flmul
  4814  00E4  082D               	movf	??___flmul,w
  4815  00E5  00F4               	movwf	__Umul8_16@multiplicand
  4816  00E6  0829               	movf	___flmul@a,w
  4817  00E7  3187  27DD  3180   	fcall	__Umul8_16
  4818  00EA  0875               	movf	?__Umul8_16+1,w
  4819  00EB  0020               	movlb	0	; select bank0
  4820  00EC  00BE               	movwf	___flmul@temp+1
  4821  00ED  0874               	movf	?__Umul8_16,w
  4822  00EE  00BD               	movwf	___flmul@temp
  4823  00EF  083D               	movf	___flmul@temp,w
  4824  00F0  00AD               	movwf	??___flmul
  4825  00F1  01AE               	clrf	??___flmul+1
  4826  00F2  01AF               	clrf	??___flmul+2
  4827  00F3  01B0               	clrf	??___flmul+3
  4828  00F4  082D               	movf	??___flmul,w
  4829  00F5  07B3               	addwf	___flmul@grs,f
  4830  00F6  082E               	movf	??___flmul+1,w
  4831  00F7  3DB4               	addwfc	___flmul@grs+1,f
  4832  00F8  082F               	movf	??___flmul+2,w
  4833  00F9  3DB5               	addwfc	___flmul@grs+2,f
  4834  00FA  0830               	movf	??___flmul+3,w
  4835  00FB  3DB6               	addwfc	___flmul@grs+3,f
  4836  00FC  083E               	movf	___flmul@temp+1,w
  4837  00FD  00AD               	movwf	??___flmul
  4838  00FE  01AE               	clrf	??___flmul+1
  4839  00FF  01AF               	clrf	??___flmul+2
  4840  0100  01B0               	clrf	??___flmul+3
  4841  0101  082D               	movf	??___flmul,w
  4842  0102  07B9               	addwf	___flmul@prod,f
  4843  0103  082E               	movf	??___flmul+1,w
  4844  0104  3DBA               	addwfc	___flmul@prod+1,f
  4845  0105  082F               	movf	??___flmul+2,w
  4846  0106  3DBB               	addwfc	___flmul@prod+2,f
  4847  0107  0830               	movf	??___flmul+3,w
  4848  0108  3DBC               	addwfc	___flmul@prod+3,f
  4849  0109  3008               	movlw	8
  4850  010A                     u2125:	
  4851  010A  35B3               	lslf	___flmul@grs,f
  4852  010B  0DB4               	rlf	___flmul@grs+1,f
  4853  010C  0DB5               	rlf	___flmul@grs+2,f
  4854  010D  0DB6               	rlf	___flmul@grs+3,f
  4855  010E  0B89               	decfsz	9,f
  4856  010F  290A               	goto	u2125
  4857  0110  0826               	movf	___flmul@b+1,w
  4858  0111  00AD               	movwf	??___flmul
  4859  0112  082D               	movf	??___flmul,w
  4860  0113  00F4               	movwf	__Umul8_16@multiplicand
  4861  0114  0829               	movf	___flmul@a,w
  4862  0115  3187  27DD  3180   	fcall	__Umul8_16
  4863  0118  0875               	movf	?__Umul8_16+1,w
  4864  0119  0020               	movlb	0	; select bank0
  4865  011A  00BE               	movwf	___flmul@temp+1
  4866  011B  0874               	movf	?__Umul8_16,w
  4867  011C  00BD               	movwf	___flmul@temp
  4868  011D  083D               	movf	___flmul@temp,w
  4869  011E  07B3               	addwf	___flmul@grs,f
  4870  011F  083E               	movf	___flmul@temp+1,w
  4871  0120  3DB4               	addwfc	___flmul@grs+1,f
  4872  0121  3000               	movlw	0
  4873  0122  3DB5               	addwfc	___flmul@grs+2,f
  4874  0123  3DB6               	addwfc	___flmul@grs+3,f
  4875  0124  0825               	movf	___flmul@b,w
  4876  0125  00AD               	movwf	??___flmul
  4877  0126  082D               	movf	??___flmul,w
  4878  0127  00F4               	movwf	__Umul8_16@multiplicand
  4879  0128  082A               	movf	___flmul@a+1,w
  4880  0129  3187  27DD  3180   	fcall	__Umul8_16
  4881  012C  0875               	movf	?__Umul8_16+1,w
  4882  012D  0020               	movlb	0	; select bank0
  4883  012E  00BE               	movwf	___flmul@temp+1
  4884  012F  0874               	movf	?__Umul8_16,w
  4885  0130  00BD               	movwf	___flmul@temp
  4886  0131  083D               	movf	___flmul@temp,w
  4887  0132  07B3               	addwf	___flmul@grs,f
  4888  0133  083E               	movf	___flmul@temp+1,w
  4889  0134  3DB4               	addwfc	___flmul@grs+1,f
  4890  0135  3000               	movlw	0
  4891  0136  3DB5               	addwfc	___flmul@grs+2,f
  4892  0137  3DB6               	addwfc	___flmul@grs+3,f
  4893  0138  3008               	movlw	8
  4894  0139                     u2135:	
  4895  0139  35B3               	lslf	___flmul@grs,f
  4896  013A  0DB4               	rlf	___flmul@grs+1,f
  4897  013B  0DB5               	rlf	___flmul@grs+2,f
  4898  013C  0DB6               	rlf	___flmul@grs+3,f
  4899  013D  0B89               	decfsz	9,f
  4900  013E  2939               	goto	u2135
  4901  013F  0825               	movf	___flmul@b,w
  4902  0140  00AD               	movwf	??___flmul
  4903  0141  082D               	movf	??___flmul,w
  4904  0142  00F4               	movwf	__Umul8_16@multiplicand
  4905  0143  0829               	movf	___flmul@a,w
  4906  0144  3187  27DD  3180   	fcall	__Umul8_16
  4907  0147  0875               	movf	?__Umul8_16+1,w
  4908  0148  0020               	movlb	0	; select bank0
  4909  0149  00BE               	movwf	___flmul@temp+1
  4910  014A  0874               	movf	?__Umul8_16,w
  4911  014B  00BD               	movwf	___flmul@temp
  4912  014C  083D               	movf	___flmul@temp,w
  4913  014D  07B3               	addwf	___flmul@grs,f
  4914  014E  083E               	movf	___flmul@temp+1,w
  4915  014F  3DB4               	addwfc	___flmul@grs+1,f
  4916  0150  3000               	movlw	0
  4917  0151  3DB5               	addwfc	___flmul@grs+2,f
  4918  0152  3DB6               	addwfc	___flmul@grs+3,f
  4919  0153  0826               	movf	___flmul@b+1,w
  4920  0154  00AD               	movwf	??___flmul
  4921  0155  082D               	movf	??___flmul,w
  4922  0156  00F4               	movwf	__Umul8_16@multiplicand
  4923  0157  082B               	movf	___flmul@a+2,w
  4924  0158  3187  27DD  3180   	fcall	__Umul8_16
  4925  015B  0875               	movf	?__Umul8_16+1,w
  4926  015C  0020               	movlb	0	; select bank0
  4927  015D  00BE               	movwf	___flmul@temp+1
  4928  015E  0874               	movf	?__Umul8_16,w
  4929  015F  00BD               	movwf	___flmul@temp
  4930  0160  083D               	movf	___flmul@temp,w
  4931  0161  07B9               	addwf	___flmul@prod,f
  4932  0162  083E               	movf	___flmul@temp+1,w
  4933  0163  3DBA               	addwfc	___flmul@prod+1,f
  4934  0164  3000               	movlw	0
  4935  0165  3DBB               	addwfc	___flmul@prod+2,f
  4936  0166  3DBC               	addwfc	___flmul@prod+3,f
  4937  0167  0827               	movf	___flmul@b+2,w
  4938  0168  00AD               	movwf	??___flmul
  4939  0169  082D               	movf	??___flmul,w
  4940  016A  00F4               	movwf	__Umul8_16@multiplicand
  4941  016B  082A               	movf	___flmul@a+1,w
  4942  016C  3187  27DD  3180   	fcall	__Umul8_16
  4943  016F  0875               	movf	?__Umul8_16+1,w
  4944  0170  0020               	movlb	0	; select bank0
  4945  0171  00BE               	movwf	___flmul@temp+1
  4946  0172  0874               	movf	?__Umul8_16,w
  4947  0173  00BD               	movwf	___flmul@temp
  4948  0174  083D               	movf	___flmul@temp,w
  4949  0175  07B9               	addwf	___flmul@prod,f
  4950  0176  083E               	movf	___flmul@temp+1,w
  4951  0177  3DBA               	addwfc	___flmul@prod+1,f
  4952  0178  3000               	movlw	0
  4953  0179  3DBB               	addwfc	___flmul@prod+2,f
  4954  017A  3DBC               	addwfc	___flmul@prod+3,f
  4955  017B  0827               	movf	___flmul@b+2,w
  4956  017C  00AD               	movwf	??___flmul
  4957  017D  082D               	movf	??___flmul,w
  4958  017E  00F4               	movwf	__Umul8_16@multiplicand
  4959  017F  082B               	movf	___flmul@a+2,w
  4960  0180  3187  27DD  3180   	fcall	__Umul8_16
  4961  0183  0875               	movf	?__Umul8_16+1,w
  4962  0184  0020               	movlb	0	; select bank0
  4963  0185  00BE               	movwf	___flmul@temp+1
  4964  0186  0874               	movf	?__Umul8_16,w
  4965  0187  00BD               	movwf	___flmul@temp
  4966  0188  083D               	movf	___flmul@temp,w
  4967  0189  00AD               	movwf	??___flmul
  4968  018A  083E               	movf	___flmul@temp+1,w
  4969  018B  00AE               	movwf	??___flmul+1
  4970  018C  01AF               	clrf	??___flmul+2
  4971  018D  01B0               	clrf	??___flmul+3
  4972  018E  3008               	movlw	8
  4973  018F                     u2145:	
  4974  018F  35AD               	lslf	??___flmul,f
  4975  0190  0DAE               	rlf	??___flmul+1,f
  4976  0191  0DAF               	rlf	??___flmul+2,f
  4977  0192  0DB0               	rlf	??___flmul+3,f
  4978  0193  0B89               	decfsz	9,f
  4979  0194  298F               	goto	u2145
  4980  0195  082D               	movf	??___flmul,w
  4981  0196  07B9               	addwf	___flmul@prod,f
  4982  0197  082E               	movf	??___flmul+1,w
  4983  0198  3DBA               	addwfc	___flmul@prod+1,f
  4984  0199  082F               	movf	??___flmul+2,w
  4985  019A  3DBB               	addwfc	___flmul@prod+2,f
  4986  019B  0830               	movf	??___flmul+3,w
  4987  019C  3DBC               	addwfc	___flmul@prod+3,f
  4988  019D  0833               	movf	___flmul@grs,w
  4989  019E  00AD               	movwf	??___flmul
  4990  019F  0834               	movf	___flmul@grs+1,w
  4991  01A0  00AE               	movwf	??___flmul+1
  4992  01A1  0835               	movf	___flmul@grs+2,w
  4993  01A2  00AF               	movwf	??___flmul+2
  4994  01A3  0836               	movf	___flmul@grs+3,w
  4995  01A4  00B0               	movwf	??___flmul+3
  4996  01A5  3018               	movlw	24
  4997  01A6                     u2155:	
  4998  01A6  36B0               	lsrf	??___flmul+3,f
  4999  01A7  0CAF               	rrf	??___flmul+2,f
  5000  01A8  0CAE               	rrf	??___flmul+1,f
  5001  01A9  0CAD               	rrf	??___flmul,f
  5002  01AA  0B89               	decfsz	9,f
  5003  01AB  29A6               	goto	u2155
  5004  01AC  082D               	movf	??___flmul,w
  5005  01AD  07B9               	addwf	___flmul@prod,f
  5006  01AE  082E               	movf	??___flmul+1,w
  5007  01AF  3DBA               	addwfc	___flmul@prod+1,f
  5008  01B0  082F               	movf	??___flmul+2,w
  5009  01B1  3DBB               	addwfc	___flmul@prod+2,f
  5010  01B2  0830               	movf	??___flmul+3,w
  5011  01B3  3DBC               	addwfc	___flmul@prod+3,f
  5012  01B4  3008               	movlw	8
  5013  01B5                     u2165:	
  5014  01B5  35B3               	lslf	___flmul@grs,f
  5015  01B6  0DB4               	rlf	___flmul@grs+1,f
  5016  01B7  0DB5               	rlf	___flmul@grs+2,f
  5017  01B8  0DB6               	rlf	___flmul@grs+3,f
  5018  01B9  0B89               	decfsz	9,f
  5019  01BA  29B5               	goto	u2165
  5020  01BB  0838               	movf	___flmul@bexp,w
  5021  01BC  0737               	addwf	___flmul@aexp,w
  5022  01BD  00AD               	movwf	??___flmul
  5023  01BE  01AE               	clrf	??___flmul+1
  5024  01BF  0DAE               	rlf	??___flmul+1,f
  5025  01C0  082D               	movf	??___flmul,w
  5026  01C1  3E82               	addlw	130
  5027  01C2  00BD               	movwf	___flmul@temp
  5028  01C3  30FF               	movlw	255
  5029  01C4  3D2E               	addwfc	??___flmul+1,w
  5030  01C5  00BE               	movwf	___flmul@temp+1
  5031  01C6                     l1875:	
  5032  01C6  1BBB               	btfsc	___flmul@prod+2,7
  5033  01C7  29DD               	goto	l1877
  5034  01C8  3001               	movlw	1
  5035  01C9                     u2175:	
  5036  01C9  35B9               	lslf	___flmul@prod,f
  5037  01CA  0DBA               	rlf	___flmul@prod+1,f
  5038  01CB  0DBB               	rlf	___flmul@prod+2,f
  5039  01CC  0DBC               	rlf	___flmul@prod+3,f
  5040  01CD  0B89               	decfsz	9,f
  5041  01CE  29C9               	goto	u2175
  5042  01CF  1BB6               	btfsc	___flmul@grs+3,7
  5043  01D0  1439               	bsf	___flmul@prod,0
  5044  01D1  3001               	movlw	1
  5045  01D2                     u2195:	
  5046  01D2  35B3               	lslf	___flmul@grs,f
  5047  01D3  0DB4               	rlf	___flmul@grs+1,f
  5048  01D4  0DB5               	rlf	___flmul@grs+2,f
  5049  01D5  0DB6               	rlf	___flmul@grs+3,f
  5050  01D6  0B89               	decfsz	9,f
  5051  01D7  29D2               	goto	u2195
  5052  01D8  30FF               	movlw	255
  5053  01D9  07BD               	addwf	___flmul@temp,f
  5054  01DA  30FF               	movlw	255
  5055  01DB  3DBE               	addwfc	___flmul@temp+1,f
  5056  01DC  29C6               	goto	l1875
  5057  01DD                     l1877:	
  5058  01DD  01B7               	clrf	___flmul@aexp
  5059  01DE  1FB6               	btfss	___flmul@grs+3,7
  5060  01DF  29F6               	goto	l1887
  5061  01E0  30FF               	movlw	255
  5062  01E1  0533               	andwf	___flmul@grs,w
  5063  01E2  00AD               	movwf	??___flmul
  5064  01E3  30FF               	movlw	255
  5065  01E4  0534               	andwf	___flmul@grs+1,w
  5066  01E5  00AE               	movwf	??___flmul+1
  5067  01E6  30FF               	movlw	255
  5068  01E7  0535               	andwf	___flmul@grs+2,w
  5069  01E8  00AF               	movwf	??___flmul+2
  5070  01E9  307F               	movlw	127
  5071  01EA  0536               	andwf	___flmul@grs+3,w
  5072  01EB  00B0               	movwf	??___flmul+3
  5073  01EC  0830               	movf	??___flmul+3,w
  5074  01ED  042F               	iorwf	??___flmul+2,w
  5075  01EE  042E               	iorwf	??___flmul+1,w
  5076  01EF  042D               	iorwf	??___flmul,w
  5077  01F0  1D03               	btfss	3,2
  5078  01F1  29F4               	goto	l1885
  5079  01F2  1C39               	btfss	___flmul@prod,0
  5080  01F3  29F6               	goto	l1887
  5081  01F4                     l1885:	
  5082  01F4  01B7               	clrf	___flmul@aexp
  5083  01F5  0AB7               	incf	___flmul@aexp,f
  5084  01F6                     l1887:	
  5085  01F6  0837               	movf	___flmul@aexp,w
  5086  01F7  1903               	btfsc	3,2
  5087  01F8  2A1F               	goto	l1897
  5088  01F9  3001               	movlw	1
  5089  01FA  07B9               	addwf	___flmul@prod,f
  5090  01FB  3000               	movlw	0
  5091  01FC  3DBA               	addwfc	___flmul@prod+1,f
  5092  01FD  3000               	movlw	0
  5093  01FE  3DBB               	addwfc	___flmul@prod+2,f
  5094  01FF  3000               	movlw	0
  5095  0200  3DBC               	addwfc	___flmul@prod+3,f
  5096  0201  1C3C               	btfss	___flmul@prod+3,0
  5097  0202  2A1F               	goto	l1897
  5098  0203  0839               	movf	___flmul@prod,w
  5099  0204  00AD               	movwf	??___flmul
  5100  0205  083A               	movf	___flmul@prod+1,w
  5101  0206  00AE               	movwf	??___flmul+1
  5102  0207  083B               	movf	___flmul@prod+2,w
  5103  0208  00AF               	movwf	??___flmul+2
  5104  0209  083C               	movf	___flmul@prod+3,w
  5105  020A  00B0               	movwf	??___flmul+3
  5106  020B  3001               	movlw	1
  5107  020C  00B1               	movwf	??___flmul+4
  5108  020D                     u2265:	
  5109  020D  37B0               	asrf	??___flmul+3,f
  5110  020E  0CAF               	rrf	??___flmul+2,f
  5111  020F  0CAE               	rrf	??___flmul+1,f
  5112  0210  0CAD               	rrf	??___flmul,f
  5113  0211  0BB1               	decfsz	??___flmul+4,f
  5114  0212  2A0D               	goto	u2265
  5115  0213  0830               	movf	??___flmul+3,w
  5116  0214  00BC               	movwf	___flmul@prod+3
  5117  0215  082F               	movf	??___flmul+2,w
  5118  0216  00BB               	movwf	___flmul@prod+2
  5119  0217  082E               	movf	??___flmul+1,w
  5120  0218  00BA               	movwf	___flmul@prod+1
  5121  0219  082D               	movf	??___flmul,w
  5122  021A  00B9               	movwf	___flmul@prod
  5123  021B  3001               	movlw	1
  5124  021C  07BD               	addwf	___flmul@temp,f
  5125  021D  3000               	movlw	0
  5126  021E  3DBE               	addwfc	___flmul@temp+1,f
  5127  021F                     l1897:	
  5128  021F  083E               	movf	___flmul@temp+1,w
  5129  0220  3A80               	xorlw	128
  5130  0221  00AD               	movwf	??___flmul
  5131  0222  3080               	movlw	128
  5132  0223  022D               	subwf	??___flmul,w
  5133  0224  1D03               	skipz
  5134  0225  2A28               	goto	u2275
  5135  0226  30FF               	movlw	255
  5136  0227  023D               	subwf	___flmul@temp,w
  5137  0228                     u2275:	
  5138  0228  1C03               	skipc
  5139  0229  2A34               	goto	l1901
  5140  022A  307F               	movlw	127
  5141  022B  0020               	movlb	0	; select bank0
  5142  022C  00BC               	movwf	___flmul@prod+3
  5143  022D  3080               	movlw	128
  5144  022E  00BB               	movwf	___flmul@prod+2
  5145  022F  3000               	movlw	0
  5146  0230  00BA               	movwf	___flmul@prod+1
  5147  0231  3000               	movlw	0
  5148  0232  00B9               	movwf	___flmul@prod
  5149  0233  2A5E               	goto	l711
  5150  0234                     l1901:	
  5151  0234  0020               	movlb	0	; select bank0
  5152  0235  083E               	movf	___flmul@temp+1,w
  5153  0236  3A80               	xorlw	128
  5154  0237  00AD               	movwf	??___flmul
  5155  0238  3080               	movlw	128
  5156  0239  022D               	subwf	??___flmul,w
  5157  023A  1D03               	skipz
  5158  023B  2A3E               	goto	u2285
  5159  023C  3001               	movlw	1
  5160  023D  023D               	subwf	___flmul@temp,w
  5161  023E                     u2285:	
  5162  023E  1803               	skipnc
  5163  023F  2A4B               	goto	l1907
  5164  0240  3000               	movlw	0
  5165  0241  0020               	movlb	0	; select bank0
  5166  0242  00BC               	movwf	___flmul@prod+3
  5167  0243  3000               	movlw	0
  5168  0244  00BB               	movwf	___flmul@prod+2
  5169  0245  3000               	movlw	0
  5170  0246  00BA               	movwf	___flmul@prod+1
  5171  0247  3000               	movlw	0
  5172  0248  00B9               	movwf	___flmul@prod
  5173  0249  01B2               	clrf	___flmul@sign
  5174  024A  2A5E               	goto	l711
  5175  024B                     l1907:	
  5176  024B  0020               	movlb	0	; select bank0
  5177  024C  083D               	movf	___flmul@temp,w
  5178  024D  00AD               	movwf	??___flmul
  5179  024E  082D               	movf	??___flmul,w
  5180  024F  00B8               	movwf	___flmul@bexp
  5181  0250  30FF               	movlw	255
  5182  0251  05B9               	andwf	___flmul@prod,f
  5183  0252  30FF               	movlw	255
  5184  0253  05BA               	andwf	___flmul@prod+1,f
  5185  0254  307F               	movlw	127
  5186  0255  05BB               	andwf	___flmul@prod+2,f
  5187  0256  3000               	movlw	0
  5188  0257  05BC               	andwf	___flmul@prod+3,f
  5189  0258  1838               	btfsc	___flmul@bexp,0
  5190  0259  17BB               	bsf	___flmul@prod+2,7
  5191  025A  3638               	lsrf	___flmul@bexp,w
  5192  025B  00AD               	movwf	??___flmul
  5193  025C  082D               	movf	??___flmul,w
  5194  025D  00BC               	movwf	___flmul@prod+3
  5195  025E                     l711:	
  5196  025E  0832               	movf	___flmul@sign,w
  5197  025F  00AD               	movwf	??___flmul
  5198  0260  082D               	movf	??___flmul,w
  5199  0261  04BC               	iorwf	___flmul@prod+3,f
  5200  0262  083C               	movf	___flmul@prod+3,w
  5201  0263  00A8               	movwf	?___flmul+3
  5202  0264  083B               	movf	___flmul@prod+2,w
  5203  0265  00A7               	movwf	?___flmul+2
  5204  0266  083A               	movf	___flmul@prod+1,w
  5205  0267  00A6               	movwf	?___flmul+1
  5206  0268  0839               	movf	___flmul@prod,w
  5207  0269  00A5               	movwf	?___flmul
  5208  026A  0008               	return
  5209  026B                     __end_of___flmul:	
  5210                           
  5211                           	psect	text13
  5212  07DD                     __ptext13:	
  5213 ;; *************** function __Umul8_16 *****************
  5214 ;; Defined at:
  5215 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  multiplier      1    wreg     unsigned char 
  5218 ;;  multiplicand    1    4[COMMON] unsigned char 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5221 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5222 ;;  product         2    0[BANK0 ] unsigned int 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  2    4[COMMON] unsigned int 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;Total ram usage:        9 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    2
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		___flmul
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           
  5247                           ;psect for function __Umul8_16
  5248  07DD                     __Umul8_16:	
  5249                           
  5250                           ;incstack = 0
  5251                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5252                           ;__Umul8_16@multiplier stored from wreg
  5253  07DD  0020               	movlb	0	; select bank0
  5254  07DE  00A4               	movwf	__Umul8_16@multiplier
  5255  07DF  01A0               	clrf	__Umul8_16@product
  5256  07E0  01A1               	clrf	__Umul8_16@product+1
  5257  07E1  0874               	movf	__Umul8_16@multiplicand,w
  5258  07E2  00F6               	movwf	??__Umul8_16
  5259  07E3  01F7               	clrf	??__Umul8_16+1
  5260  07E4  0876               	movf	??__Umul8_16,w
  5261  07E5  00A2               	movwf	__Umul8_16@word_mpld
  5262  07E6  0877               	movf	??__Umul8_16+1,w
  5263  07E7  00A3               	movwf	__Umul8_16@word_mpld+1
  5264  07E8                     l1505:	
  5265  07E8  1C24               	btfss	__Umul8_16@multiplier,0
  5266  07E9  2FEE               	goto	l737
  5267  07EA  0822               	movf	__Umul8_16@word_mpld,w
  5268  07EB  07A0               	addwf	__Umul8_16@product,f
  5269  07EC  0823               	movf	__Umul8_16@word_mpld+1,w
  5270  07ED  3DA1               	addwfc	__Umul8_16@product+1,f
  5271  07EE                     l737:	
  5272  07EE  3001               	movlw	1
  5273  07EF                     u1465:	
  5274  07EF  35A2               	lslf	__Umul8_16@word_mpld,f
  5275  07F0  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5276  07F1  0B89               	decfsz	9,f
  5277  07F2  2FEF               	goto	u1465
  5278  07F3  1003               	clrc
  5279  07F4  0CA4               	rrf	__Umul8_16@multiplier,f
  5280  07F5  0824               	movf	__Umul8_16@multiplier,w
  5281  07F6  1D03               	btfss	3,2
  5282  07F7  2FE8               	goto	l1505
  5283  07F8  0821               	movf	__Umul8_16@product+1,w
  5284  07F9  00F5               	movwf	?__Umul8_16+1
  5285  07FA  0820               	movf	__Umul8_16@product,w
  5286  07FB  00F4               	movwf	?__Umul8_16
  5287  07FC  0008               	return
  5288  07FD                     __end_of__Umul8_16:	
  5289                           
  5290                           	psect	text14
  5291  026B                     __ptext14:	
  5292 ;; *************** function ___fldiv *****************
  5293 ;; Defined at:
  5294 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  a               4   10[BANK0 ] unsigned int 
  5297 ;;  b               4   14[BANK0 ] unsigned int 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  grs             4   30[BANK0 ] unsigned long 
  5300 ;;  rem             4   23[BANK0 ] unsigned long 
  5301 ;;  new_exp         2   28[BANK0 ] int 
  5302 ;;  aexp            1   35[BANK0 ] unsigned char 
  5303 ;;  bexp            1   34[BANK0 ] unsigned char 
  5304 ;;  sign            1   27[BANK0 ] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  4   10[BANK0 ] unsigned char 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5314 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5317 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;Total ram usage:       26 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    2
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		__calculate_speed
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           
  5329                           ;psect for function ___fldiv
  5330  026B                     ___fldiv:	
  5331                           
  5332                           ;incstack = 0
  5333                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5334  026B  0020               	movlb	0	; select bank0
  5335  026C  0831               	movf	___fldiv@b+3,w
  5336  026D  3980               	andlw	128
  5337  026E  00B2               	movwf	??___fldiv
  5338  026F  0832               	movf	??___fldiv,w
  5339  0270  00BB               	movwf	___fldiv@sign
  5340  0271  3531               	lslf	___fldiv@b+3,w
  5341  0272  00B2               	movwf	??___fldiv
  5342  0273  0832               	movf	??___fldiv,w
  5343  0274  00C2               	movwf	___fldiv@bexp
  5344  0275  1BB0               	btfsc	___fldiv@b+2,7
  5345  0276  1442               	bsf	___fldiv@bexp,0
  5346  0277  0842               	movf	___fldiv@bexp,w
  5347  0278  1903               	btfsc	3,2
  5348  0279  2A88               	goto	l1657
  5349  027A  0A42               	incf	___fldiv@bexp,w
  5350  027B  1D03               	btfss	3,2
  5351  027C  2A85               	goto	l1653
  5352  027D  3000               	movlw	0
  5353  027E  00B1               	movwf	___fldiv@b+3
  5354  027F  3000               	movlw	0
  5355  0280  00B0               	movwf	___fldiv@b+2
  5356  0281  3000               	movlw	0
  5357  0282  00AF               	movwf	___fldiv@b+1
  5358  0283  3000               	movlw	0
  5359  0284  00AE               	movwf	___fldiv@b
  5360  0285                     l1653:	
  5361  0285  17B0               	bsf	___fldiv@b+2,7
  5362  0286  01B1               	clrf	___fldiv@b+3
  5363  0287  2A90               	goto	l1659
  5364  0288                     l1657:	
  5365  0288  3000               	movlw	0
  5366  0289  00B1               	movwf	___fldiv@b+3
  5367  028A  3000               	movlw	0
  5368  028B  00B0               	movwf	___fldiv@b+2
  5369  028C  3000               	movlw	0
  5370  028D  00AF               	movwf	___fldiv@b+1
  5371  028E  3000               	movlw	0
  5372  028F  00AE               	movwf	___fldiv@b
  5373  0290                     l1659:	
  5374  0290  082D               	movf	___fldiv@a+3,w
  5375  0291  3980               	andlw	128
  5376  0292  00B2               	movwf	??___fldiv
  5377  0293  0832               	movf	??___fldiv,w
  5378  0294  06BB               	xorwf	___fldiv@sign,f
  5379  0295  352D               	lslf	___fldiv@a+3,w
  5380  0296  00B2               	movwf	??___fldiv
  5381  0297  0832               	movf	??___fldiv,w
  5382  0298  00C3               	movwf	___fldiv@aexp
  5383  0299  1BAC               	btfsc	___fldiv@a+2,7
  5384  029A  1443               	bsf	___fldiv@aexp,0
  5385  029B  0843               	movf	___fldiv@aexp,w
  5386  029C  1903               	btfsc	3,2
  5387  029D  2AAC               	goto	l1677
  5388  029E  0A43               	incf	___fldiv@aexp,w
  5389  029F  1D03               	btfss	3,2
  5390  02A0  2AA9               	goto	l1673
  5391  02A1  3000               	movlw	0
  5392  02A2  00AD               	movwf	___fldiv@a+3
  5393  02A3  3000               	movlw	0
  5394  02A4  00AC               	movwf	___fldiv@a+2
  5395  02A5  3000               	movlw	0
  5396  02A6  00AB               	movwf	___fldiv@a+1
  5397  02A7  3000               	movlw	0
  5398  02A8  00AA               	movwf	___fldiv@a
  5399  02A9                     l1673:	
  5400  02A9  17AC               	bsf	___fldiv@a+2,7
  5401  02AA  01AD               	clrf	___fldiv@a+3
  5402  02AB  2AB4               	goto	l659
  5403  02AC                     l1677:	
  5404  02AC  3000               	movlw	0
  5405  02AD  00AD               	movwf	___fldiv@a+3
  5406  02AE  3000               	movlw	0
  5407  02AF  00AC               	movwf	___fldiv@a+2
  5408  02B0  3000               	movlw	0
  5409  02B1  00AB               	movwf	___fldiv@a+1
  5410  02B2  3000               	movlw	0
  5411  02B3  00AA               	movwf	___fldiv@a
  5412  02B4                     l659:	
  5413  02B4  082D               	movf	___fldiv@a+3,w
  5414  02B5  042C               	iorwf	___fldiv@a+2,w
  5415  02B6  042B               	iorwf	___fldiv@a+1,w
  5416  02B7  042A               	iorwf	___fldiv@a,w
  5417  02B8  1D03               	skipz
  5418  02B9  2AD3               	goto	l1687
  5419  02BA  3000               	movlw	0
  5420  02BB  00B1               	movwf	___fldiv@b+3
  5421  02BC  3000               	movlw	0
  5422  02BD  00B0               	movwf	___fldiv@b+2
  5423  02BE  3000               	movlw	0
  5424  02BF  00AF               	movwf	___fldiv@b+1
  5425  02C0  3000               	movlw	0
  5426  02C1  00AE               	movwf	___fldiv@b
  5427  02C2  3080               	movlw	128
  5428  02C3  04B0               	iorwf	___fldiv@b+2,f
  5429  02C4  307F               	movlw	127
  5430  02C5  04B1               	iorwf	___fldiv@b+3,f
  5431  02C6  083B               	movf	___fldiv@sign,w
  5432  02C7  00B2               	movwf	??___fldiv
  5433  02C8  0832               	movf	??___fldiv,w
  5434  02C9  04B1               	iorwf	___fldiv@b+3,f
  5435  02CA  0831               	movf	___fldiv@b+3,w
  5436  02CB  00AD               	movwf	?___fldiv+3
  5437  02CC  0830               	movf	___fldiv@b+2,w
  5438  02CD  00AC               	movwf	?___fldiv+2
  5439  02CE  082F               	movf	___fldiv@b+1,w
  5440  02CF  00AB               	movwf	?___fldiv+1
  5441  02D0  082E               	movf	___fldiv@b,w
  5442  02D1  00AA               	movwf	?___fldiv
  5443  02D2  0008               	return
  5444  02D3                     l1687:	
  5445  02D3  0842               	movf	___fldiv@bexp,w
  5446  02D4  1D03               	btfss	3,2
  5447  02D5  2AE7               	goto	l1693
  5448  02D6  3000               	movlw	0
  5449  02D7  00B1               	movwf	___fldiv@b+3
  5450  02D8  3000               	movlw	0
  5451  02D9  00B0               	movwf	___fldiv@b+2
  5452  02DA  3000               	movlw	0
  5453  02DB  00AF               	movwf	___fldiv@b+1
  5454  02DC  3000               	movlw	0
  5455  02DD  00AE               	movwf	___fldiv@b
  5456  02DE  0831               	movf	___fldiv@b+3,w
  5457  02DF  00AD               	movwf	?___fldiv+3
  5458  02E0  0830               	movf	___fldiv@b+2,w
  5459  02E1  00AC               	movwf	?___fldiv+2
  5460  02E2  082F               	movf	___fldiv@b+1,w
  5461  02E3  00AB               	movwf	?___fldiv+1
  5462  02E4  082E               	movf	___fldiv@b,w
  5463  02E5  00AA               	movwf	?___fldiv
  5464  02E6  0008               	return
  5465  02E7                     l1693:	
  5466  02E7  0843               	movf	___fldiv@aexp,w
  5467  02E8  00B2               	movwf	??___fldiv
  5468  02E9  01B3               	clrf	??___fldiv+1
  5469  02EA  09B2               	comf	??___fldiv,f
  5470  02EB  09B3               	comf	??___fldiv+1,f
  5471  02EC  0AB2               	incf	??___fldiv,f
  5472  02ED  1903               	skipnz
  5473  02EE  0AB3               	incf	??___fldiv+1,f
  5474  02EF  0842               	movf	___fldiv@bexp,w
  5475  02F0  0732               	addwf	??___fldiv,w
  5476  02F1  00B4               	movwf	??___fldiv+2
  5477  02F2  0833               	movf	??___fldiv+1,w
  5478  02F3  1803               	skipnc
  5479  02F4  0A33               	incf	??___fldiv+1,w
  5480  02F5  00B5               	movwf	??___fldiv+3
  5481  02F6  0834               	movf	??___fldiv+2,w
  5482  02F7  3E7F               	addlw	127
  5483  02F8  00BC               	movwf	___fldiv@new_exp
  5484  02F9  3000               	movlw	0
  5485  02FA  3D35               	addwfc	??___fldiv+3,w
  5486  02FB  00BD               	movwf	___fldiv@new_exp+1
  5487  02FC  0831               	movf	___fldiv@b+3,w
  5488  02FD  00BA               	movwf	___fldiv@rem+3
  5489  02FE  0830               	movf	___fldiv@b+2,w
  5490  02FF  00B9               	movwf	___fldiv@rem+2
  5491  0300  082F               	movf	___fldiv@b+1,w
  5492  0301  00B8               	movwf	___fldiv@rem+1
  5493  0302  082E               	movf	___fldiv@b,w
  5494  0303  00B7               	movwf	___fldiv@rem
  5495  0304  3000               	movlw	0
  5496  0305  00B1               	movwf	___fldiv@b+3
  5497  0306  3000               	movlw	0
  5498  0307  00B0               	movwf	___fldiv@b+2
  5499  0308  3000               	movlw	0
  5500  0309  00AF               	movwf	___fldiv@b+1
  5501  030A  3000               	movlw	0
  5502  030B  00AE               	movwf	___fldiv@b
  5503  030C  3000               	movlw	0
  5504  030D  00C1               	movwf	___fldiv@grs+3
  5505  030E  3000               	movlw	0
  5506  030F  00C0               	movwf	___fldiv@grs+2
  5507  0310  3000               	movlw	0
  5508  0311  00BF               	movwf	___fldiv@grs+1
  5509  0312  3000               	movlw	0
  5510  0313  00BE               	movwf	___fldiv@grs
  5511  0314  01C3               	clrf	___fldiv@aexp
  5512  0315                     l1721:	
  5513  0315  301A               	movlw	26
  5514  0316  0243               	subwf	___fldiv@aexp,w
  5515  0317  1803               	btfsc	3,0
  5516  0318  2B51               	goto	l1723
  5517  0319  0843               	movf	___fldiv@aexp,w
  5518  031A  1903               	btfsc	3,2
  5519  031B  2B33               	goto	l1713
  5520  031C  3001               	movlw	1
  5521  031D                     u1845:	
  5522  031D  35B7               	lslf	___fldiv@rem,f
  5523  031E  0DB8               	rlf	___fldiv@rem+1,f
  5524  031F  0DB9               	rlf	___fldiv@rem+2,f
  5525  0320  0DBA               	rlf	___fldiv@rem+3,f
  5526  0321  0B89               	decfsz	9,f
  5527  0322  2B1D               	goto	u1845
  5528  0323  3001               	movlw	1
  5529  0324                     u1855:	
  5530  0324  35AE               	lslf	___fldiv@b,f
  5531  0325  0DAF               	rlf	___fldiv@b+1,f
  5532  0326  0DB0               	rlf	___fldiv@b+2,f
  5533  0327  0DB1               	rlf	___fldiv@b+3,f
  5534  0328  0B89               	decfsz	9,f
  5535  0329  2B24               	goto	u1855
  5536  032A  1BC1               	btfsc	___fldiv@grs+3,7
  5537  032B  142E               	bsf	___fldiv@b,0
  5538  032C  3001               	movlw	1
  5539  032D                     u1875:	
  5540  032D  35BE               	lslf	___fldiv@grs,f
  5541  032E  0DBF               	rlf	___fldiv@grs+1,f
  5542  032F  0DC0               	rlf	___fldiv@grs+2,f
  5543  0330  0DC1               	rlf	___fldiv@grs+3,f
  5544  0331  0B89               	decfsz	9,f
  5545  0332  2B2D               	goto	u1875
  5546  0333                     l1713:	
  5547  0333  082D               	movf	___fldiv@a+3,w
  5548  0334  023A               	subwf	___fldiv@rem+3,w
  5549  0335  1D03               	skipz
  5550  0336  2B41               	goto	u1885
  5551  0337  082C               	movf	___fldiv@a+2,w
  5552  0338  0239               	subwf	___fldiv@rem+2,w
  5553  0339  1D03               	skipz
  5554  033A  2B41               	goto	u1885
  5555  033B  082B               	movf	___fldiv@a+1,w
  5556  033C  0238               	subwf	___fldiv@rem+1,w
  5557  033D  1D03               	skipz
  5558  033E  2B41               	goto	u1885
  5559  033F  082A               	movf	___fldiv@a,w
  5560  0340  0237               	subwf	___fldiv@rem,w
  5561  0341                     u1885:	
  5562  0341  1C03               	skipc
  5563  0342  2B4C               	goto	l1719
  5564  0343  1741               	bsf	___fldiv@grs+3,6
  5565  0344  082A               	movf	___fldiv@a,w
  5566  0345  02B7               	subwf	___fldiv@rem,f
  5567  0346  082B               	movf	___fldiv@a+1,w
  5568  0347  3BB8               	subwfb	___fldiv@rem+1,f
  5569  0348  082C               	movf	___fldiv@a+2,w
  5570  0349  3BB9               	subwfb	___fldiv@rem+2,f
  5571  034A  082D               	movf	___fldiv@a+3,w
  5572  034B  3BBA               	subwfb	___fldiv@rem+3,f
  5573  034C                     l1719:	
  5574  034C  3001               	movlw	1
  5575  034D  00B2               	movwf	??___fldiv
  5576  034E  0832               	movf	??___fldiv,w
  5577  034F  07C3               	addwf	___fldiv@aexp,f
  5578  0350  2B15               	goto	l1721
  5579  0351                     l1723:	
  5580  0351  083A               	movf	___fldiv@rem+3,w
  5581  0352  0439               	iorwf	___fldiv@rem+2,w
  5582  0353  0438               	iorwf	___fldiv@rem+1,w
  5583  0354  0437               	iorwf	___fldiv@rem,w
  5584  0355  1D03               	btfss	3,2
  5585  0356  143E               	bsf	___fldiv@grs,0
  5586  0357                     l1737:	
  5587  0357  1BB0               	btfsc	___fldiv@b+2,7
  5588  0358  2B6E               	goto	l1739
  5589  0359  3001               	movlw	1
  5590  035A                     u1915:	
  5591  035A  35AE               	lslf	___fldiv@b,f
  5592  035B  0DAF               	rlf	___fldiv@b+1,f
  5593  035C  0DB0               	rlf	___fldiv@b+2,f
  5594  035D  0DB1               	rlf	___fldiv@b+3,f
  5595  035E  0B89               	decfsz	9,f
  5596  035F  2B5A               	goto	u1915
  5597  0360  1BC1               	btfsc	___fldiv@grs+3,7
  5598  0361  142E               	bsf	___fldiv@b,0
  5599  0362  3001               	movlw	1
  5600  0363                     u1935:	
  5601  0363  35BE               	lslf	___fldiv@grs,f
  5602  0364  0DBF               	rlf	___fldiv@grs+1,f
  5603  0365  0DC0               	rlf	___fldiv@grs+2,f
  5604  0366  0DC1               	rlf	___fldiv@grs+3,f
  5605  0367  0B89               	decfsz	9,f
  5606  0368  2B63               	goto	u1935
  5607  0369  30FF               	movlw	255
  5608  036A  07BC               	addwf	___fldiv@new_exp,f
  5609  036B  30FF               	movlw	255
  5610  036C  3DBD               	addwfc	___fldiv@new_exp+1,f
  5611  036D  2B57               	goto	l1737
  5612  036E                     l1739:	
  5613  036E  01C3               	clrf	___fldiv@aexp
  5614  036F  1FC1               	btfss	___fldiv@grs+3,7
  5615  0370  2B87               	goto	l1749
  5616  0371  30FF               	movlw	255
  5617  0372  053E               	andwf	___fldiv@grs,w
  5618  0373  00B2               	movwf	??___fldiv
  5619  0374  30FF               	movlw	255
  5620  0375  053F               	andwf	___fldiv@grs+1,w
  5621  0376  00B3               	movwf	??___fldiv+1
  5622  0377  30FF               	movlw	255
  5623  0378  0540               	andwf	___fldiv@grs+2,w
  5624  0379  00B4               	movwf	??___fldiv+2
  5625  037A  307F               	movlw	127
  5626  037B  0541               	andwf	___fldiv@grs+3,w
  5627  037C  00B5               	movwf	??___fldiv+3
  5628  037D  0835               	movf	??___fldiv+3,w
  5629  037E  0434               	iorwf	??___fldiv+2,w
  5630  037F  0433               	iorwf	??___fldiv+1,w
  5631  0380  0432               	iorwf	??___fldiv,w
  5632  0381  1D03               	btfss	3,2
  5633  0382  2B85               	goto	l1747
  5634  0383  1C2E               	btfss	___fldiv@b,0
  5635  0384  2B87               	goto	l1749
  5636  0385                     l1747:	
  5637  0385  01C3               	clrf	___fldiv@aexp
  5638  0386  0AC3               	incf	___fldiv@aexp,f
  5639  0387                     l1749:	
  5640  0387  0843               	movf	___fldiv@aexp,w
  5641  0388  1903               	btfsc	3,2
  5642  0389  2BB0               	goto	l1759
  5643  038A  3001               	movlw	1
  5644  038B  07AE               	addwf	___fldiv@b,f
  5645  038C  3000               	movlw	0
  5646  038D  3DAF               	addwfc	___fldiv@b+1,f
  5647  038E  3000               	movlw	0
  5648  038F  3DB0               	addwfc	___fldiv@b+2,f
  5649  0390  3000               	movlw	0
  5650  0391  3DB1               	addwfc	___fldiv@b+3,f
  5651  0392  1C31               	btfss	___fldiv@b+3,0
  5652  0393  2BB0               	goto	l1759
  5653  0394  082E               	movf	___fldiv@b,w
  5654  0395  00B2               	movwf	??___fldiv
  5655  0396  082F               	movf	___fldiv@b+1,w
  5656  0397  00B3               	movwf	??___fldiv+1
  5657  0398  0830               	movf	___fldiv@b+2,w
  5658  0399  00B4               	movwf	??___fldiv+2
  5659  039A  0831               	movf	___fldiv@b+3,w
  5660  039B  00B5               	movwf	??___fldiv+3
  5661  039C  3001               	movlw	1
  5662  039D  00B6               	movwf	??___fldiv+4
  5663  039E                     u2005:	
  5664  039E  37B5               	asrf	??___fldiv+3,f
  5665  039F  0CB4               	rrf	??___fldiv+2,f
  5666  03A0  0CB3               	rrf	??___fldiv+1,f
  5667  03A1  0CB2               	rrf	??___fldiv,f
  5668  03A2  0BB6               	decfsz	??___fldiv+4,f
  5669  03A3  2B9E               	goto	u2005
  5670  03A4  0835               	movf	??___fldiv+3,w
  5671  03A5  00B1               	movwf	___fldiv@b+3
  5672  03A6  0834               	movf	??___fldiv+2,w
  5673  03A7  00B0               	movwf	___fldiv@b+2
  5674  03A8  0833               	movf	??___fldiv+1,w
  5675  03A9  00AF               	movwf	___fldiv@b+1
  5676  03AA  0832               	movf	??___fldiv,w
  5677  03AB  00AE               	movwf	___fldiv@b
  5678  03AC  3001               	movlw	1
  5679  03AD  07BC               	addwf	___fldiv@new_exp,f
  5680  03AE  3000               	movlw	0
  5681  03AF  3DBD               	addwfc	___fldiv@new_exp+1,f
  5682  03B0                     l1759:	
  5683  03B0  083D               	movf	___fldiv@new_exp+1,w
  5684  03B1  3A80               	xorlw	128
  5685  03B2  00B2               	movwf	??___fldiv
  5686  03B3  3080               	movlw	128
  5687  03B4  0232               	subwf	??___fldiv,w
  5688  03B5  1D03               	skipz
  5689  03B6  2BB9               	goto	u2015
  5690  03B7  30FF               	movlw	255
  5691  03B8  023C               	subwf	___fldiv@new_exp,w
  5692  03B9                     u2015:	
  5693  03B9  1C03               	skipc
  5694  03BA  2BC8               	goto	l680
  5695  03BB  30FF               	movlw	255
  5696  03BC  0020               	movlb	0	; select bank0
  5697  03BD  00BC               	movwf	___fldiv@new_exp
  5698  03BE  3000               	movlw	0
  5699  03BF  00BD               	movwf	___fldiv@new_exp+1
  5700  03C0  3000               	movlw	0
  5701  03C1  00B1               	movwf	___fldiv@b+3
  5702  03C2  3000               	movlw	0
  5703  03C3  00B0               	movwf	___fldiv@b+2
  5704  03C4  3000               	movlw	0
  5705  03C5  00AF               	movwf	___fldiv@b+1
  5706  03C6  3000               	movlw	0
  5707  03C7  00AE               	movwf	___fldiv@b
  5708  03C8                     l680:	
  5709  03C8  0020               	movlb	0	; select bank0
  5710  03C9  083D               	movf	___fldiv@new_exp+1,w
  5711  03CA  3A80               	xorlw	128
  5712  03CB  00B2               	movwf	??___fldiv
  5713  03CC  3080               	movlw	128
  5714  03CD  0232               	subwf	??___fldiv,w
  5715  03CE  1D03               	skipz
  5716  03CF  2BD2               	goto	u2025
  5717  03D0  3001               	movlw	1
  5718  03D1  023C               	subwf	___fldiv@new_exp,w
  5719  03D2                     u2025:	
  5720  03D2  1803               	skipnc
  5721  03D3  2BE0               	goto	l681
  5722  03D4  0020               	movlb	0	; select bank0
  5723  03D5  01BC               	clrf	___fldiv@new_exp
  5724  03D6  01BD               	clrf	___fldiv@new_exp+1
  5725  03D7  3000               	movlw	0
  5726  03D8  00B1               	movwf	___fldiv@b+3
  5727  03D9  3000               	movlw	0
  5728  03DA  00B0               	movwf	___fldiv@b+2
  5729  03DB  3000               	movlw	0
  5730  03DC  00AF               	movwf	___fldiv@b+1
  5731  03DD  3000               	movlw	0
  5732  03DE  00AE               	movwf	___fldiv@b
  5733  03DF  01BB               	clrf	___fldiv@sign
  5734  03E0                     l681:	
  5735  03E0  0020               	movlb	0	; select bank0
  5736  03E1  083C               	movf	___fldiv@new_exp,w
  5737  03E2  00B2               	movwf	??___fldiv
  5738  03E3  0832               	movf	??___fldiv,w
  5739  03E4  00C2               	movwf	___fldiv@bexp
  5740  03E5  1C42               	btfss	___fldiv@bexp,0
  5741  03E6  2BE9               	goto	l1773
  5742  03E7  17B0               	bsf	___fldiv@b+2,7
  5743  03E8  2BED               	goto	l683
  5744  03E9                     l1773:	
  5745  03E9  307F               	movlw	127
  5746  03EA  00B2               	movwf	??___fldiv
  5747  03EB  0832               	movf	??___fldiv,w
  5748  03EC  05B0               	andwf	___fldiv@b+2,f
  5749  03ED                     l683:	
  5750  03ED  3642               	lsrf	___fldiv@bexp,w
  5751  03EE  00B2               	movwf	??___fldiv
  5752  03EF  0832               	movf	??___fldiv,w
  5753  03F0  00B1               	movwf	___fldiv@b+3
  5754  03F1  083B               	movf	___fldiv@sign,w
  5755  03F2  00B2               	movwf	??___fldiv
  5756  03F3  0832               	movf	??___fldiv,w
  5757  03F4  04B1               	iorwf	___fldiv@b+3,f
  5758  03F5  0831               	movf	___fldiv@b+3,w
  5759  03F6  00AD               	movwf	?___fldiv+3
  5760  03F7  0830               	movf	___fldiv@b+2,w
  5761  03F8  00AC               	movwf	?___fldiv+2
  5762  03F9  082F               	movf	___fldiv@b+1,w
  5763  03FA  00AB               	movwf	?___fldiv+1
  5764  03FB  082E               	movf	___fldiv@b,w
  5765  03FC  00AA               	movwf	?___fldiv
  5766  03FD  0008               	return
  5767  03FE                     __end_of___fldiv:	
  5768                           
  5769                           	psect	intentry
  5770  0004                     __pintentry:	
  5771 ;; *************** function __isr *****************
  5772 ;; Defined at:
  5773 ;;		line 55 in file "main.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;		None
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;		None
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;Total ram usage:        0 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:    1
  5794 ;; This function calls:
  5795 ;;		_capture_A_isr
  5796 ;;		_capture_B_isr
  5797 ;;		_display_isr
  5798 ;;		_timer_1_isr
  5799 ;; This function is called by:
  5800 ;;		Interrupt level 1
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804  0004                     __isr:	
  5805                           
  5806                           ;incstack = 0
  5807  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5808                           
  5809                           ; Regs used in __isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5810  0005  3180               	pagesel	$
  5811                           
  5812                           ;main.c: 58:     if(PIR4bits.TMR1IF)
  5813  0006  002E               	movlb	14	; select bank14
  5814  0007  1C10               	btfss	16,0	;volatile
  5815  0008  280C               	goto	i1l2135
  5816                           
  5817                           ;main.c: 59:     {;main.c: 60:         timer_1_isr();
  5818  0009  3186  26DA  3180   	fcall	_timer_1_isr
  5819  000C                     i1l2135:	
  5820                           ;main.c: 61:     }
  5821                           
  5822                           
  5823                           ;main.c: 64:     if(PIR6bits.CCP1IF)
  5824  000C  002E               	movlb	14	; select bank14
  5825  000D  1C12               	btfss	18,0	;volatile
  5826  000E  2812               	goto	i1l2139
  5827                           
  5828                           ;main.c: 65:     {;main.c: 66:         capture_A_isr();
  5829  000F  318F  27B6  3180   	fcall	_capture_A_isr
  5830  0012                     i1l2139:	
  5831                           ;main.c: 67:     }
  5832                           
  5833                           
  5834                           ;main.c: 70:     if(PIR6bits.CCP2IF)
  5835  0012  002E               	movlb	14	; select bank14
  5836  0013  1C92               	btfss	18,1	;volatile
  5837  0014  2818               	goto	i1l2143
  5838                           
  5839                           ;main.c: 71:     {;main.c: 72:         capture_B_isr();
  5840  0015  3187  2793  3180   	fcall	_capture_B_isr
  5841  0018                     i1l2143:	
  5842                           ;main.c: 73:     }
  5843                           
  5844                           
  5845                           ;main.c: 76:     if(PIR4bits.TMR2IF)
  5846  0018  002E               	movlb	14	; select bank14
  5847  0019  1C90               	btfss	16,1	;volatile
  5848  001A  281D               	goto	i1l70
  5849                           
  5850                           ;main.c: 77:     {;main.c: 78:         display_isr();
  5851  001B  318E  26D0         	fcall	_display_isr
  5852  001D                     i1l70:	
  5853                           ;main.c: 79:     }
  5854                           
  5855  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5856  001E  0009               	retfie
  5857  001F                     __end_of__isr:	
  5858                           
  5859                           	psect	text16
  5860  06DA                     __ptext16:	
  5861 ;; *************** function _timer_1_isr *****************
  5862 ;; Defined at:
  5863 ;;		line 51 in file "encoder.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;Total ram usage:        4 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		__isr
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function _timer_1_isr
  5892  06DA                     _timer_1_isr:	
  5893                           
  5894                           ;encoder.c: 53:     ++rollover_cnt;
  5895                           
  5896                           ;incstack = 0
  5897                           ; Regs used in _timer_1_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  5898  06DA  3001               	movlw	1
  5899  06DB  00F0               	movwf	??_timer_1_isr
  5900  06DC  0870               	movf	??_timer_1_isr,w
  5901  06DD  07F8               	addwf	_rollover_cnt,f
  5902                           
  5903                           ;encoder.c: 56:     if((rollover_cnt&0b11111) == 0)
  5904  06DE  0878               	movf	_rollover_cnt,w
  5905  06DF  391F               	andlw	31
  5906  06E0  1D03               	btfss	3,2
  5907  06E1  2F24               	goto	i1l1367
  5908                           
  5909                           ;encoder.c: 57:     {;encoder.c: 59:         if(rollover_cnt==0)
  5910  06E2  0878               	movf	_rollover_cnt,w
  5911  06E3  1D03               	btfss	3,2
  5912  06E4  2EF6               	goto	i1l1357
  5913                           
  5914                           ;encoder.c: 60:         {;encoder.c: 61:             os.time_sum -= 536870912;
  5915  06E5  3000               	movlw	0
  5916  06E6  00F0               	movwf	??_timer_1_isr
  5917  06E7  3000               	movlw	0
  5918  06E8  00F1               	movwf	??_timer_1_isr+1
  5919  06E9  3000               	movlw	0
  5920  06EA  00F2               	movwf	??_timer_1_isr+2
  5921  06EB  3020               	movlw	32
  5922  06EC  00F3               	movwf	??_timer_1_isr+3
  5923  06ED  0870               	movf	??_timer_1_isr,w
  5924  06EE  0020               	movlb	0	; select bank0
  5925  06EF  02E4               	subwf	_os+12,f	;volatile
  5926  06F0  0871               	movf	??_timer_1_isr+1,w
  5927  06F1  3BE5               	subwfb	_os+13,f	;volatile
  5928  06F2  0872               	movf	??_timer_1_isr+2,w
  5929  06F3  3BE6               	subwfb	_os+14,f	;volatile
  5930  06F4  0873               	movf	??_timer_1_isr+3,w
  5931  06F5  3BE7               	subwfb	_os+15,f	;volatile
  5932  06F6                     i1l1357:	
  5933                           ;encoder.c: 62:         }
  5934                           
  5935                           
  5936                           ;encoder.c: 64:         os.encoder_difference = os.encoder - os.encoder_last;
  5937  06F6  0020               	movlb	0	; select bank0
  5938  06F7  095A               	comf	_os+2,w	;volatile
  5939  06F8  00F0               	movwf	??_timer_1_isr
  5940  06F9  095B               	comf	_os+3,w	;volatile
  5941  06FA  00F1               	movwf	??_timer_1_isr+1
  5942  06FB  0AF0               	incf	??_timer_1_isr,f
  5943  06FC  1903               	skipnz
  5944  06FD  0AF1               	incf	??_timer_1_isr+1,f
  5945  06FE  0858               	movf	_os,w	;volatile
  5946  06FF  0770               	addwf	??_timer_1_isr,w
  5947  0700  00F2               	movwf	??_timer_1_isr+2
  5948  0701  0859               	movf	_os+1,w	;volatile
  5949  0702  3D71               	addwfc	??_timer_1_isr+1,w
  5950  0703  00F3               	movwf	??_timer_1_isr+3
  5951  0704  0872               	movf	??_timer_1_isr+2,w
  5952  0705  00DC               	movwf	_os+4	;volatile
  5953  0706  0873               	movf	??_timer_1_isr+3,w
  5954  0707  00DD               	movwf	_os+5	;volatile
  5955                           
  5956                           ;encoder.c: 65:         os.encoder_last = os.encoder;
  5957  0708  0859               	movf	_os+1,w	;volatile
  5958  0709  00DB               	movwf	_os+3	;volatile
  5959  070A  0858               	movf	_os,w	;volatile
  5960  070B  00DA               	movwf	_os+2	;volatile
  5961                           
  5962                           ;encoder.c: 67:         os.capture = 32;
  5963  070C  3020               	movlw	32
  5964  070D  00F0               	movwf	??_timer_1_isr
  5965  070E  0870               	movf	??_timer_1_isr,w
  5966  070F  00DE               	movwf	_os+6	;volatile
  5967                           
  5968                           ;encoder.c: 68:         os.time_sum_last = os.time_sum;
  5969  0710  300C               	movlw	12
  5970  0711  3E58               	addlw	(low (_os| 0))& (0+255)
  5971  0712  0086               	movwf	6
  5972  0713  0187               	clrf	7
  5973  0714  3F40               	moviw [0]fsr1
  5974  0715  00E0               	movwf	_os+8	;volatile
  5975  0716  3F41               	moviw [1]fsr1
  5976  0717  00E1               	movwf	_os+9	;volatile
  5977  0718  3F42               	moviw [2]fsr1
  5978  0719  00E2               	movwf	_os+10	;volatile
  5979  071A  3F43               	moviw [3]fsr1
  5980  071B  00E3               	movwf	_os+11	;volatile
  5981                           
  5982                           ;encoder.c: 69:         os.time_sum = 0;
  5983  071C  3000               	movlw	0
  5984  071D  00E7               	movwf	_os+15	;volatile
  5985  071E  3000               	movlw	0
  5986  071F  00E6               	movwf	_os+14	;volatile
  5987  0720  3000               	movlw	0
  5988  0721  00E5               	movwf	_os+13	;volatile
  5989  0722  3000               	movlw	0
  5990  0723  00E4               	movwf	_os+12	;volatile
  5991  0724                     i1l1367:	
  5992                           ;encoder.c: 70:     }
  5993                           
  5994                           
  5995                           ;encoder.c: 74:     if((rollover_cnt&0b11111) == 0b11111)
  5996  0724  301F               	movlw	31
  5997  0725  0578               	andwf	_rollover_cnt,w
  5998  0726  00F0               	movwf	??_timer_1_isr
  5999  0727  301F               	movlw	31
  6000  0728  0670               	xorwf	??_timer_1_isr,w
  6001  0729  1D03               	btfss	3,2
  6002  072A  2F3C               	goto	i1l1377
  6003                           
  6004                           ;encoder.c: 75:     {;encoder.c: 77:         if(os.capture!=0)
  6005  072B  0020               	movlb	0	; select bank0
  6006  072C  085E               	movf	_os+6,w	;volatile
  6007  072D  1903               	btfsc	3,2
  6008  072E  2F3C               	goto	i1l1377
  6009                           
  6010                           ;encoder.c: 78:         {;encoder.c: 80:             os.capture = 0;
  6011  072F  01DE               	clrf	_os+6	;volatile
  6012                           
  6013                           ;encoder.c: 82:             os.time_sum = 0;
  6014  0730  3000               	movlw	0
  6015  0731  00E7               	movwf	_os+15	;volatile
  6016  0732  3000               	movlw	0
  6017  0733  00E6               	movwf	_os+14	;volatile
  6018  0734  3000               	movlw	0
  6019  0735  00E5               	movwf	_os+13	;volatile
  6020  0736  3000               	movlw	0
  6021  0737  00E4               	movwf	_os+12	;volatile
  6022                           
  6023                           ;encoder.c: 84:             os.ready = 1;
  6024  0738  3001               	movlw	1
  6025  0739  00F0               	movwf	??_timer_1_isr
  6026  073A  0870               	movf	??_timer_1_isr,w
  6027  073B  00DF               	movwf	_os+7	;volatile
  6028  073C                     i1l1377:	
  6029                           ;encoder.c: 86:     }
  6030                           
  6031                           ;encoder.c: 85:         }
  6032                           
  6033                           
  6034                           ;encoder.c: 89:     PIR4bits.TMR1IF = 0;
  6035  073C  002E               	movlb	14	; select bank14
  6036  073D  1010               	bcf	16,0	;volatile
  6037  073E  0008               	return
  6038  073F                     __end_of_timer_1_isr:	
  6039                           
  6040                           	psect	text17
  6041  0ED0                     __ptext17:	
  6042 ;; *************** function _display_isr *****************
  6043 ;; Defined at:
  6044 ;;		line 121 in file "display.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;Total ram usage:        2 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		__isr
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           
  6072                           ;psect for function _display_isr
  6073  0ED0                     _display_isr:	
  6074                           
  6075                           ;display.c: 123:     LATBbits.LATB7 = 1;
  6076                           
  6077                           ;incstack = 0
  6078                           ; Regs used in _display_isr: [wreg-fsr1h+status,2+status,0]
  6079  0ED0  0020               	movlb	0	; select bank0
  6080  0ED1  1797               	bsf	23,7	;volatile
  6081                           
  6082                           ;display.c: 124:     LATBbits.LATB6 = 1;
  6083  0ED2  1717               	bsf	23,6	;volatile
  6084                           
  6085                           ;display.c: 125:     LATBbits.LATB5 = 1;
  6086  0ED3  1697               	bsf	23,5	;volatile
  6087                           
  6088                           ;display.c: 126:     LATBbits.LATB4 = 1;
  6089  0ED4  1617               	bsf	23,4	;volatile
  6090                           
  6091                           ;display.c: 128:     LATC = characters[segment&0b11];
  6092  0ED5  0879               	movf	_segment,w
  6093  0ED6  3903               	andlw	3
  6094  0ED7  3EAA               	addlw	(low (_characters| 0))& (0+255)
  6095  0ED8  0086               	movwf	6
  6096  0ED9  0187               	clrf	7
  6097  0EDA  0801               	movf	1,w
  6098  0EDB  0098               	movwf	24	;volatile
  6099                           
  6100                           ;display.c: 130:     switch(segment&0b11)
  6101  0EDC  2EE5               	goto	i1l2107
  6102  0EDD                     i1l139:	
  6103                           ;display.c: 131:     {;display.c: 132:         case 0:
  6104                           
  6105                           
  6106                           ;display.c: 133:             LATBbits.LATB7 = 0;
  6107  0EDD  1397               	bcf	23,7	;volatile
  6108                           
  6109                           ;display.c: 134:             break;
  6110  0EDE  2EFC               	goto	i1l2109
  6111  0EDF                     i1l141:	
  6112                           ;display.c: 135:         case 1:
  6113                           
  6114                           
  6115                           ;display.c: 136:             LATBbits.LATB6 = 0;
  6116  0EDF  1317               	bcf	23,6	;volatile
  6117                           
  6118                           ;display.c: 137:             break;
  6119  0EE0  2EFC               	goto	i1l2109
  6120  0EE1                     i1l142:	
  6121                           ;display.c: 138:         case 2:
  6122                           
  6123                           
  6124                           ;display.c: 139:             LATBbits.LATB5 = 0;
  6125  0EE1  1297               	bcf	23,5	;volatile
  6126                           
  6127                           ;display.c: 140:             break;
  6128  0EE2  2EFC               	goto	i1l2109
  6129  0EE3                     i1l143:	
  6130                           ;display.c: 141:         case 3:
  6131                           
  6132                           
  6133                           ;display.c: 142:             LATBbits.LATB4 = 0;
  6134  0EE3  1217               	bcf	23,4	;volatile
  6135                           
  6136                           ;display.c: 144:     }
  6137                           
  6138                           ;display.c: 143:             break;
  6139  0EE4  2EFC               	goto	i1l2109
  6140  0EE5                     i1l2107:	
  6141  0EE5  0879               	movf	_segment,w
  6142  0EE6  3903               	andlw	3
  6143  0EE7  00F0               	movwf	??_display_isr
  6144  0EE8  01F1               	clrf	??_display_isr+1
  6145                           
  6146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6147                           ; Switch size 1, requested type "space"
  6148                           ; Number of cases is 1, Range of values is 0 to 0
  6149                           ; switch strategies available:
  6150                           ; Name         Instructions Cycles
  6151                           ; simple_byte            4     3 (average)
  6152                           ; direct_byte            8     6 (fixed)
  6153                           ; jumptable            260     6 (fixed)
  6154                           ;	Chosen strategy is simple_byte
  6155  0EE9  0871               	movf	??_display_isr+1,w
  6156  0EEA  3A00               	xorlw	0	; case 0
  6157  0EEB  1903               	skipnz
  6158  0EEC  2EEE               	goto	i1l2355
  6159  0EED  2EFC               	goto	i1l2109
  6160  0EEE                     i1l2355:	
  6161                           
  6162                           ; Switch size 1, requested type "space"
  6163                           ; Number of cases is 4, Range of values is 0 to 3
  6164                           ; switch strategies available:
  6165                           ; Name         Instructions Cycles
  6166                           ; simple_byte           13     7 (average)
  6167                           ; direct_byte           14     6 (fixed)
  6168                           ; jumptable            260     6 (fixed)
  6169                           ;	Chosen strategy is simple_byte
  6170  0EEE  0870               	movf	??_display_isr,w
  6171  0EEF  3A00               	xorlw	0	; case 0
  6172  0EF0  1903               	skipnz
  6173  0EF1  2EDD               	goto	i1l139
  6174  0EF2  3A01               	xorlw	1	; case 1
  6175  0EF3  1903               	skipnz
  6176  0EF4  2EDF               	goto	i1l141
  6177  0EF5  3A03               	xorlw	3	; case 2
  6178  0EF6  1903               	skipnz
  6179  0EF7  2EE1               	goto	i1l142
  6180  0EF8  3A01               	xorlw	1	; case 3
  6181  0EF9  1903               	skipnz
  6182  0EFA  2EE3               	goto	i1l143
  6183  0EFB  2EFC               	goto	i1l2109
  6184  0EFC                     i1l2109:	
  6185                           
  6186                           ;display.c: 146:     ++segment;
  6187  0EFC  3001               	movlw	1
  6188  0EFD  00F0               	movwf	??_display_isr
  6189  0EFE  0870               	movf	??_display_isr,w
  6190  0EFF  07F9               	addwf	_segment,f
  6191                           
  6192                           ;display.c: 149:     PIR4bits.TMR2IF = 0;
  6193  0F00  002E               	movlb	14	; select bank14
  6194  0F01  1090               	bcf	16,1	;volatile
  6195  0F02  0008               	return
  6196  0F03                     __end_of_display_isr:	
  6197                           
  6198                           	psect	text18
  6199  0793                     __ptext18:	
  6200 ;; *************** function _capture_B_isr *****************
  6201 ;; Defined at:
  6202 ;;		line 156 in file "encoder.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;		None
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      void 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;Total ram usage:        4 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		__isr
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           
  6230                           ;psect for function _capture_B_isr
  6231  0793                     _capture_B_isr:	
  6232                           
  6233                           ;encoder.c: 159:     if(os.capture)
  6234                           
  6235                           ;incstack = 0
  6236                           ; Regs used in _capture_B_isr: [wreg+status,2+status,0]
  6237  0793  0020               	movlb	0	; select bank0
  6238  0794  085E               	movf	_os+6,w	;volatile
  6239  0795  1903               	btfsc	3,2
  6240  0796  2FCB               	goto	i1l2087
  6241                           
  6242                           ;encoder.c: 160:     {;encoder.c: 162:         time = rollover_cnt;
  6243  0797  0878               	movf	_rollover_cnt,w
  6244  0798  00F0               	movwf	??_capture_B_isr
  6245  0799  01F1               	clrf	??_capture_B_isr+1
  6246  079A  01F2               	clrf	??_capture_B_isr+2
  6247  079B  01F3               	clrf	??_capture_B_isr+3
  6248  079C  0873               	movf	??_capture_B_isr+3,w
  6249  079D  00ED               	movwf	_time+3
  6250  079E  0872               	movf	??_capture_B_isr+2,w
  6251  079F  00EC               	movwf	_time+2
  6252  07A0  0871               	movf	??_capture_B_isr+1,w
  6253  07A1  00EB               	movwf	_time+1
  6254  07A2  0870               	movf	??_capture_B_isr,w
  6255  07A3  00EA               	movwf	_time
  6256                           
  6257                           ;encoder.c: 163:         time <<= 8;
  6258  07A4  3008               	movlw	8
  6259  07A5                     u263_25:	
  6260  07A5  35EA               	lslf	_time,f
  6261  07A6  0DEB               	rlf	_time+1,f
  6262  07A7  0DEC               	rlf	_time+2,f
  6263  07A8  0DED               	rlf	_time+3,f
  6264  07A9  0B89               	decfsz	9,f
  6265  07AA  2FA5               	goto	u263_25
  6266                           
  6267                           ;encoder.c: 164:         time |= CCPR2H;
  6268  07AB  0026               	movlb	6	; select bank6
  6269  07AC  0811               	movf	17,w	;volatile
  6270  07AD  0020               	movlb	0	; select bank0
  6271  07AE  04EA               	iorwf	_time,f
  6272                           
  6273                           ;encoder.c: 165:         time <<= 8;
  6274  07AF  3008               	movlw	8
  6275  07B0                     u264_25:	
  6276  07B0  35EA               	lslf	_time,f
  6277  07B1  0DEB               	rlf	_time+1,f
  6278  07B2  0DEC               	rlf	_time+2,f
  6279  07B3  0DED               	rlf	_time+3,f
  6280  07B4  0B89               	decfsz	9,f
  6281  07B5  2FB0               	goto	u264_25
  6282                           
  6283                           ;encoder.c: 166:         time |= CCPR2L;
  6284  07B6  0026               	movlb	6	; select bank6
  6285  07B7  0810               	movf	16,w	;volatile
  6286  07B8  0020               	movlb	0	; select bank0
  6287  07B9  04EA               	iorwf	_time,f
  6288                           
  6289                           ;encoder.c: 168:         os.time_sum += time;
  6290  07BA  086A               	movf	_time,w	;volatile
  6291  07BB  07E4               	addwf	_os+12,f	;volatile
  6292  07BC  086B               	movf	_time+1,w	;volatile
  6293  07BD  3DE5               	addwfc	_os+13,f	;volatile
  6294  07BE  086C               	movf	_time+2,w	;volatile
  6295  07BF  3DE6               	addwfc	_os+14,f	;volatile
  6296  07C0  086D               	movf	_time+3,w	;volatile
  6297  07C1  3DE7               	addwfc	_os+15,f	;volatile
  6298                           
  6299                           ;encoder.c: 170:         --os.capture;
  6300  07C2  3001               	movlw	1
  6301  07C3  02DE               	subwf	_os+6,f	;volatile
  6302                           
  6303                           ;encoder.c: 172:         if(os.capture==0)
  6304  07C4  085E               	movf	_os+6,w	;volatile
  6305  07C5  1D03               	btfss	3,2
  6306  07C6  2FCB               	goto	i1l2087
  6307                           
  6308                           ;encoder.c: 173:         {;encoder.c: 174:             os.ready = 1;
  6309  07C7  3001               	movlw	1
  6310  07C8  00F0               	movwf	??_capture_B_isr
  6311  07C9  0870               	movf	??_capture_B_isr,w
  6312  07CA  00DF               	movwf	_os+7	;volatile
  6313  07CB                     i1l2087:	
  6314                           ;encoder.c: 176:     }
  6315                           
  6316                           ;encoder.c: 175:         }
  6317                           
  6318                           
  6319                           ;encoder.c: 178:     if(PORTBbits.RB1)
  6320  07CB  1C8D               	btfss	13,1	;volatile
  6321  07CC  2FD0               	goto	i1l208
  6322                           
  6323                           ;encoder.c: 179:     {;encoder.c: 180:         if(PORTBbits.RB2)
  6324  07CD  190D               	btfsc	13,2	;volatile
  6325  07CE  2FD6               	goto	i1l2097
  6326                           
  6327                           ;encoder.c: 188:         else
  6328                           
  6329                           ;encoder.c: 187:         }
  6330                           
  6331                           ;encoder.c: 181:         {;encoder.c: 183:                 --os.encoder;
  6332  07CF  2FD2               	goto	L5
  6333  07D0                     i1l208:	
  6334                           ;encoder.c: 197:     else
  6335                           
  6336                           ;encoder.c: 196:     }
  6337                           
  6338                           ;encoder.c: 195:         }
  6339                           
  6340                           ;encoder.c: 189:         {;encoder.c: 191:                 ++os.encoder;
  6341                           
  6342                           
  6343                           ;encoder.c: 198:     {;encoder.c: 199:         if(PORTBbits.RB2)
  6344  07D0  1D0D               	btfss	13,2	;volatile
  6345  07D1  2FD6               	goto	i1l2097
  6346  07D2                     L5:	
  6347                           
  6348                           ;encoder.c: 200:         {;encoder.c: 202:                 ++os.encoder;
  6349  07D2  3001               	movlw	1
  6350  07D3  07D8               	addwf	_os,f	;volatile
  6351  07D4  3000               	movlw	0
  6352  07D5  2FD9               	goto	L4
  6353  07D6                     i1l2097:	
  6354                           ;encoder.c: 207:         else
  6355                           
  6356                           ;encoder.c: 206:         }
  6357                           
  6358                           
  6359                           ;encoder.c: 208:         {;encoder.c: 210:                 --os.encoder;
  6360  07D6  30FF               	movlw	255
  6361  07D7  07D8               	addwf	_os,f	;volatile
  6362  07D8  30FF               	movlw	255
  6363  07D9                     L4:	
  6364  07D9  3DD9               	addwfc	_os+1,f	;volatile
  6365                           
  6366                           ;encoder.c: 216:     PIR6bits.CCP2IF = 0;
  6367                           
  6368                           ;encoder.c: 215:     }
  6369                           
  6370                           ;encoder.c: 214:         }
  6371  07DA  002E               	movlb	14	; select bank14
  6372  07DB  1092               	bcf	18,1	;volatile
  6373  07DC  0008               	return
  6374  07DD                     __end_of_capture_B_isr:	
  6375                           
  6376                           	psect	text19
  6377  0FB6                     __ptext19:	
  6378 ;; *************** function _capture_A_isr *****************
  6379 ;; Defined at:
  6380 ;;		line 92 in file "encoder.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;		None
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;Total ram usage:        4 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		__isr
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function _capture_A_isr
  6409  0FB6                     _capture_A_isr:	
  6410                           
  6411                           ;encoder.c: 95:     if(os.capture)
  6412                           
  6413                           ;incstack = 0
  6414                           ; Regs used in _capture_A_isr: [wreg+status,2+status,0]
  6415  0FB6  0020               	movlb	0	; select bank0
  6416  0FB7  085E               	movf	_os+6,w	;volatile
  6417  0FB8  1903               	btfsc	3,2
  6418  0FB9  2FEE               	goto	i1l2059
  6419                           
  6420                           ;encoder.c: 96:     {;encoder.c: 98:         time = rollover_cnt;
  6421  0FBA  0878               	movf	_rollover_cnt,w
  6422  0FBB  00F0               	movwf	??_capture_A_isr
  6423  0FBC  01F1               	clrf	??_capture_A_isr+1
  6424  0FBD  01F2               	clrf	??_capture_A_isr+2
  6425  0FBE  01F3               	clrf	??_capture_A_isr+3
  6426  0FBF  0873               	movf	??_capture_A_isr+3,w
  6427  0FC0  00ED               	movwf	_time+3
  6428  0FC1  0872               	movf	??_capture_A_isr+2,w
  6429  0FC2  00EC               	movwf	_time+2
  6430  0FC3  0871               	movf	??_capture_A_isr+1,w
  6431  0FC4  00EB               	movwf	_time+1
  6432  0FC5  0870               	movf	??_capture_A_isr,w
  6433  0FC6  00EA               	movwf	_time
  6434                           
  6435                           ;encoder.c: 99:         time <<= 8;
  6436  0FC7  3008               	movlw	8
  6437  0FC8                     u256_25:	
  6438  0FC8  35EA               	lslf	_time,f
  6439  0FC9  0DEB               	rlf	_time+1,f
  6440  0FCA  0DEC               	rlf	_time+2,f
  6441  0FCB  0DED               	rlf	_time+3,f
  6442  0FCC  0B89               	decfsz	9,f
  6443  0FCD  2FC8               	goto	u256_25
  6444                           
  6445                           ;encoder.c: 100:         time |= CCPR1H;
  6446  0FCE  0026               	movlb	6	; select bank6
  6447  0FCF  080D               	movf	13,w	;volatile
  6448  0FD0  0020               	movlb	0	; select bank0
  6449  0FD1  04EA               	iorwf	_time,f
  6450                           
  6451                           ;encoder.c: 101:         time <<= 8;
  6452  0FD2  3008               	movlw	8
  6453  0FD3                     u257_25:	
  6454  0FD3  35EA               	lslf	_time,f
  6455  0FD4  0DEB               	rlf	_time+1,f
  6456  0FD5  0DEC               	rlf	_time+2,f
  6457  0FD6  0DED               	rlf	_time+3,f
  6458  0FD7  0B89               	decfsz	9,f
  6459  0FD8  2FD3               	goto	u257_25
  6460                           
  6461                           ;encoder.c: 102:         time |= CCPR1L;
  6462  0FD9  0026               	movlb	6	; select bank6
  6463  0FDA  080C               	movf	12,w	;volatile
  6464  0FDB  0020               	movlb	0	; select bank0
  6465  0FDC  04EA               	iorwf	_time,f
  6466                           
  6467                           ;encoder.c: 104:         os.time_sum += time;
  6468  0FDD  086A               	movf	_time,w	;volatile
  6469  0FDE  07E4               	addwf	_os+12,f	;volatile
  6470  0FDF  086B               	movf	_time+1,w	;volatile
  6471  0FE0  3DE5               	addwfc	_os+13,f	;volatile
  6472  0FE1  086C               	movf	_time+2,w	;volatile
  6473  0FE2  3DE6               	addwfc	_os+14,f	;volatile
  6474  0FE3  086D               	movf	_time+3,w	;volatile
  6475  0FE4  3DE7               	addwfc	_os+15,f	;volatile
  6476                           
  6477                           ;encoder.c: 106:         --os.capture;
  6478  0FE5  3001               	movlw	1
  6479  0FE6  02DE               	subwf	_os+6,f	;volatile
  6480                           
  6481                           ;encoder.c: 108:         if(os.capture==0)
  6482  0FE7  085E               	movf	_os+6,w	;volatile
  6483  0FE8  1D03               	btfss	3,2
  6484  0FE9  2FEE               	goto	i1l2059
  6485                           
  6486                           ;encoder.c: 109:         {;encoder.c: 110:             os.ready = 1;
  6487  0FEA  3001               	movlw	1
  6488  0FEB  00F0               	movwf	??_capture_A_isr
  6489  0FEC  0870               	movf	??_capture_A_isr,w
  6490  0FED  00DF               	movwf	_os+7	;volatile
  6491  0FEE                     i1l2059:	
  6492                           ;encoder.c: 112:     }
  6493                           
  6494                           ;encoder.c: 111:         }
  6495                           
  6496                           
  6497                           ;encoder.c: 114:     if(PORTBbits.RB2)
  6498  0FEE  1D0D               	btfss	13,2	;volatile
  6499  0FEF  2FF3               	goto	i1l197
  6500                           
  6501                           ;encoder.c: 115:     {;encoder.c: 116:         if(PORTBbits.RB1)
  6502  0FF0  188D               	btfsc	13,1	;volatile
  6503  0FF1  2FF9               	goto	i1l2069
  6504                           
  6505                           ;encoder.c: 124:         else
  6506                           
  6507                           ;encoder.c: 123:         }
  6508                           
  6509                           ;encoder.c: 117:         {;encoder.c: 119:                 ++os.encoder;
  6510  0FF2  2FF5               	goto	L9
  6511  0FF3                     i1l197:	
  6512                           ;encoder.c: 133:     else
  6513                           
  6514                           ;encoder.c: 132:     }
  6515                           
  6516                           ;encoder.c: 131:         }
  6517                           
  6518                           ;encoder.c: 125:         {;encoder.c: 127:                 --os.encoder;
  6519                           
  6520                           
  6521                           ;encoder.c: 134:     {;encoder.c: 135:         if(PORTBbits.RB1)
  6522  0FF3  1C8D               	btfss	13,1	;volatile
  6523  0FF4  2FF9               	goto	i1l2069
  6524  0FF5                     L9:	
  6525                           
  6526                           ;encoder.c: 136:         {;encoder.c: 138:                 --os.encoder;
  6527  0FF5  30FF               	movlw	255
  6528  0FF6  07D8               	addwf	_os,f	;volatile
  6529  0FF7  30FF               	movlw	255
  6530  0FF8  2FFC               	goto	L8
  6531  0FF9                     i1l2069:	
  6532                           ;encoder.c: 143:         else
  6533                           
  6534                           ;encoder.c: 142:         }
  6535                           
  6536                           
  6537                           ;encoder.c: 144:         {;encoder.c: 146:                 ++os.encoder;
  6538  0FF9  3001               	movlw	1
  6539  0FFA  07D8               	addwf	_os,f	;volatile
  6540  0FFB  3000               	movlw	0
  6541  0FFC                     L8:	
  6542  0FFC  3DD9               	addwfc	_os+1,f	;volatile
  6543                           
  6544                           ;encoder.c: 152:     PIR6bits.CCP1IF = 0;
  6545                           
  6546                           ;encoder.c: 151:     }
  6547                           
  6548                           ;encoder.c: 150:         }
  6549  0FFD  002E               	movlb	14	; select bank14
  6550  0FFE  1012               	bcf	18,0	;volatile
  6551  0FFF  0008               	return
  6552  1000                     __end_of_capture_A_isr:	
  6553  007E                     btemp	set	126	;btemp
  6554  007E                     int$flags	set	126
  6555  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     56      78
    BANK1            80      0      14
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display_set->___lwdiv
    _display_set->___lwmod
    __system_init->_display_init
    __calculate_speed->___fltol
    __calculate_speed->___lmul
    __calculate_speed->___xxtofl
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl

Critical Paths under __isr in COMMON

    __isr->_capture_A_isr
    __isr->_capture_B_isr
    __isr->_timer_1_isr

Critical Paths under _main in BANK0

    _main->__calculate_speed
    _display_set->___lwdiv
    __calculate_speed->___fldiv
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl

Critical Paths under __isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under __isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under __isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under __isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under __isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under __isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under __isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under __isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under __isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under __isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under __isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under __isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under __isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8555
                   __calculate_speed
                     __handle_relays
                       __system_init
                        _display_set
 ---------------------------------------------------------------------------------
 (1) _display_set                                         11     8      3    3141
                                              4 BANK0     11     8      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     952
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     781
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) __system_init                                         0     0      0       0
                       _display_init
                       _encoder_init
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) __handle_relays                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) __calculate_speed                                    20    20      0    5414
                                             36 BANK0     20    20      0
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     427
                                              4 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                              5 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              4 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) __isr                                                 0     0      0       0
                      _capture_A_isr
                      _capture_B_isr
                        _display_isr
                        _timer_1_isr
 ---------------------------------------------------------------------------------
 (5) _timer_1_isr                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _display_isr                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _capture_B_isr                                        4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _capture_A_isr                                        4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __calculate_speed
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
     ___fltol
     ___lmul
     ___xxtofl
   __handle_relays
   __system_init
     _display_init
     _encoder_init
   _display_set
     ___lwdiv
     ___lwmod

 __isr (ROOT)
   _capture_A_isr
   _capture_B_isr
   _display_isr
   _timer_1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       E       7       17.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      66      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      66      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Oct 02 00:54:18 2018

                    ___fldiv@aexp 0043                      ___fldiv@bexp 0042                      ___fldiv@sign 003B  
                     __CFG_CP$OFF 0000                                l55 0E51                                l83 077D  
                              l76 076B                                l85 078F                                l77 0768  
                    ?_display_isr 0070                                l78 0756                      _rollover_cnt 0078  
                    ?_display_set 0024                                _os 0058               __Umul8_16@word_mpld 0022  
                     __CFG_LVP$ON 0000                               l503 06C8                               l711 025E  
                             l731 062D                               l732 0637                               l724 0619  
                             l718 05E3                               l680 03C8                               l681 03E0  
                             l737 07EE                               l683 03ED                               l659 02B4  
                   ?_display_init 0070                               _PR2 028D                      __CFG_CPD$OFF 0000  
                     __CFG_WRT$ON 0000                      __CFG_BORV$HI 0000                               wreg 0009  
                    ___flmul@aexp 0037                      ___flmul@bexp 0038                      ___flmul@sign 0032  
                    ___flmul@temp 003D                      ___flmul@prod 0039                      __CFG_ZCD$OFF 0000  
                    ___fltol@exp1 0026                              l2221 0F2A                              l2213 0F0C  
                            l2215 0F18                              l1505 07E8                              l2225 0F33  
                            l2243 0E92                              l2173 0676                              l2237 0E7A  
                            l2309 05A4                              l2333 0E69                              l2191 06B2  
                            l1543 0EA8                              l2255 040B                              l2239 0E86  
                            l2247 0E9B                              l1713 0333                              l1721 0315  
                            l2257 0413                              l2281 0514                              l1723 0351  
                            l1811 007C                              l1547 0EB3                              l1653 0285  
                            l1901 0234                              l1813 007E                              l2197 06BF  
                            l2189 06A4                              l1719 034C                              l1823 0094  
                            l1815 0086                              l2199 06CB                              l2279 0510  
                            l1737 0357                              l1673 02A9                              l1657 0288  
                            l1747 0385                              l1739 036E                              l1659 0290  
                            l1907 024B                              l1931 05F2                              l1773 03E9  
                            l1749 0387                              l1693 02E7                              l1677 02AC  
                            l1925 05DB                              l1759 03B0                              l1687 02D3  
                            l1943 061E                              l1935 05F6                              l1793 0059  
                            l1945 0627                              l1937 0606                              l1875 01C6  
                            l1795 005B                              l1885 01F4                              l1877 01DD  
                            l1797 0063                              l1887 01F6                              l1959 0652  
                            l1897 021F  __calculate_speed@time_difference 004C                              u1035 0750  
                            u2005 039E                              u2015 03B9                              u1055 0762  
                            u2025 03D2                              u1075 0777                              u2125 010A  
                            u2135 0139                              u1095 0789                              _LATC 0018  
                            u2145 018F                              u1505 0EBB                              u2155 01A6  
                            u2165 01B5                              u2175 01C9                              u2415 063F  
                            u2335 05FF                              u1465 07EF                              u2265 020D  
                            u2275 0228                              u2195 01D2                              u2355 0613  
                            u2285 023E                              u1495 0EB4                              u2375 0621  
                            u1915 035A                              u1845 031D                              u1935 0363  
                            u1855 0324                              u2825 06C0                              u2905 0F2B  
                            u1875 032D                              u1885 0341                              u2765 067F  
                            u2935 0E7D                              u2865 0F0F                              u2795 06A5  
                            u2955 0E8C                              u2885 0F19                              u2965 0E93  
                            i1l70 001D                              u2895 0F23                    ??_encoder_init 0074  
                            __isr 0004                              _main 0E4E                              _time 006A  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E                     __CFG_BOREN$ON 0000                              start 001F  
                 ___fldiv@new_exp 003C                     __CFG_CSWEN$ON 0000                     __CFG_MCLRE$ON 0000  
                           ?__isr 0070                     ___fltol@sign1 0025                    ??_display_init 0074  
                           ?_main 0070                   __end_of___fldiv 03FE                     __CFG_WDTE$OFF 0000  
                 __end_of___flmul 026B                   __end_of___fltol 06DA                   __end_of___lwdiv 0F38  
                           i1l141 0EDF                             i1l142 0EE1                             i1l143 0EE3  
                           i1l208 07D0                             i1l139 0EDD                   __end_of___lwmod 0EA0  
                           i1l197 0FF3               ___lmul@multiplicand 0024                     __CFG_PWRTE$ON 0000  
                  __CFG_FCMEN$OFF 0000                     ?__system_init 0070                             status 0003  
                           wtemp0 007E                   __initialization 0021                      __end_of__isr 001F  
                    __end_of_main 0E73                            ??__isr 0074                            ??_main 0078  
       __calculate_speed@distance 0050                    ??__system_init 0075                            _CCPR1H 030D  
                          _CCPR2H 0311                            _CCPR1L 030C                            _CCPR2L 0310  
            display_set@abs_value 002D                            i1l2107 0EE5                            i1l2109 0EFC  
                          i1l2143 0018                            i1l2135 000C                            i1l2059 0FEE  
                          i1l2139 0012                            i1l2069 0FF9                            i1l1357 06F6  
                          i1l2087 07CB                            i1l1367 0724                            i1l2097 07D6  
                          i1l1377 073C                            i1l2355 0EEE                    __CFG_WDTCCS$SC 0000  
                          u263_25 07A5                            u256_25 0FC8                            u264_25 07B0  
                          u257_25 0FD3                  __end_of___xxtofl 065B             __end_of_capture_A_isr 1000  
           __end_of_capture_B_isr 07DD                            ___lmul 0EA0                         ??___fldiv 0032  
                  __CFG_STVREN$ON 0000                         ??___flmul 002D                         ??___fltol 0020  
                       ??___lwdiv 0020                         ??___lwmod 0020              __end_of_encoder_init 0F76  
                    ?_timer_1_isr 0070              __size_of_display_isr 0033              __size_of_display_set 00C4  
              __size_of__Umul8_16 0020                      ___xxtofl@arg 0026                      ___xxtofl@exp 0025  
                    ___xxtofl@val 0074           __end_of__initialization 003B                   __CFG_FEXTOSC$HS 0000  
            __end_of_display_init 0E4E                        ___fltol@f1 0074                 ?__calculate_speed 0070  
                  __pcstackCOMMON 0070                ??__calculate_speed 0044                      __pidataBANK1 0E20  
                      __pbssBANK0 0058                        __pbssBANK1 00AA           __size_of__handle_relays 0054  
                      _characters 00AA                 __end_of__Umul8_16 07FD                      _T2CLKCONbits 0290  
                      __pmaintext 0E4E              __end_of__system_init 0FB6                           ?___lmul 0020  
                      __pintentry 0004                           _CCP1PPS 0EA1                           _CCP2PPS 0EA2  
                  ___lmul@product 0074                         ?___xxtofl 0074                           _PPSLOCK 0E8F  
           __size_of_encoder_init 003E              __CFG_SCANE$available 0000                           ___fldiv 026B  
                 __size_of___lmul 0030                           ___flmul 003F                           ___fltol 065B  
                         ___lwdiv 0F03                           ___lwmod 0E73                           __ptext1 0501  
                         __ptext2 0E73                           __ptext3 0F03                           __ptext4 0F76  
                         __ptext5 0F38                           __ptext6 0E2A                           __ptext7 073F  
                         __ptext8 03FE                           __ptext9 05C5                         _T1CLKbits 0211  
                       _T1CONbits 020E                         _T2CONbits 028E                        ??___xxtofl 0020  
            __size_of_timer_1_isr 0065                           _segment 0079                           clrloop0 0E15  
           __size_of_display_init 0024              end_of_initialization 003B                           init_ram 0E1A  
                         initloop 0E1B                      _encoder_init 0F38             __CFG_WDTCPS$WDTCPS_31 0000  
                       _PORTAbits 000C                         _PORTBbits 000D                      _display_init 0E2A  
                   ___xxtofl@sign 0024                         _TRISAbits 0011                         _TRISBbits 0012  
                       _TRISCbits 0013                       ___fldiv@grs 003E                       ___fldiv@rem 0037  
                     _CCP1CAPbits 030F                       _CCP2CAPbits 0313                    __handle_relays 073F  
           display_set@temp_chars 0029                       ___flmul@grs 0033             __size_of__system_init 0040  
                     _CCP1CONbits 030E                       _CCP2CONbits 0312                     ??_display_isr 0070  
                   ??_display_set 0027                    __end_of___lmul 0ED0         __size_of__calculate_speed 0103  
             start_initialization 0021            __size_of_capture_A_isr 004A            __size_of_capture_B_isr 004A  
                    __system_init 0F76            __end_of__handle_relays 0793            __calculate_speed@speed 0054  
               __CFG_RSTOSC$EXT4X 0000                  __CFG_LPBOREN$OFF 0000                          ??___lmul 0074  
                       __Umul8_16 07DD                       __pdataBANK1 00A0                         ___fldiv@a 002A  
                       ___fldiv@b 002E               __end_of_display_isr 0F03               __end_of_display_set 05C5  
                       ___flmul@a 0029                         ___flmul@b 0025                       __pbssCOMMON 0078  
                       ___latbits 0002                     __pcstackBANK0 0020                 __size_of___xxtofl 0096  
                     _char_lookup 00A0                   ?__handle_relays 0070                  ___lwdiv@dividend 0076  
                   _capture_A_isr 0FB6                     _capture_B_isr 0793                          ?___fldiv 002A  
                        ?___flmul 0025                          ?___fltol 0074                        ?__Umul8_16 0074  
                        ?___lwdiv 0074                          ?___lwmod 0074                  __CFG_PPS1WAY$OFF 0000  
                ___lwdiv@quotient 0022                          _LATAbits 0016                          _LATBbits 0017  
                       clear_ram0 0E14                          _PIE4bits 071A                          _PIE6bits 071C  
                  ?_capture_A_isr 0070                    ?_capture_B_isr 0070                          _PIR4bits 0710  
                        _PIR6bits 0712                       _display_isr 0ED0                       _display_set 0501  
                   ??_timer_1_isr 0070                  __calculate_speed 03FE                 ___lmul@multiplier 0020  
                     ??__Umul8_16 0076                  __size_of___fldiv 0193                  __size_of___flmul 022C  
                __size_of___fltol 007F                  __size_of___lwdiv 0035                  __size_of___lwmod 002D  
                      _ANSELAbits 0F38                        _ANSELBbits 0F43                          ___xxtofl 05C5  
                 ___lwdiv@divisor 0074                   ___lwdiv@counter 0021               __end_of_timer_1_isr 073F  
                        __ptext10 0EA0                          __ptext11 065B                          __ptext12 003F  
                        __ptext13 07DD                          __ptext14 026B                          __ptext16 06DA  
                        __ptext17 0ED0                          __ptext18 0793                          __ptext19 0FB6  
                   __size_of__isr 001B                     __size_of_main 0025                   ??_capture_A_isr 0070  
                 ??_capture_B_isr 0070              __CFG_WDTCWS$WDTCWS_7 0000          display_set@decimal_flags 0026  
                        int$flags 007E                  display_set@value 0024                  ??__handle_relays 0074  
                      _INTCONbits 000B                          intlevel1 0000                  ___lwmod@dividend 0076  
               __CFG_CLKOUTEN$OFF 0000                       _PPSLOCKbits 0E8F                       _timer_1_isr 06DA  
          __Umul8_16@multiplicand 0074                   ___lwmod@divisor 0074                   ___lwmod@counter 0021  
                   ?_encoder_init 0070              __Umul8_16@multiplier 0024          __end_of__calculate_speed 0501  
               __Umul8_16@product 0020  
