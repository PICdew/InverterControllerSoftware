

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Jul 22 18:49:42 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F18855 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  001C                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0110                     	;# 
   114  0110                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0119                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011C                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011D                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011E                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  018F                     	;# 
   154  0190                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0198                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  020C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0218                     	;# 
   185  0218                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021C                     	;# 
   192  021D                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  028C                     	;# 
   197  028C                     	;# 
   198  028D                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  028F                     	;# 
   202  0290                     	;# 
   203  0290                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0296                     	;# 
   212  0296                     	;# 
   213  0297                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  030C                     	;# 
   224  030C                     	;# 
   225  030D                     	;# 
   226  030E                     	;# 
   227  030F                     	;# 
   228  0310                     	;# 
   229  0310                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0314                     	;# 
   234  0314                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031A                     	;# 
   242  031B                     	;# 
   243  031C                     	;# 
   244  031C                     	;# 
   245  031D                     	;# 
   246  031E                     	;# 
   247  031F                     	;# 
   248  038C                     	;# 
   249  038D                     	;# 
   250  038E                     	;# 
   251  0390                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  040C                     	;# 
   255  040D                     	;# 
   256  040E                     	;# 
   257  040F                     	;# 
   258  0410                     	;# 
   259  0411                     	;# 
   260  0416                     	;# 
   261  0416                     	;# 
   262  0417                     	;# 
   263  0418                     	;# 
   264  0418                     	;# 
   265  0419                     	;# 
   266  041A                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  041F                     	;# 
   274  048C                     	;# 
   275  048C                     	;# 
   276  048D                     	;# 
   277  048E                     	;# 
   278  048F                     	;# 
   279  048F                     	;# 
   280  0490                     	;# 
   281  0491                     	;# 
   282  0492                     	;# 
   283  0492                     	;# 
   284  0493                     	;# 
   285  0494                     	;# 
   286  0495                     	;# 
   287  0495                     	;# 
   288  0496                     	;# 
   289  0497                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  050C                     	;# 
   297  050C                     	;# 
   298  050D                     	;# 
   299  050E                     	;# 
   300  050F                     	;# 
   301  050F                     	;# 
   302  0510                     	;# 
   303  0511                     	;# 
   304  0512                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0515                     	;# 
   310  0516                     	;# 
   311  0517                     	;# 
   312  0518                     	;# 
   313  0519                     	;# 
   314  051A                     	;# 
   315  051B                     	;# 
   316  051C                     	;# 
   317  051D                     	;# 
   318  058C                     	;# 
   319  058C                     	;# 
   320  058D                     	;# 
   321  058E                     	;# 
   322  058F                     	;# 
   323  058F                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  060C                     	;# 
   329  060D                     	;# 
   330  060E                     	;# 
   331  060F                     	;# 
   332  0610                     	;# 
   333  0611                     	;# 
   334  0612                     	;# 
   335  0613                     	;# 
   336  0614                     	;# 
   337  0616                     	;# 
   338  0617                     	;# 
   339  0618                     	;# 
   340  0619                     	;# 
   341  061A                     	;# 
   342  061B                     	;# 
   343  061C                     	;# 
   344  061D                     	;# 
   345  061E                     	;# 
   346  068C                     	;# 
   347  068D                     	;# 
   348  068E                     	;# 
   349  068F                     	;# 
   350  0690                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  070C                     	;# 
   356  070D                     	;# 
   357  070E                     	;# 
   358  070F                     	;# 
   359  0710                     	;# 
   360  0711                     	;# 
   361  0712                     	;# 
   362  0713                     	;# 
   363  0714                     	;# 
   364  0716                     	;# 
   365  0717                     	;# 
   366  0718                     	;# 
   367  0719                     	;# 
   368  071A                     	;# 
   369  071B                     	;# 
   370  071C                     	;# 
   371  071D                     	;# 
   372  071E                     	;# 
   373  0796                     	;# 
   374  0797                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  079A                     	;# 
   378  079B                     	;# 
   379  080C                     	;# 
   380  080D                     	;# 
   381  080E                     	;# 
   382  080F                     	;# 
   383  0810                     	;# 
   384  0811                     	;# 
   385  0812                     	;# 
   386  0813                     	;# 
   387  0814                     	;# 
   388  081A                     	;# 
   389  081B                     	;# 
   390  081C                     	;# 
   391  081D                     	;# 
   392  081E                     	;# 
   393  081F                     	;# 
   394  088C                     	;# 
   395  088D                     	;# 
   396  088E                     	;# 
   397  088F                     	;# 
   398  0890                     	;# 
   399  0891                     	;# 
   400  0892                     	;# 
   401  0893                     	;# 
   402  0895                     	;# 
   403  0896                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  089A                     	;# 
   408  089B                     	;# 
   409  090C                     	;# 
   410  090E                     	;# 
   411  090F                     	;# 
   412  091F                     	;# 
   413  091F                     	;# 
   414  098F                     	;# 
   415  098F                     	;# 
   416  0990                     	;# 
   417  0991                     	;# 
   418  0992                     	;# 
   419  0993                     	;# 
   420  0994                     	;# 
   421  0995                     	;# 
   422  0996                     	;# 
   423  0997                     	;# 
   424  0E0F                     	;# 
   425  0E10                     	;# 
   426  0E11                     	;# 
   427  0E12                     	;# 
   428  0E13                     	;# 
   429  0E14                     	;# 
   430  0E15                     	;# 
   431  0E16                     	;# 
   432  0E17                     	;# 
   433  0E18                     	;# 
   434  0E19                     	;# 
   435  0E1A                     	;# 
   436  0E1B                     	;# 
   437  0E1C                     	;# 
   438  0E1D                     	;# 
   439  0E1E                     	;# 
   440  0E1F                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E23                     	;# 
   445  0E24                     	;# 
   446  0E25                     	;# 
   447  0E26                     	;# 
   448  0E27                     	;# 
   449  0E28                     	;# 
   450  0E29                     	;# 
   451  0E2A                     	;# 
   452  0E2B                     	;# 
   453  0E2C                     	;# 
   454  0E2D                     	;# 
   455  0E2E                     	;# 
   456  0E2F                     	;# 
   457  0E30                     	;# 
   458  0E31                     	;# 
   459  0E32                     	;# 
   460  0E33                     	;# 
   461  0E34                     	;# 
   462  0E35                     	;# 
   463  0E36                     	;# 
   464  0E37                     	;# 
   465  0E8F                     	;# 
   466  0E90                     	;# 
   467  0E91                     	;# 
   468  0E92                     	;# 
   469  0E93                     	;# 
   470  0E94                     	;# 
   471  0E95                     	;# 
   472  0E96                     	;# 
   473  0E97                     	;# 
   474  0E9C                     	;# 
   475  0E9D                     	;# 
   476  0E9E                     	;# 
   477  0EA1                     	;# 
   478  0EA2                     	;# 
   479  0EA3                     	;# 
   480  0EA4                     	;# 
   481  0EA5                     	;# 
   482  0EA9                     	;# 
   483  0EAA                     	;# 
   484  0EAB                     	;# 
   485  0EAC                     	;# 
   486  0EB1                     	;# 
   487  0EB2                     	;# 
   488  0EB3                     	;# 
   489  0EB8                     	;# 
   490  0EB9                     	;# 
   491  0EBA                     	;# 
   492  0EBB                     	;# 
   493  0EBC                     	;# 
   494  0EBD                     	;# 
   495  0EBE                     	;# 
   496  0EC3                     	;# 
   497  0EC5                     	;# 
   498  0EC6                     	;# 
   499  0EC7                     	;# 
   500  0EC8                     	;# 
   501  0EC9                     	;# 
   502  0ECA                     	;# 
   503  0ECB                     	;# 
   504  0ECC                     	;# 
   505  0F10                     	;# 
   506  0F11                     	;# 
   507  0F12                     	;# 
   508  0F13                     	;# 
   509  0F14                     	;# 
   510  0F15                     	;# 
   511  0F16                     	;# 
   512  0F17                     	;# 
   513  0F18                     	;# 
   514  0F19                     	;# 
   515  0F1A                     	;# 
   516  0F1B                     	;# 
   517  0F1C                     	;# 
   518  0F1D                     	;# 
   519  0F1E                     	;# 
   520  0F1F                     	;# 
   521  0F20                     	;# 
   522  0F21                     	;# 
   523  0F22                     	;# 
   524  0F23                     	;# 
   525  0F24                     	;# 
   526  0F25                     	;# 
   527  0F26                     	;# 
   528  0F27                     	;# 
   529  0F38                     	;# 
   530  0F39                     	;# 
   531  0F3A                     	;# 
   532  0F3B                     	;# 
   533  0F3C                     	;# 
   534  0F3D                     	;# 
   535  0F3E                     	;# 
   536  0F3F                     	;# 
   537  0F40                     	;# 
   538  0F41                     	;# 
   539  0F43                     	;# 
   540  0F44                     	;# 
   541  0F45                     	;# 
   542  0F46                     	;# 
   543  0F47                     	;# 
   544  0F48                     	;# 
   545  0F49                     	;# 
   546  0F4A                     	;# 
   547  0F4B                     	;# 
   548  0F4C                     	;# 
   549  0F4E                     	;# 
   550  0F4F                     	;# 
   551  0F50                     	;# 
   552  0F51                     	;# 
   553  0F52                     	;# 
   554  0F53                     	;# 
   555  0F54                     	;# 
   556  0F55                     	;# 
   557  0F56                     	;# 
   558  0F57                     	;# 
   559  0F65                     	;# 
   560  0F68                     	;# 
   561  0F69                     	;# 
   562  0F6A                     	;# 
   563  0F6B                     	;# 
   564  0FE4                     	;# 
   565  0FE5                     	;# 
   566  0FE6                     	;# 
   567  0FE7                     	;# 
   568  0FE8                     	;# 
   569  0FE9                     	;# 
   570  0FEA                     	;# 
   571  0FEB                     	;# 
   572  0FED                     	;# 
   573  0FEE                     	;# 
   574  0FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  0010                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  001C                     	;# 
   598  001C                     	;# 
   599  001D                     	;# 
   600  001D                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0093                     	;# 
   613  0094                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0110                     	;# 
   630  0110                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018E                     	;# 
   669  018F                     	;# 
   670  0190                     	;# 
   671  0191                     	;# 
   672  0192                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0198                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019C                     	;# 
   680  020C                     	;# 
   681  020C                     	;# 
   682  020D                     	;# 
   683  020E                     	;# 
   684  020F                     	;# 
   685  020F                     	;# 
   686  0210                     	;# 
   687  0210                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0212                     	;# 
   692  0213                     	;# 
   693  0214                     	;# 
   694  0215                     	;# 
   695  0215                     	;# 
   696  0216                     	;# 
   697  0216                     	;# 
   698  0217                     	;# 
   699  0217                     	;# 
   700  0218                     	;# 
   701  0218                     	;# 
   702  0219                     	;# 
   703  021A                     	;# 
   704  021B                     	;# 
   705  021B                     	;# 
   706  021C                     	;# 
   707  021C                     	;# 
   708  021D                     	;# 
   709  021D                     	;# 
   710  021E                     	;# 
   711  021F                     	;# 
   712  028C                     	;# 
   713  028C                     	;# 
   714  028D                     	;# 
   715  028D                     	;# 
   716  028E                     	;# 
   717  028F                     	;# 
   718  0290                     	;# 
   719  0290                     	;# 
   720  0291                     	;# 
   721  0292                     	;# 
   722  0292                     	;# 
   723  0293                     	;# 
   724  0293                     	;# 
   725  0294                     	;# 
   726  0295                     	;# 
   727  0296                     	;# 
   728  0296                     	;# 
   729  0297                     	;# 
   730  0298                     	;# 
   731  0298                     	;# 
   732  0299                     	;# 
   733  0299                     	;# 
   734  029A                     	;# 
   735  029B                     	;# 
   736  029C                     	;# 
   737  029C                     	;# 
   738  029D                     	;# 
   739  030C                     	;# 
   740  030C                     	;# 
   741  030D                     	;# 
   742  030E                     	;# 
   743  030F                     	;# 
   744  0310                     	;# 
   745  0310                     	;# 
   746  0311                     	;# 
   747  0312                     	;# 
   748  0313                     	;# 
   749  0314                     	;# 
   750  0314                     	;# 
   751  0315                     	;# 
   752  0316                     	;# 
   753  0317                     	;# 
   754  0318                     	;# 
   755  0318                     	;# 
   756  0319                     	;# 
   757  031A                     	;# 
   758  031B                     	;# 
   759  031C                     	;# 
   760  031C                     	;# 
   761  031D                     	;# 
   762  031E                     	;# 
   763  031F                     	;# 
   764  038C                     	;# 
   765  038D                     	;# 
   766  038E                     	;# 
   767  0390                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  040C                     	;# 
   771  040D                     	;# 
   772  040E                     	;# 
   773  040F                     	;# 
   774  0410                     	;# 
   775  0411                     	;# 
   776  0416                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  0418                     	;# 
   780  0418                     	;# 
   781  0419                     	;# 
   782  041A                     	;# 
   783  041A                     	;# 
   784  041B                     	;# 
   785  041C                     	;# 
   786  041C                     	;# 
   787  041D                     	;# 
   788  041E                     	;# 
   789  041F                     	;# 
   790  048C                     	;# 
   791  048C                     	;# 
   792  048D                     	;# 
   793  048E                     	;# 
   794  048F                     	;# 
   795  048F                     	;# 
   796  0490                     	;# 
   797  0491                     	;# 
   798  0492                     	;# 
   799  0492                     	;# 
   800  0493                     	;# 
   801  0494                     	;# 
   802  0495                     	;# 
   803  0495                     	;# 
   804  0496                     	;# 
   805  0497                     	;# 
   806  0498                     	;# 
   807  0499                     	;# 
   808  049A                     	;# 
   809  049B                     	;# 
   810  049C                     	;# 
   811  049D                     	;# 
   812  050C                     	;# 
   813  050C                     	;# 
   814  050D                     	;# 
   815  050E                     	;# 
   816  050F                     	;# 
   817  050F                     	;# 
   818  0510                     	;# 
   819  0511                     	;# 
   820  0512                     	;# 
   821  0512                     	;# 
   822  0513                     	;# 
   823  0514                     	;# 
   824  0515                     	;# 
   825  0515                     	;# 
   826  0516                     	;# 
   827  0517                     	;# 
   828  0518                     	;# 
   829  0519                     	;# 
   830  051A                     	;# 
   831  051B                     	;# 
   832  051C                     	;# 
   833  051D                     	;# 
   834  058C                     	;# 
   835  058C                     	;# 
   836  058D                     	;# 
   837  058E                     	;# 
   838  058F                     	;# 
   839  058F                     	;# 
   840  0590                     	;# 
   841  0591                     	;# 
   842  0592                     	;# 
   843  0593                     	;# 
   844  060C                     	;# 
   845  060D                     	;# 
   846  060E                     	;# 
   847  060F                     	;# 
   848  0610                     	;# 
   849  0611                     	;# 
   850  0612                     	;# 
   851  0613                     	;# 
   852  0614                     	;# 
   853  0616                     	;# 
   854  0617                     	;# 
   855  0618                     	;# 
   856  0619                     	;# 
   857  061A                     	;# 
   858  061B                     	;# 
   859  061C                     	;# 
   860  061D                     	;# 
   861  061E                     	;# 
   862  068C                     	;# 
   863  068D                     	;# 
   864  068E                     	;# 
   865  068F                     	;# 
   866  0690                     	;# 
   867  0691                     	;# 
   868  0692                     	;# 
   869  0693                     	;# 
   870  0694                     	;# 
   871  070C                     	;# 
   872  070D                     	;# 
   873  070E                     	;# 
   874  070F                     	;# 
   875  0710                     	;# 
   876  0711                     	;# 
   877  0712                     	;# 
   878  0713                     	;# 
   879  0714                     	;# 
   880  0716                     	;# 
   881  0717                     	;# 
   882  0718                     	;# 
   883  0719                     	;# 
   884  071A                     	;# 
   885  071B                     	;# 
   886  071C                     	;# 
   887  071D                     	;# 
   888  071E                     	;# 
   889  0796                     	;# 
   890  0797                     	;# 
   891  0798                     	;# 
   892  0799                     	;# 
   893  079A                     	;# 
   894  079B                     	;# 
   895  080C                     	;# 
   896  080D                     	;# 
   897  080E                     	;# 
   898  080F                     	;# 
   899  0810                     	;# 
   900  0811                     	;# 
   901  0812                     	;# 
   902  0813                     	;# 
   903  0814                     	;# 
   904  081A                     	;# 
   905  081B                     	;# 
   906  081C                     	;# 
   907  081D                     	;# 
   908  081E                     	;# 
   909  081F                     	;# 
   910  088C                     	;# 
   911  088D                     	;# 
   912  088E                     	;# 
   913  088F                     	;# 
   914  0890                     	;# 
   915  0891                     	;# 
   916  0892                     	;# 
   917  0893                     	;# 
   918  0895                     	;# 
   919  0896                     	;# 
   920  0897                     	;# 
   921  0898                     	;# 
   922  0899                     	;# 
   923  089A                     	;# 
   924  089B                     	;# 
   925  090C                     	;# 
   926  090E                     	;# 
   927  090F                     	;# 
   928  091F                     	;# 
   929  091F                     	;# 
   930  098F                     	;# 
   931  098F                     	;# 
   932  0990                     	;# 
   933  0991                     	;# 
   934  0992                     	;# 
   935  0993                     	;# 
   936  0994                     	;# 
   937  0995                     	;# 
   938  0996                     	;# 
   939  0997                     	;# 
   940  0E0F                     	;# 
   941  0E10                     	;# 
   942  0E11                     	;# 
   943  0E12                     	;# 
   944  0E13                     	;# 
   945  0E14                     	;# 
   946  0E15                     	;# 
   947  0E16                     	;# 
   948  0E17                     	;# 
   949  0E18                     	;# 
   950  0E19                     	;# 
   951  0E1A                     	;# 
   952  0E1B                     	;# 
   953  0E1C                     	;# 
   954  0E1D                     	;# 
   955  0E1E                     	;# 
   956  0E1F                     	;# 
   957  0E20                     	;# 
   958  0E21                     	;# 
   959  0E22                     	;# 
   960  0E23                     	;# 
   961  0E24                     	;# 
   962  0E25                     	;# 
   963  0E26                     	;# 
   964  0E27                     	;# 
   965  0E28                     	;# 
   966  0E29                     	;# 
   967  0E2A                     	;# 
   968  0E2B                     	;# 
   969  0E2C                     	;# 
   970  0E2D                     	;# 
   971  0E2E                     	;# 
   972  0E2F                     	;# 
   973  0E30                     	;# 
   974  0E31                     	;# 
   975  0E32                     	;# 
   976  0E33                     	;# 
   977  0E34                     	;# 
   978  0E35                     	;# 
   979  0E36                     	;# 
   980  0E37                     	;# 
   981  0E8F                     	;# 
   982  0E90                     	;# 
   983  0E91                     	;# 
   984  0E92                     	;# 
   985  0E93                     	;# 
   986  0E94                     	;# 
   987  0E95                     	;# 
   988  0E96                     	;# 
   989  0E97                     	;# 
   990  0E9C                     	;# 
   991  0E9D                     	;# 
   992  0E9E                     	;# 
   993  0EA1                     	;# 
   994  0EA2                     	;# 
   995  0EA3                     	;# 
   996  0EA4                     	;# 
   997  0EA5                     	;# 
   998  0EA9                     	;# 
   999  0EAA                     	;# 
  1000  0EAB                     	;# 
  1001  0EAC                     	;# 
  1002  0EB1                     	;# 
  1003  0EB2                     	;# 
  1004  0EB3                     	;# 
  1005  0EB8                     	;# 
  1006  0EB9                     	;# 
  1007  0EBA                     	;# 
  1008  0EBB                     	;# 
  1009  0EBC                     	;# 
  1010  0EBD                     	;# 
  1011  0EBE                     	;# 
  1012  0EC3                     	;# 
  1013  0EC5                     	;# 
  1014  0EC6                     	;# 
  1015  0EC7                     	;# 
  1016  0EC8                     	;# 
  1017  0EC9                     	;# 
  1018  0ECA                     	;# 
  1019  0ECB                     	;# 
  1020  0ECC                     	;# 
  1021  0F10                     	;# 
  1022  0F11                     	;# 
  1023  0F12                     	;# 
  1024  0F13                     	;# 
  1025  0F14                     	;# 
  1026  0F15                     	;# 
  1027  0F16                     	;# 
  1028  0F17                     	;# 
  1029  0F18                     	;# 
  1030  0F19                     	;# 
  1031  0F1A                     	;# 
  1032  0F1B                     	;# 
  1033  0F1C                     	;# 
  1034  0F1D                     	;# 
  1035  0F1E                     	;# 
  1036  0F1F                     	;# 
  1037  0F20                     	;# 
  1038  0F21                     	;# 
  1039  0F22                     	;# 
  1040  0F23                     	;# 
  1041  0F24                     	;# 
  1042  0F25                     	;# 
  1043  0F26                     	;# 
  1044  0F27                     	;# 
  1045  0F38                     	;# 
  1046  0F39                     	;# 
  1047  0F3A                     	;# 
  1048  0F3B                     	;# 
  1049  0F3C                     	;# 
  1050  0F3D                     	;# 
  1051  0F3E                     	;# 
  1052  0F3F                     	;# 
  1053  0F40                     	;# 
  1054  0F41                     	;# 
  1055  0F43                     	;# 
  1056  0F44                     	;# 
  1057  0F45                     	;# 
  1058  0F46                     	;# 
  1059  0F47                     	;# 
  1060  0F48                     	;# 
  1061  0F49                     	;# 
  1062  0F4A                     	;# 
  1063  0F4B                     	;# 
  1064  0F4C                     	;# 
  1065  0F4E                     	;# 
  1066  0F4F                     	;# 
  1067  0F50                     	;# 
  1068  0F51                     	;# 
  1069  0F52                     	;# 
  1070  0F53                     	;# 
  1071  0F54                     	;# 
  1072  0F55                     	;# 
  1073  0F56                     	;# 
  1074  0F57                     	;# 
  1075  0F65                     	;# 
  1076  0F68                     	;# 
  1077  0F69                     	;# 
  1078  0F6A                     	;# 
  1079  0F6B                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0010                     	;# 
  1107  0011                     	;# 
  1108  0012                     	;# 
  1109  0013                     	;# 
  1110  0016                     	;# 
  1111  0017                     	;# 
  1112  0018                     	;# 
  1113  001C                     	;# 
  1114  001C                     	;# 
  1115  001D                     	;# 
  1116  001D                     	;# 
  1117  001E                     	;# 
  1118  001F                     	;# 
  1119  008C                     	;# 
  1120  008C                     	;# 
  1121  008D                     	;# 
  1122  008E                     	;# 
  1123  008E                     	;# 
  1124  008F                     	;# 
  1125  0090                     	;# 
  1126  0090                     	;# 
  1127  0091                     	;# 
  1128  0093                     	;# 
  1129  0094                     	;# 
  1130  0095                     	;# 
  1131  0096                     	;# 
  1132  0097                     	;# 
  1133  0098                     	;# 
  1134  0099                     	;# 
  1135  009A                     	;# 
  1136  009B                     	;# 
  1137  009C                     	;# 
  1138  009D                     	;# 
  1139  009E                     	;# 
  1140  010C                     	;# 
  1141  010D                     	;# 
  1142  010E                     	;# 
  1143  010E                     	;# 
  1144  010F                     	;# 
  1145  0110                     	;# 
  1146  0110                     	;# 
  1147  0111                     	;# 
  1148  0112                     	;# 
  1149  0112                     	;# 
  1150  0113                     	;# 
  1151  0114                     	;# 
  1152  0114                     	;# 
  1153  0115                     	;# 
  1154  0116                     	;# 
  1155  0116                     	;# 
  1156  0117                     	;# 
  1157  0119                     	;# 
  1158  0119                     	;# 
  1159  0119                     	;# 
  1160  011A                     	;# 
  1161  011A                     	;# 
  1162  011A                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011B                     	;# 
  1167  011B                     	;# 
  1168  011C                     	;# 
  1169  011C                     	;# 
  1170  011C                     	;# 
  1171  011D                     	;# 
  1172  011D                     	;# 
  1173  011D                     	;# 
  1174  011E                     	;# 
  1175  011E                     	;# 
  1176  011E                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  011F                     	;# 
  1181  011F                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184  018E                     	;# 
  1185  018F                     	;# 
  1186  0190                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0196                     	;# 
  1190  0197                     	;# 
  1191  0198                     	;# 
  1192  0199                     	;# 
  1193  019A                     	;# 
  1194  019B                     	;# 
  1195  019C                     	;# 
  1196  020C                     	;# 
  1197  020C                     	;# 
  1198  020D                     	;# 
  1199  020E                     	;# 
  1200  020F                     	;# 
  1201  020F                     	;# 
  1202  0210                     	;# 
  1203  0210                     	;# 
  1204  0211                     	;# 
  1205  0211                     	;# 
  1206  0212                     	;# 
  1207  0212                     	;# 
  1208  0213                     	;# 
  1209  0214                     	;# 
  1210  0215                     	;# 
  1211  0215                     	;# 
  1212  0216                     	;# 
  1213  0216                     	;# 
  1214  0217                     	;# 
  1215  0217                     	;# 
  1216  0218                     	;# 
  1217  0218                     	;# 
  1218  0219                     	;# 
  1219  021A                     	;# 
  1220  021B                     	;# 
  1221  021B                     	;# 
  1222  021C                     	;# 
  1223  021C                     	;# 
  1224  021D                     	;# 
  1225  021D                     	;# 
  1226  021E                     	;# 
  1227  021F                     	;# 
  1228  028C                     	;# 
  1229  028C                     	;# 
  1230  028D                     	;# 
  1231  028D                     	;# 
  1232  028E                     	;# 
  1233  028F                     	;# 
  1234  0290                     	;# 
  1235  0290                     	;# 
  1236  0291                     	;# 
  1237  0292                     	;# 
  1238  0292                     	;# 
  1239  0293                     	;# 
  1240  0293                     	;# 
  1241  0294                     	;# 
  1242  0295                     	;# 
  1243  0296                     	;# 
  1244  0296                     	;# 
  1245  0297                     	;# 
  1246  0298                     	;# 
  1247  0298                     	;# 
  1248  0299                     	;# 
  1249  0299                     	;# 
  1250  029A                     	;# 
  1251  029B                     	;# 
  1252  029C                     	;# 
  1253  029C                     	;# 
  1254  029D                     	;# 
  1255  030C                     	;# 
  1256  030C                     	;# 
  1257  030D                     	;# 
  1258  030E                     	;# 
  1259  030F                     	;# 
  1260  0310                     	;# 
  1261  0310                     	;# 
  1262  0311                     	;# 
  1263  0312                     	;# 
  1264  0313                     	;# 
  1265  0314                     	;# 
  1266  0314                     	;# 
  1267  0315                     	;# 
  1268  0316                     	;# 
  1269  0317                     	;# 
  1270  0318                     	;# 
  1271  0318                     	;# 
  1272  0319                     	;# 
  1273  031A                     	;# 
  1274  031B                     	;# 
  1275  031C                     	;# 
  1276  031C                     	;# 
  1277  031D                     	;# 
  1278  031E                     	;# 
  1279  031F                     	;# 
  1280  038C                     	;# 
  1281  038D                     	;# 
  1282  038E                     	;# 
  1283  0390                     	;# 
  1284  0391                     	;# 
  1285  0392                     	;# 
  1286  040C                     	;# 
  1287  040D                     	;# 
  1288  040E                     	;# 
  1289  040F                     	;# 
  1290  0410                     	;# 
  1291  0411                     	;# 
  1292  0416                     	;# 
  1293  0416                     	;# 
  1294  0417                     	;# 
  1295  0418                     	;# 
  1296  0418                     	;# 
  1297  0419                     	;# 
  1298  041A                     	;# 
  1299  041A                     	;# 
  1300  041B                     	;# 
  1301  041C                     	;# 
  1302  041C                     	;# 
  1303  041D                     	;# 
  1304  041E                     	;# 
  1305  041F                     	;# 
  1306  048C                     	;# 
  1307  048C                     	;# 
  1308  048D                     	;# 
  1309  048E                     	;# 
  1310  048F                     	;# 
  1311  048F                     	;# 
  1312  0490                     	;# 
  1313  0491                     	;# 
  1314  0492                     	;# 
  1315  0492                     	;# 
  1316  0493                     	;# 
  1317  0494                     	;# 
  1318  0495                     	;# 
  1319  0495                     	;# 
  1320  0496                     	;# 
  1321  0497                     	;# 
  1322  0498                     	;# 
  1323  0499                     	;# 
  1324  049A                     	;# 
  1325  049B                     	;# 
  1326  049C                     	;# 
  1327  049D                     	;# 
  1328  050C                     	;# 
  1329  050C                     	;# 
  1330  050D                     	;# 
  1331  050E                     	;# 
  1332  050F                     	;# 
  1333  050F                     	;# 
  1334  0510                     	;# 
  1335  0511                     	;# 
  1336  0512                     	;# 
  1337  0512                     	;# 
  1338  0513                     	;# 
  1339  0514                     	;# 
  1340  0515                     	;# 
  1341  0515                     	;# 
  1342  0516                     	;# 
  1343  0517                     	;# 
  1344  0518                     	;# 
  1345  0519                     	;# 
  1346  051A                     	;# 
  1347  051B                     	;# 
  1348  051C                     	;# 
  1349  051D                     	;# 
  1350  058C                     	;# 
  1351  058C                     	;# 
  1352  058D                     	;# 
  1353  058E                     	;# 
  1354  058F                     	;# 
  1355  058F                     	;# 
  1356  0590                     	;# 
  1357  0591                     	;# 
  1358  0592                     	;# 
  1359  0593                     	;# 
  1360  060C                     	;# 
  1361  060D                     	;# 
  1362  060E                     	;# 
  1363  060F                     	;# 
  1364  0610                     	;# 
  1365  0611                     	;# 
  1366  0612                     	;# 
  1367  0613                     	;# 
  1368  0614                     	;# 
  1369  0616                     	;# 
  1370  0617                     	;# 
  1371  0618                     	;# 
  1372  0619                     	;# 
  1373  061A                     	;# 
  1374  061B                     	;# 
  1375  061C                     	;# 
  1376  061D                     	;# 
  1377  061E                     	;# 
  1378  068C                     	;# 
  1379  068D                     	;# 
  1380  068E                     	;# 
  1381  068F                     	;# 
  1382  0690                     	;# 
  1383  0691                     	;# 
  1384  0692                     	;# 
  1385  0693                     	;# 
  1386  0694                     	;# 
  1387  070C                     	;# 
  1388  070D                     	;# 
  1389  070E                     	;# 
  1390  070F                     	;# 
  1391  0710                     	;# 
  1392  0711                     	;# 
  1393  0712                     	;# 
  1394  0713                     	;# 
  1395  0714                     	;# 
  1396  0716                     	;# 
  1397  0717                     	;# 
  1398  0718                     	;# 
  1399  0719                     	;# 
  1400  071A                     	;# 
  1401  071B                     	;# 
  1402  071C                     	;# 
  1403  071D                     	;# 
  1404  071E                     	;# 
  1405  0796                     	;# 
  1406  0797                     	;# 
  1407  0798                     	;# 
  1408  0799                     	;# 
  1409  079A                     	;# 
  1410  079B                     	;# 
  1411  080C                     	;# 
  1412  080D                     	;# 
  1413  080E                     	;# 
  1414  080F                     	;# 
  1415  0810                     	;# 
  1416  0811                     	;# 
  1417  0812                     	;# 
  1418  0813                     	;# 
  1419  0814                     	;# 
  1420  081A                     	;# 
  1421  081B                     	;# 
  1422  081C                     	;# 
  1423  081D                     	;# 
  1424  081E                     	;# 
  1425  081F                     	;# 
  1426  088C                     	;# 
  1427  088D                     	;# 
  1428  088E                     	;# 
  1429  088F                     	;# 
  1430  0890                     	;# 
  1431  0891                     	;# 
  1432  0892                     	;# 
  1433  0893                     	;# 
  1434  0895                     	;# 
  1435  0896                     	;# 
  1436  0897                     	;# 
  1437  0898                     	;# 
  1438  0899                     	;# 
  1439  089A                     	;# 
  1440  089B                     	;# 
  1441  090C                     	;# 
  1442  090E                     	;# 
  1443  090F                     	;# 
  1444  091F                     	;# 
  1445  091F                     	;# 
  1446  098F                     	;# 
  1447  098F                     	;# 
  1448  0990                     	;# 
  1449  0991                     	;# 
  1450  0992                     	;# 
  1451  0993                     	;# 
  1452  0994                     	;# 
  1453  0995                     	;# 
  1454  0996                     	;# 
  1455  0997                     	;# 
  1456  0E0F                     	;# 
  1457  0E10                     	;# 
  1458  0E11                     	;# 
  1459  0E12                     	;# 
  1460  0E13                     	;# 
  1461  0E14                     	;# 
  1462  0E15                     	;# 
  1463  0E16                     	;# 
  1464  0E17                     	;# 
  1465  0E18                     	;# 
  1466  0E19                     	;# 
  1467  0E1A                     	;# 
  1468  0E1B                     	;# 
  1469  0E1C                     	;# 
  1470  0E1D                     	;# 
  1471  0E1E                     	;# 
  1472  0E1F                     	;# 
  1473  0E20                     	;# 
  1474  0E21                     	;# 
  1475  0E22                     	;# 
  1476  0E23                     	;# 
  1477  0E24                     	;# 
  1478  0E25                     	;# 
  1479  0E26                     	;# 
  1480  0E27                     	;# 
  1481  0E28                     	;# 
  1482  0E29                     	;# 
  1483  0E2A                     	;# 
  1484  0E2B                     	;# 
  1485  0E2C                     	;# 
  1486  0E2D                     	;# 
  1487  0E2E                     	;# 
  1488  0E2F                     	;# 
  1489  0E30                     	;# 
  1490  0E31                     	;# 
  1491  0E32                     	;# 
  1492  0E33                     	;# 
  1493  0E34                     	;# 
  1494  0E35                     	;# 
  1495  0E36                     	;# 
  1496  0E37                     	;# 
  1497  0E8F                     	;# 
  1498  0E90                     	;# 
  1499  0E91                     	;# 
  1500  0E92                     	;# 
  1501  0E93                     	;# 
  1502  0E94                     	;# 
  1503  0E95                     	;# 
  1504  0E96                     	;# 
  1505  0E97                     	;# 
  1506  0E9C                     	;# 
  1507  0E9D                     	;# 
  1508  0E9E                     	;# 
  1509  0EA1                     	;# 
  1510  0EA2                     	;# 
  1511  0EA3                     	;# 
  1512  0EA4                     	;# 
  1513  0EA5                     	;# 
  1514  0EA9                     	;# 
  1515  0EAA                     	;# 
  1516  0EAB                     	;# 
  1517  0EAC                     	;# 
  1518  0EB1                     	;# 
  1519  0EB2                     	;# 
  1520  0EB3                     	;# 
  1521  0EB8                     	;# 
  1522  0EB9                     	;# 
  1523  0EBA                     	;# 
  1524  0EBB                     	;# 
  1525  0EBC                     	;# 
  1526  0EBD                     	;# 
  1527  0EBE                     	;# 
  1528  0EC3                     	;# 
  1529  0EC5                     	;# 
  1530  0EC6                     	;# 
  1531  0EC7                     	;# 
  1532  0EC8                     	;# 
  1533  0EC9                     	;# 
  1534  0ECA                     	;# 
  1535  0ECB                     	;# 
  1536  0ECC                     	;# 
  1537  0F10                     	;# 
  1538  0F11                     	;# 
  1539  0F12                     	;# 
  1540  0F13                     	;# 
  1541  0F14                     	;# 
  1542  0F15                     	;# 
  1543  0F16                     	;# 
  1544  0F17                     	;# 
  1545  0F18                     	;# 
  1546  0F19                     	;# 
  1547  0F1A                     	;# 
  1548  0F1B                     	;# 
  1549  0F1C                     	;# 
  1550  0F1D                     	;# 
  1551  0F1E                     	;# 
  1552  0F1F                     	;# 
  1553  0F20                     	;# 
  1554  0F21                     	;# 
  1555  0F22                     	;# 
  1556  0F23                     	;# 
  1557  0F24                     	;# 
  1558  0F25                     	;# 
  1559  0F26                     	;# 
  1560  0F27                     	;# 
  1561  0F38                     	;# 
  1562  0F39                     	;# 
  1563  0F3A                     	;# 
  1564  0F3B                     	;# 
  1565  0F3C                     	;# 
  1566  0F3D                     	;# 
  1567  0F3E                     	;# 
  1568  0F3F                     	;# 
  1569  0F40                     	;# 
  1570  0F41                     	;# 
  1571  0F43                     	;# 
  1572  0F44                     	;# 
  1573  0F45                     	;# 
  1574  0F46                     	;# 
  1575  0F47                     	;# 
  1576  0F48                     	;# 
  1577  0F49                     	;# 
  1578  0F4A                     	;# 
  1579  0F4B                     	;# 
  1580  0F4C                     	;# 
  1581  0F4E                     	;# 
  1582  0F4F                     	;# 
  1583  0F50                     	;# 
  1584  0F51                     	;# 
  1585  0F52                     	;# 
  1586  0F53                     	;# 
  1587  0F54                     	;# 
  1588  0F55                     	;# 
  1589  0F56                     	;# 
  1590  0F57                     	;# 
  1591  0F65                     	;# 
  1592  0F68                     	;# 
  1593  0F69                     	;# 
  1594  0F6A                     	;# 
  1595  0F6B                     	;# 
  1596  0FE4                     	;# 
  1597  0FE5                     	;# 
  1598  0FE6                     	;# 
  1599  0FE7                     	;# 
  1600  0FE8                     	;# 
  1601  0FE9                     	;# 
  1602  0FEA                     	;# 
  1603  0FEB                     	;# 
  1604  0FED                     	;# 
  1605  0FEE                     	;# 
  1606  0FEF                     	;# 
  1607                           
  1608                           	psect	idataBANK0
  1609  0221                     __pidataBANK0:	
  1610                           
  1611                           ;initializer for _char_lookup
  1612  0221  34BE               	retlw	190
  1613  0222  3482               	retlw	130
  1614  0223  3437               	retlw	55
  1615  0224  34A7               	retlw	167
  1616  0225  348B               	retlw	139
  1617  0226  34AD               	retlw	173
  1618  0227  34BD               	retlw	189
  1619  0228  3486               	retlw	134
  1620  0229  34BF               	retlw	191
  1621  022A  34AF               	retlw	175
  1622  0018                     _LATC	set	24
  1623  0017                     _LATBbits	set	23
  1624  000B                     _INTCONbits	set	11
  1625  000D                     _PORTBbits	set	13
  1626  0016                     _LATAbits	set	22
  1627  000C                     _PORTAbits	set	12
  1628  0012                     _TRISBbits	set	18
  1629  0013                     _TRISCbits	set	19
  1630  0011                     _TRISAbits	set	17
  1631  028D                     _PR2	set	653
  1632  028E                     _T2CONbits	set	654
  1633  0290                     _T2CLKCONbits	set	656
  1634  0716                     _PIE0bits	set	1814
  1635  071A                     _PIE4bits	set	1818
  1636  0710                     _PIR4bits	set	1808
  1637  070C                     _PIR0bits	set	1804
  1638  0F49                     _IOCBNbits	set	3913
  1639  0F48                     _IOCBPbits	set	3912
  1640  0F4A                     _IOCBFbits	set	3914
  1641  0F43                     _ANSELBbits	set	3907
  1642  0F38                     _ANSELAbits	set	3896
  1643                           
  1644                           ; #config settings
  1645  0000                     
  1646                           	psect	cinit
  1647  0023                     start_initialization:	
  1648  0023                     __initialization:	
  1649                           
  1650                           ; Initialize objects allocated to BANK0
  1651  0023  3021               	movlw	low __pidataBANK0
  1652  0024  0084               	movwf	4
  1653  0025  3082               	movlw	(high __pidataBANK0)| (0+128)
  1654  0026  0085               	movwf	5
  1655  0027  3020               	movlw	low __pdataBANK0
  1656  0028  0086               	movwf	6
  1657  0029  3000               	movlw	high __pdataBANK0
  1658  002A  0087               	movwf	7
  1659  002B  300A               	movlw	10
  1660  002C  3182  2235         	fcall	init_ram
  1661                           
  1662                           ; Clear objects allocated to COMMON
  1663  002E  01F9               	clrf	__pbssCOMMON& (0+127)
  1664                           
  1665                           ; Clear objects allocated to BANK0
  1666  002F  01B4               	clrf	__pbssBANK0& (0+127)
  1667  0030  01B5               	clrf	(__pbssBANK0+1)& (0+127)
  1668  0031  01B6               	clrf	(__pbssBANK0+2)& (0+127)
  1669  0032  01B7               	clrf	(__pbssBANK0+3)& (0+127)
  1670  0033  01B8               	clrf	(__pbssBANK0+4)& (0+127)
  1671  0034  01B9               	clrf	(__pbssBANK0+5)& (0+127)
  1672  0035  01BA               	clrf	(__pbssBANK0+6)& (0+127)
  1673  0036  01BB               	clrf	(__pbssBANK0+7)& (0+127)
  1674  0037                     end_of_initialization:	
  1675                           ;End of C runtime variable initialization code
  1676                           
  1677  0037                     __end_of__initialization:	
  1678  0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1679  0038  0020               	movlb	0
  1680  0039  3180  28F1         	ljmp	_main	;jump to C main() function
  1681                           
  1682                           	psect	bssCOMMON
  1683  0079                     __pbssCOMMON:	
  1684  0079                     _segment:	
  1685  0079                     	ds	1
  1686                           
  1687                           	psect	bssBANK0
  1688  0034                     __pbssBANK0:	
  1689  0034                     _characters:	
  1690  0034                     	ds	4
  1691  0038                     _os:	
  1692  0038                     	ds	4
  1693                           
  1694                           	psect	dataBANK0
  1695  0020                     __pdataBANK0:	
  1696  0020                     _char_lookup:	
  1697  0020                     	ds	10
  1698                           
  1699                           	psect	inittext
  1700  0235                     init_ram:	
  1701  0235  00FE               	movwf	126
  1702  0236                     initloop:	
  1703  0236  0012               	moviw fsr0++
  1704  0237  001E               	movwi fsr1++
  1705  0238  0BFE               	decfsz	126,f
  1706  0239  2A36               	goto	initloop
  1707  023A  3400               	retlw	0
  1708                           
  1709                           	psect	cstackCOMMON
  1710  0070                     __pcstackCOMMON:	
  1711  0070                     ?_system_init:	
  1712  0070                     ?_handle_relays:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ?_encoder_isr:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ??_encoder_isr:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     ?_display_update:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0070                     ??_display_update:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     ?_display_init:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     ?_encoder_init:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0070                     ?_main:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0070                     ?__isr:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739                           
  1740                           ; 1 bytes @ 0x0
  1741  0070                     	ds	2
  1742  0072                     ??__isr:	
  1743                           
  1744                           ; 1 bytes @ 0x2
  1745  0072                     	ds	2
  1746  0074                     ??_handle_relays:	
  1747  0074                     ??_display_init:	
  1748                           ; 1 bytes @ 0x4
  1749                           
  1750  0074                     ??_encoder_init:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753  0074                     ?___lwdiv:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756  0074                     ?___lwmod:	
  1757                           ; 2 bytes @ 0x4
  1758                           
  1759  0074                     ___lwdiv@divisor:	
  1760                           ; 2 bytes @ 0x4
  1761                           
  1762  0074                     ___lwmod@divisor:	
  1763                           ; 2 bytes @ 0x4
  1764                           
  1765                           
  1766                           ; 2 bytes @ 0x4
  1767  0074                     	ds	1
  1768  0075                     ??_system_init:	
  1769                           
  1770                           ; 1 bytes @ 0x5
  1771  0075                     	ds	1
  1772  0076                     ___lwdiv@dividend:	
  1773  0076                     ___lwmod@dividend:	
  1774                           ; 2 bytes @ 0x6
  1775                           
  1776                           
  1777                           ; 2 bytes @ 0x6
  1778  0076                     	ds	2
  1779  0078                     ??___lwdiv:	
  1780  0078                     ??___lwmod:	
  1781                           ; 1 bytes @ 0x8
  1782                           
  1783                           
  1784                           ; 1 bytes @ 0x8
  1785  0078                     	ds	1
  1786                           
  1787                           	psect	cstackBANK0
  1788  002A                     __pcstackBANK0:	
  1789  002A                     ___lwmod@counter:	
  1790  002A                     ___lwdiv@quotient:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793                           
  1794                           ; 2 bytes @ 0x0
  1795  002A                     	ds	2
  1796  002C                     ___lwdiv@counter:	
  1797                           
  1798                           ; 1 bytes @ 0x2
  1799  002C                     	ds	1
  1800  002D                     ?_display_set:	
  1801  002D                     display_set@value:	
  1802                           ; 1 bytes @ 0x3
  1803                           
  1804                           
  1805                           ; 2 bytes @ 0x3
  1806  002D                     	ds	2
  1807  002F                     ??_display_set:	
  1808                           
  1809                           ; 1 bytes @ 0x5
  1810  002F                     	ds	1
  1811  0030                     ??_main:	
  1812                           
  1813                           ; 1 bytes @ 0x6
  1814  0030                     	ds	2
  1815  0032                     main@cntr:	
  1816                           
  1817                           ; 2 bytes @ 0x8
  1818  0032                     	ds	2
  1819                           
  1820                           	psect	maintext
  1821  00F1                     __pmaintext:	
  1822 ;;
  1823 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1824 ;;
  1825 ;; *************** function _main *****************
  1826 ;; Defined at:
  1827 ;;		line 25 in file "main.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  cntr            2    8[BANK0 ] unsigned int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : B1F/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;Total ram usage:        4 bytes
  1846 ;; Hardware stack levels required when called:    4
  1847 ;; This function calls:
  1848 ;;		_display_set
  1849 ;;		_handle_relays
  1850 ;;		_system_init
  1851 ;; This function is called by:
  1852 ;;		Startup code after reset
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _main
  1858  00F1                     _main:	
  1859                           
  1860                           ;main.c: 27: uint16_t cntr;
  1861                           ;main.c: 28: system_init();
  1862                           
  1863                           ;incstack = 0
  1864                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1865  00F1  3181  2125  3180   	fcall	_system_init
  1866                           
  1867                           ;main.c: 29: os.encoder = 5000;
  1868  00F4  3013               	movlw	19
  1869  00F5  0020               	movlb	0	; select bank0
  1870  00F6  00BB               	movwf	_os+3	;volatile
  1871  00F7  3088               	movlw	136
  1872  00F8  00BA               	movwf	_os+2	;volatile
  1873  00F9                     l1087:	
  1874                           ;main.c: 31: while(1)
  1875                           
  1876                           
  1877                           ;main.c: 32: {
  1878                           ;main.c: 33: if(!os.done)
  1879  00F9  0839               	movf	_os+1,w	;volatile
  1880  00FA  1D03               	btfss	3,2
  1881  00FB  28F9               	goto	l1087
  1882                           
  1883                           ;main.c: 34: {
  1884                           ;main.c: 35: handle_relays();
  1885  00FC  3182  2202  3180   	fcall	_handle_relays
  1886                           
  1887                           ;main.c: 38: switch(os.timeSlot&0b00001111)
  1888  00FF  290D               	goto	l1097
  1889  0100                     l1091:	
  1890                           ;main.c: 39: {
  1891                           ;main.c: 40: case 0:
  1892                           
  1893                           
  1894                           ;main.c: 41: ++cntr;
  1895  0100  3001               	movlw	1
  1896  0101  0020               	movlb	0	; select bank0
  1897  0102  07B2               	addwf	main@cntr,f
  1898  0103  3000               	movlw	0
  1899  0104  3DB3               	addwfc	main@cntr+1,f
  1900                           
  1901                           ;main.c: 43: display_set((uint16_t) os.encoder);
  1902  0105  083B               	movf	_os+3,w	;volatile
  1903  0106  00AE               	movwf	display_set@value+1
  1904  0107  083A               	movf	_os+2,w	;volatile
  1905  0108  00AD               	movwf	display_set@value
  1906  0109  3180  203B  3180   	fcall	_display_set
  1907                           
  1908                           ;main.c: 47: }
  1909                           
  1910                           ;main.c: 46: break;
  1911                           
  1912                           ;main.c: 45: case 8:
  1913                           
  1914                           ;main.c: 44: break;
  1915  010C  291F               	goto	l1099
  1916  010D                     l1097:	
  1917  010D  0020               	movlb	0	; select bank0
  1918  010E  0838               	movf	_os,w	;volatile
  1919  010F  390F               	andlw	15
  1920  0110  00B0               	movwf	??_main
  1921  0111  01B1               	clrf	??_main+1
  1922                           
  1923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1924                           ; Switch size 1, requested type "space"
  1925                           ; Number of cases is 1, Range of values is 0 to 0
  1926                           ; switch strategies available:
  1927                           ; Name         Instructions Cycles
  1928                           ; simple_byte            4     3 (average)
  1929                           ; direct_byte            8     6 (fixed)
  1930                           ; jumptable            260     6 (fixed)
  1931                           ;	Chosen strategy is simple_byte
  1932  0112  0831               	movf	??_main+1,w
  1933  0113  3A00               	xorlw	0	; case 0
  1934  0114  1903               	skipnz
  1935  0115  2917               	goto	l1145
  1936  0116  291F               	goto	l1099
  1937  0117                     l1145:	
  1938                           
  1939                           ; Switch size 1, requested type "space"
  1940                           ; Number of cases is 2, Range of values is 0 to 8
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte            7     4 (average)
  1944                           ; direct_byte           24     6 (fixed)
  1945                           ; jumptable            260     6 (fixed)
  1946                           ;	Chosen strategy is simple_byte
  1947  0117  0830               	movf	??_main,w
  1948  0118  3A00               	xorlw	0	; case 0
  1949  0119  1903               	skipnz
  1950  011A  2900               	goto	l1091
  1951  011B  3A08               	xorlw	8	; case 8
  1952  011C  1903               	skipnz
  1953  011D  291F               	goto	l1099
  1954  011E  291F               	goto	l1099
  1955  011F                     l1099:	
  1956                           
  1957                           ;main.c: 48: os.done = 1;
  1958  011F  3001               	movlw	1
  1959  0120  0020               	movlb	0	; select bank0
  1960  0121  00B0               	movwf	??_main
  1961  0122  0830               	movf	??_main,w
  1962  0123  00B9               	movwf	_os+1	;volatile
  1963  0124  28F9               	goto	l1087
  1964  0125                     __end_of_main:	
  1965                           
  1966                           	psect	text1
  1967  0125                     __ptext1:	
  1968 ;; *************** function _system_init *****************
  1969 ;; Defined at:
  1970 ;;		line 76 in file "main.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    3
  1991 ;; This function calls:
  1992 ;;		_display_init
  1993 ;;		_encoder_init
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _system_init
  2001  0125                     _system_init:	
  2002                           
  2003                           ;main.c: 78: TRISAbits.TRISA1 = 0;
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _system_init: [wreg+status,2+status,0+pclath+cstack]
  2007  0125  0020               	movlb	0	; select bank0
  2008  0126  1091               	bcf	17,1	;volatile
  2009                           
  2010                           ;main.c: 79: TRISAbits.TRISA2 = 0;
  2011  0127  1111               	bcf	17,2	;volatile
  2012                           
  2013                           ;main.c: 80: TRISAbits.TRISA0 = 0;
  2014  0128  1011               	bcf	17,0	;volatile
  2015                           
  2016                           ;main.c: 82: TRISAbits.TRISA3 = 1;
  2017  0129  1591               	bsf	17,3	;volatile
  2018                           
  2019                           ;main.c: 83: ANSELAbits.ANSA3 = 0;
  2020  012A  003E               	movlb	30	; select bank30
  2021  012B  11B8               	bcf	56,3	;volatile
  2022                           
  2023                           ;main.c: 84: TRISAbits.TRISA4 = 1;
  2024  012C  0020               	movlb	0	; select bank0
  2025  012D  1611               	bsf	17,4	;volatile
  2026                           
  2027                           ;main.c: 85: ANSELAbits.ANSA4 = 0;
  2028  012E  003E               	movlb	30	; select bank30
  2029  012F  1238               	bcf	56,4	;volatile
  2030                           
  2031                           ;main.c: 86: TRISAbits.TRISA5 = 1;
  2032  0130  0020               	movlb	0	; select bank0
  2033  0131  1691               	bsf	17,5	;volatile
  2034                           
  2035                           ;main.c: 87: ANSELAbits.ANSA5 = 0;
  2036  0132  003E               	movlb	30	; select bank30
  2037  0133  12B8               	bcf	56,5	;volatile
  2038                           
  2039                           ;main.c: 89: TRISCbits.TRISC2 = 0;
  2040  0134  0020               	movlb	0	; select bank0
  2041  0135  1113               	bcf	19,2	;volatile
  2042                           
  2043                           ;main.c: 90: TRISCbits.TRISC1 = 0;
  2044  0136  1093               	bcf	19,1	;volatile
  2045                           
  2046                           ;main.c: 91: TRISCbits.TRISC7 = 0;
  2047  0137  1393               	bcf	19,7	;volatile
  2048                           
  2049                           ;main.c: 92: TRISCbits.TRISC5 = 0;
  2050  0138  1293               	bcf	19,5	;volatile
  2051                           
  2052                           ;main.c: 93: TRISCbits.TRISC4 = 0;
  2053  0139  1213               	bcf	19,4	;volatile
  2054                           
  2055                           ;main.c: 94: TRISCbits.TRISC3 = 0;
  2056  013A  1193               	bcf	19,3	;volatile
  2057                           
  2058                           ;main.c: 95: TRISCbits.TRISC0 = 0;
  2059  013B  1013               	bcf	19,0	;volatile
  2060                           
  2061                           ;main.c: 96: TRISCbits.TRISC6 = 0;
  2062  013C  1313               	bcf	19,6	;volatile
  2063                           
  2064                           ;main.c: 97: TRISBbits.TRISB7 = 0;
  2065  013D  1392               	bcf	18,7	;volatile
  2066                           
  2067                           ;main.c: 98: TRISBbits.TRISB6 = 0;
  2068  013E  1312               	bcf	18,6	;volatile
  2069                           
  2070                           ;main.c: 99: TRISBbits.TRISB5 = 0;
  2071  013F  1292               	bcf	18,5	;volatile
  2072                           
  2073                           ;main.c: 100: TRISBbits.TRISB4 = 0;
  2074  0140  1212               	bcf	18,4	;volatile
  2075                           
  2076                           ;main.c: 102: TRISBbits.TRISB0 = 1;
  2077  0141  1412               	bsf	18,0	;volatile
  2078                           
  2079                           ;main.c: 103: ANSELBbits.ANSB0 = 0;
  2080  0142  003E               	movlb	30	; select bank30
  2081  0143  1043               	bcf	67,0	;volatile
  2082                           
  2083                           ;main.c: 104: TRISBbits.TRISB3 = 1;
  2084  0144  0020               	movlb	0	; select bank0
  2085  0145  1592               	bsf	18,3	;volatile
  2086                           
  2087                           ;main.c: 105: ANSELBbits.ANSB3 = 0;
  2088  0146  003E               	movlb	30	; select bank30
  2089  0147  11C3               	bcf	67,3	;volatile
  2090                           
  2091                           ;main.c: 106: TRISBbits.TRISB2 = 1;
  2092  0148  0020               	movlb	0	; select bank0
  2093  0149  1512               	bsf	18,2	;volatile
  2094                           
  2095                           ;main.c: 107: ANSELBbits.ANSB2 = 0;
  2096  014A  003E               	movlb	30	; select bank30
  2097  014B  1143               	bcf	67,2	;volatile
  2098                           
  2099                           ;main.c: 108: TRISBbits.TRISB1 = 1;
  2100  014C  0020               	movlb	0	; select bank0
  2101  014D  1492               	bsf	18,1	;volatile
  2102                           
  2103                           ;main.c: 109: ANSELBbits.ANSB1 = 0;
  2104  014E  003E               	movlb	30	; select bank30
  2105  014F  10C3               	bcf	67,1	;volatile
  2106                           
  2107                           ;main.c: 111: display_init();
  2108  0150  3181  21DE  3181   	fcall	_display_init
  2109                           
  2110                           ;main.c: 112: encoder_init();
  2111  0153  3182  222B         	fcall	_encoder_init
  2112  0155  0008               	return
  2113  0156                     __end_of_system_init:	
  2114                           
  2115                           	psect	text2
  2116  022B                     __ptext2:	
  2117 ;; *************** function _encoder_init *****************
  2118 ;; Defined at:
  2119 ;;		line 5 in file "encoder.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		None
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    2
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_system_init
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _encoder_init
  2149  022B                     _encoder_init:	
  2150                           
  2151                           ;encoder.c: 11: PIE0bits.IOCIE = 1;
  2152                           
  2153                           ;incstack = 0
  2154                           ; Regs used in _encoder_init: []
  2155  022B  002E               	movlb	14	; select bank14
  2156  022C  1616               	bsf	22,4	;volatile
  2157                           
  2158                           ;encoder.c: 13: IOCBFbits.IOCBF2 = 0;
  2159  022D  003E               	movlb	30	; select bank30
  2160  022E  114A               	bcf	74,2	;volatile
  2161                           
  2162                           ;encoder.c: 14: IOCBFbits.IOCBF1 = 0;
  2163  022F  10CA               	bcf	74,1	;volatile
  2164                           
  2165                           ;encoder.c: 16: IOCBPbits.IOCBP2 = 1;
  2166  0230  1548               	bsf	72,2	;volatile
  2167                           
  2168                           ;encoder.c: 17: IOCBNbits.IOCBN2 = 1;
  2169  0231  1549               	bsf	73,2	;volatile
  2170                           
  2171                           ;encoder.c: 18: IOCBPbits.IOCBP1 = 1;
  2172  0232  14C8               	bsf	72,1	;volatile
  2173                           
  2174                           ;encoder.c: 19: IOCBNbits.IOCBN1 = 1;
  2175  0233  14C9               	bsf	73,1	;volatile
  2176  0234  0008               	return
  2177  0235                     __end_of_encoder_init:	
  2178                           
  2179                           	psect	text3
  2180  01DE                     __ptext3:	
  2181 ;; *************** function _display_init *****************
  2182 ;; Defined at:
  2183 ;;		line 31 in file "display.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;Total ram usage:        1 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    2
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_system_init
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _display_init
  2213  01DE                     _display_init:	
  2214                           
  2215                           ;display.c: 34: segment = 0;
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _display_init: [wreg+status,2+status,0]
  2219  01DE  01F9               	clrf	_segment
  2220                           
  2221                           ;display.c: 37: characters[0] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b0
      +                          0100000 | 0b10000000);
  2222  01DF  30BE               	movlw	190
  2223  01E0  00F4               	movwf	??_display_init
  2224  01E1  0874               	movf	??_display_init,w
  2225  01E2  0020               	movlb	0	; select bank0
  2226  01E3  00B4               	movwf	_characters
  2227                           
  2228                           ;display.c: 38: characters[1] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b0
      +                          0100000 | 0b10000000);
  2229  01E4  30BE               	movlw	190
  2230  01E5  00F4               	movwf	??_display_init
  2231  01E6  0874               	movf	??_display_init,w
  2232  01E7  00B5               	movwf	_characters+1
  2233                           
  2234                           ;display.c: 39: characters[2] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b0
      +                          0100000 | 0b10000000);
  2235  01E8  30BE               	movlw	190
  2236  01E9  00F4               	movwf	??_display_init
  2237  01EA  0874               	movf	??_display_init,w
  2238  01EB  00B6               	movwf	_characters+2
  2239                           
  2240                           ;display.c: 40: characters[3] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b0
      +                          0100000 | 0b10000000);
  2241  01EC  30BE               	movlw	190
  2242  01ED  00F4               	movwf	??_display_init
  2243  01EE  0874               	movf	??_display_init,w
  2244  01EF  00B7               	movwf	_characters+3
  2245                           
  2246                           ;display.c: 43: T2CLKCONbits.CS = 0b0001;
  2247  01F0  0025               	movlb	5	; select bank5
  2248  01F1  0810               	movf	16,w	;volatile
  2249  01F2  39F0               	andlw	-16
  2250  01F3  3801               	iorlw	1
  2251  01F4  0090               	movwf	16	;volatile
  2252                           
  2253                           ;display.c: 44: T2CONbits.CKPS = 0b111;
  2254  01F5  3070               	movlw	112
  2255  01F6  048E               	iorwf	14,f	;volatile
  2256                           
  2257                           ;display.c: 45: PR2 = 125;
  2258  01F7  307D               	movlw	125
  2259  01F8  008D               	movwf	13	;volatile
  2260                           
  2261                           ;display.c: 46: T2CONbits.OUTPS = 0b0000;
  2262  01F9  30F0               	movlw	-16
  2263  01FA  058E               	andwf	14,f	;volatile
  2264                           
  2265                           ;display.c: 49: INTCONbits.GIE = 1;
  2266  01FB  178B               	bsf	11,7	;volatile
  2267                           
  2268                           ;display.c: 50: INTCONbits.PEIE = 1;
  2269  01FC  170B               	bsf	11,6	;volatile
  2270                           
  2271                           ;display.c: 51: PIE4bits.TMR2IE = 1;
  2272  01FD  002E               	movlb	14	; select bank14
  2273  01FE  149A               	bsf	26,1	;volatile
  2274                           
  2275                           ;display.c: 54: T2CONbits.ON = 1;
  2276  01FF  0025               	movlb	5	; select bank5
  2277  0200  178E               	bsf	14,7	;volatile
  2278  0201  0008               	return
  2279  0202                     __end_of_display_init:	
  2280                           
  2281                           	psect	text4
  2282  0202                     __ptext4:	
  2283 ;; *************** function _handle_relays *****************
  2284 ;; Defined at:
  2285 ;;		line 115 in file "main.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		None
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    2
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _handle_relays
  2315  0202                     _handle_relays:	
  2316                           
  2317                           ;main.c: 117: if(PORTAbits.RA3)
  2318                           
  2319                           ;incstack = 0
  2320                           ; Regs used in _handle_relays: []
  2321  0202  0020               	movlb	0	; select bank0
  2322  0203  1D8C               	btfss	12,3	;volatile
  2323  0204  2A13               	goto	l62
  2324                           
  2325                           ;main.c: 118: {
  2326                           ;main.c: 121: LATAbits.LATA0 = 1;
  2327  0205  1416               	bsf	22,0	;volatile
  2328                           
  2329                           ;main.c: 122: if(PORTAbits.RA4)
  2330  0206  1E0C               	btfss	12,4	;volatile
  2331  0207  2A10               	goto	l63
  2332                           
  2333                           ;main.c: 123: {
  2334                           ;main.c: 125: if(PORTAbits.RA5)
  2335  0208  1E8C               	btfss	12,5	;volatile
  2336  0209  2A0D               	goto	l64
  2337                           
  2338                           ;main.c: 126: {
  2339                           ;main.c: 127: LATAbits.LATA1 = 0;
  2340  020A  1096               	bcf	22,1	;volatile
  2341                           
  2342                           ;main.c: 128: LATAbits.LATA2 = 1;
  2343  020B  1516               	bsf	22,2	;volatile
  2344                           
  2345                           ;main.c: 129: }
  2346  020C  0008               	return
  2347  020D                     l64:	
  2348                           
  2349                           ;main.c: 130: else
  2350                           ;main.c: 131: {
  2351                           ;main.c: 132: LATAbits.LATA2 = 0;
  2352  020D  1116               	bcf	22,2	;volatile
  2353                           
  2354                           ;main.c: 133: LATAbits.LATA1 = 1;
  2355  020E  1496               	bsf	22,1	;volatile
  2356                           
  2357                           ;main.c: 134: }
  2358                           ;main.c: 135: }
  2359  020F  0008               	return
  2360  0210                     l63:	
  2361                           
  2362                           ;main.c: 136: else
  2363                           ;main.c: 137: {
  2364                           ;main.c: 139: LATAbits.LATA1 = 0;
  2365  0210  1096               	bcf	22,1	;volatile
  2366                           
  2367                           ;main.c: 140: LATAbits.LATA2 = 0;
  2368  0211  1116               	bcf	22,2	;volatile
  2369                           
  2370                           ;main.c: 141: }
  2371                           ;main.c: 142: }
  2372  0212  0008               	return
  2373  0213                     l62:	
  2374                           
  2375                           ;main.c: 143: else
  2376                           ;main.c: 144: {
  2377                           ;main.c: 147: LATAbits.LATA0 = 0;
  2378  0213  1016               	bcf	22,0	;volatile
  2379                           
  2380                           ;main.c: 148: if(PORTBbits.RB0)
  2381  0214  1C0D               	btfss	13,0	;volatile
  2382  0215  2A19               	goto	l68
  2383                           
  2384                           ;main.c: 149: {
  2385                           ;main.c: 150: LATAbits.LATA2 = 0;
  2386  0216  1116               	bcf	22,2	;volatile
  2387                           
  2388                           ;main.c: 151: LATAbits.LATA1 = 1;
  2389  0217  1496               	bsf	22,1	;volatile
  2390                           
  2391                           ;main.c: 152: }
  2392  0218  0008               	return
  2393  0219                     l68:	
  2394                           
  2395                           ;main.c: 153: else if(PORTBbits.RB3)
  2396  0219  1D8D               	btfss	13,3	;volatile
  2397  021A  2A1E               	goto	l70
  2398                           
  2399                           ;main.c: 154: {
  2400                           ;main.c: 155: LATAbits.LATA1 = 0;
  2401  021B  1096               	bcf	22,1	;volatile
  2402                           
  2403                           ;main.c: 156: LATAbits.LATA2 = 1;
  2404  021C  1516               	bsf	22,2	;volatile
  2405                           
  2406                           ;main.c: 157: }
  2407  021D  0008               	return
  2408  021E                     l70:	
  2409                           
  2410                           ;main.c: 158: else
  2411                           ;main.c: 159: {
  2412                           ;main.c: 160: LATAbits.LATA1 = 0;
  2413  021E  1096               	bcf	22,1	;volatile
  2414                           
  2415                           ;main.c: 161: LATAbits.LATA2 = 0;
  2416  021F  1116               	bcf	22,2	;volatile
  2417  0220  0008               	return
  2418  0221                     __end_of_handle_relays:	
  2419                           
  2420                           	psect	text5
  2421  003B                     __ptext5:	
  2422 ;; *************** function _display_set *****************
  2423 ;; Defined at:
  2424 ;;		line 57 in file "display.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  value           2    3[BANK0 ] unsigned int 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2438 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2440 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;Total ram usage:        3 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    3
  2445 ;; This function calls:
  2446 ;;		___lwdiv
  2447 ;;		___lwmod
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _display_set
  2455  003B                     _display_set:	
  2456                           
  2457                           ;display.c: 60: characters[3] = char_lookup[value%10];
  2458                           
  2459                           ;incstack = 0
  2460                           ; Regs used in _display_set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2461  003B  300A               	movlw	10
  2462  003C  00F4               	movwf	___lwmod@divisor
  2463  003D  3000               	movlw	0
  2464  003E  00F5               	movwf	___lwmod@divisor+1
  2465  003F  0020               	movlb	0	; select bank0
  2466  0040  082E               	movf	display_set@value+1,w
  2467  0041  00F7               	movwf	___lwmod@dividend+1
  2468  0042  082D               	movf	display_set@value,w
  2469  0043  00F6               	movwf	___lwmod@dividend
  2470  0044  3181  2187  3180   	fcall	___lwmod
  2471  0047  0874               	movf	?___lwmod,w
  2472  0048  3E20               	addlw	(low (_char_lookup| 0))& (0+255)
  2473  0049  0086               	movwf	6
  2474  004A  0187               	clrf	7
  2475  004B  0801               	movf	1,w
  2476  004C  0020               	movlb	0	; select bank0
  2477  004D  00AF               	movwf	??_display_set
  2478  004E  082F               	movf	??_display_set,w
  2479  004F  00B7               	movwf	_characters+3
  2480                           
  2481                           ;display.c: 62: value /= 10;
  2482  0050  300A               	movlw	10
  2483  0051  00F4               	movwf	___lwdiv@divisor
  2484  0052  3000               	movlw	0
  2485  0053  00F5               	movwf	___lwdiv@divisor+1
  2486  0054  082E               	movf	display_set@value+1,w
  2487  0055  00F7               	movwf	___lwdiv@dividend+1
  2488  0056  082D               	movf	display_set@value,w
  2489  0057  00F6               	movwf	___lwdiv@dividend
  2490  0058  3180  20BC  3180   	fcall	___lwdiv
  2491  005B  0875               	movf	?___lwdiv+1,w
  2492  005C  0020               	movlb	0	; select bank0
  2493  005D  00AE               	movwf	display_set@value+1
  2494  005E  0874               	movf	?___lwdiv,w
  2495  005F  00AD               	movwf	display_set@value
  2496                           
  2497                           ;display.c: 63: characters[2] = char_lookup[value%10];
  2498  0060  300A               	movlw	10
  2499  0061  00F4               	movwf	___lwmod@divisor
  2500  0062  3000               	movlw	0
  2501  0063  00F5               	movwf	___lwmod@divisor+1
  2502  0064  082E               	movf	display_set@value+1,w
  2503  0065  00F7               	movwf	___lwmod@dividend+1
  2504  0066  082D               	movf	display_set@value,w
  2505  0067  00F6               	movwf	___lwmod@dividend
  2506  0068  3181  2187  3180   	fcall	___lwmod
  2507  006B  0874               	movf	?___lwmod,w
  2508  006C  3E20               	addlw	(low (_char_lookup| 0))& (0+255)
  2509  006D  0086               	movwf	6
  2510  006E  0187               	clrf	7
  2511  006F  0801               	movf	1,w
  2512  0070  0020               	movlb	0	; select bank0
  2513  0071  00AF               	movwf	??_display_set
  2514  0072  082F               	movf	??_display_set,w
  2515  0073  00B6               	movwf	_characters+2
  2516                           
  2517                           ;display.c: 65: value /= 10;
  2518  0074  300A               	movlw	10
  2519  0075  00F4               	movwf	___lwdiv@divisor
  2520  0076  3000               	movlw	0
  2521  0077  00F5               	movwf	___lwdiv@divisor+1
  2522  0078  082E               	movf	display_set@value+1,w
  2523  0079  00F7               	movwf	___lwdiv@dividend+1
  2524  007A  082D               	movf	display_set@value,w
  2525  007B  00F6               	movwf	___lwdiv@dividend
  2526  007C  3180  20BC  3180   	fcall	___lwdiv
  2527  007F  0875               	movf	?___lwdiv+1,w
  2528  0080  0020               	movlb	0	; select bank0
  2529  0081  00AE               	movwf	display_set@value+1
  2530  0082  0874               	movf	?___lwdiv,w
  2531  0083  00AD               	movwf	display_set@value
  2532                           
  2533                           ;display.c: 66: characters[1] = char_lookup[value%10];
  2534  0084  300A               	movlw	10
  2535  0085  00F4               	movwf	___lwmod@divisor
  2536  0086  3000               	movlw	0
  2537  0087  00F5               	movwf	___lwmod@divisor+1
  2538  0088  082E               	movf	display_set@value+1,w
  2539  0089  00F7               	movwf	___lwmod@dividend+1
  2540  008A  082D               	movf	display_set@value,w
  2541  008B  00F6               	movwf	___lwmod@dividend
  2542  008C  3181  2187  3180   	fcall	___lwmod
  2543  008F  0874               	movf	?___lwmod,w
  2544  0090  3E20               	addlw	(low (_char_lookup| 0))& (0+255)
  2545  0091  0086               	movwf	6
  2546  0092  0187               	clrf	7
  2547  0093  0801               	movf	1,w
  2548  0094  0020               	movlb	0	; select bank0
  2549  0095  00AF               	movwf	??_display_set
  2550  0096  082F               	movf	??_display_set,w
  2551  0097  00B5               	movwf	_characters+1
  2552                           
  2553                           ;display.c: 68: value /= 10;
  2554  0098  300A               	movlw	10
  2555  0099  00F4               	movwf	___lwdiv@divisor
  2556  009A  3000               	movlw	0
  2557  009B  00F5               	movwf	___lwdiv@divisor+1
  2558  009C  082E               	movf	display_set@value+1,w
  2559  009D  00F7               	movwf	___lwdiv@dividend+1
  2560  009E  082D               	movf	display_set@value,w
  2561  009F  00F6               	movwf	___lwdiv@dividend
  2562  00A0  3180  20BC  3180   	fcall	___lwdiv
  2563  00A3  0875               	movf	?___lwdiv+1,w
  2564  00A4  0020               	movlb	0	; select bank0
  2565  00A5  00AE               	movwf	display_set@value+1
  2566  00A6  0874               	movf	?___lwdiv,w
  2567  00A7  00AD               	movwf	display_set@value
  2568                           
  2569                           ;display.c: 69: characters[0] = char_lookup[value%10];
  2570  00A8  300A               	movlw	10
  2571  00A9  00F4               	movwf	___lwmod@divisor
  2572  00AA  3000               	movlw	0
  2573  00AB  00F5               	movwf	___lwmod@divisor+1
  2574  00AC  082E               	movf	display_set@value+1,w
  2575  00AD  00F7               	movwf	___lwmod@dividend+1
  2576  00AE  082D               	movf	display_set@value,w
  2577  00AF  00F6               	movwf	___lwmod@dividend
  2578  00B0  3181  2187         	fcall	___lwmod
  2579  00B2  0874               	movf	?___lwmod,w
  2580  00B3  3E20               	addlw	(low (_char_lookup| 0))& (0+255)
  2581  00B4  0086               	movwf	6
  2582  00B5  0187               	clrf	7
  2583  00B6  0801               	movf	1,w
  2584  00B7  0020               	movlb	0	; select bank0
  2585  00B8  00AF               	movwf	??_display_set
  2586  00B9  082F               	movf	??_display_set,w
  2587  00BA  00B4               	movwf	_characters
  2588  00BB  0008               	return
  2589  00BC                     __end_of_display_set:	
  2590                           
  2591                           	psect	text6
  2592  0187                     __ptext6:	
  2593 ;; *************** function ___lwmod *****************
  2594 ;; Defined at:
  2595 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  divisor         2    4[COMMON] unsigned int 
  2598 ;;  dividend        2    6[COMMON] unsigned int 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  counter         1    0[BANK0 ] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2    4[COMMON] unsigned int 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:        6 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    2
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_display_set
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function ___lwmod
  2626  0187                     ___lwmod:	
  2627                           
  2628                           ;incstack = 0
  2629                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2630  0187  0874               	movf	___lwmod@divisor,w
  2631  0188  0475               	iorwf	___lwmod@divisor+1,w
  2632  0189  1903               	btfsc	3,2
  2633  018A  29AF               	goto	l1069
  2634  018B  0020               	movlb	0	; select bank0
  2635  018C  01AA               	clrf	___lwmod@counter
  2636  018D  0AAA               	incf	___lwmod@counter,f
  2637  018E                     l1059:	
  2638  018E  1BF5               	btfsc	___lwmod@divisor+1,7
  2639  018F  299A               	goto	l1061
  2640  0190  3001               	movlw	1
  2641  0191                     u605:	
  2642  0191  35F4               	lslf	___lwmod@divisor,f
  2643  0192  0DF5               	rlf	___lwmod@divisor+1,f
  2644  0193  0B89               	decfsz	9,f
  2645  0194  2991               	goto	u605
  2646  0195  3001               	movlw	1
  2647  0196  00F8               	movwf	??___lwmod
  2648  0197  0878               	movf	??___lwmod,w
  2649  0198  07AA               	addwf	___lwmod@counter,f
  2650  0199  298E               	goto	l1059
  2651  019A                     l1061:	
  2652  019A  0875               	movf	___lwmod@divisor+1,w
  2653  019B  0277               	subwf	___lwmod@dividend+1,w
  2654  019C  1D03               	skipz
  2655  019D  29A0               	goto	u625
  2656  019E  0874               	movf	___lwmod@divisor,w
  2657  019F  0276               	subwf	___lwmod@dividend,w
  2658  01A0                     u625:	
  2659  01A0  1C03               	skipc
  2660  01A1  29A6               	goto	l1065
  2661  01A2  0874               	movf	___lwmod@divisor,w
  2662  01A3  02F6               	subwf	___lwmod@dividend,f
  2663  01A4  0875               	movf	___lwmod@divisor+1,w
  2664  01A5  3BF7               	subwfb	___lwmod@dividend+1,f
  2665  01A6                     l1065:	
  2666  01A6  3001               	movlw	1
  2667  01A7                     u635:	
  2668  01A7  36F5               	lsrf	___lwmod@divisor+1,f
  2669  01A8  0CF4               	rrf	___lwmod@divisor,f
  2670  01A9  0B89               	decfsz	9,f
  2671  01AA  29A7               	goto	u635
  2672  01AB  3001               	movlw	1
  2673  01AC  02AA               	subwf	___lwmod@counter,f
  2674  01AD  1D03               	btfss	3,2
  2675  01AE  299A               	goto	l1061
  2676  01AF                     l1069:	
  2677  01AF  0877               	movf	___lwmod@dividend+1,w
  2678  01B0  00F5               	movwf	?___lwmod+1
  2679  01B1  0876               	movf	___lwmod@dividend,w
  2680  01B2  00F4               	movwf	?___lwmod
  2681  01B3  0008               	return
  2682  01B4                     __end_of___lwmod:	
  2683                           
  2684                           	psect	text7
  2685  00BC                     __ptext7:	
  2686 ;; *************** function ___lwdiv *****************
  2687 ;; Defined at:
  2688 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  divisor         2    4[COMMON] unsigned int 
  2691 ;;  dividend        2    6[COMMON] unsigned int 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  quotient        2    0[BANK0 ] unsigned int 
  2694 ;;  counter         1    2[BANK0 ] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    4[COMMON] unsigned int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;Total ram usage:        8 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    2
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_display_set
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function ___lwdiv
  2720  00BC                     ___lwdiv:	
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2724  00BC  0020               	movlb	0	; select bank0
  2725  00BD  01AA               	clrf	___lwdiv@quotient
  2726  00BE  01AB               	clrf	___lwdiv@quotient+1
  2727  00BF  0874               	movf	___lwdiv@divisor,w
  2728  00C0  0475               	iorwf	___lwdiv@divisor+1,w
  2729  00C1  1903               	btfsc	3,2
  2730  00C2  28EC               	goto	l875
  2731  00C3  01AC               	clrf	___lwdiv@counter
  2732  00C4  0AAC               	incf	___lwdiv@counter,f
  2733  00C5                     l863:	
  2734  00C5  1BF5               	btfsc	___lwdiv@divisor+1,7
  2735  00C6  28D1               	goto	l865
  2736  00C7  3001               	movlw	1
  2737  00C8                     u315:	
  2738  00C8  35F4               	lslf	___lwdiv@divisor,f
  2739  00C9  0DF5               	rlf	___lwdiv@divisor+1,f
  2740  00CA  0B89               	decfsz	9,f
  2741  00CB  28C8               	goto	u315
  2742  00CC  3001               	movlw	1
  2743  00CD  00F8               	movwf	??___lwdiv
  2744  00CE  0878               	movf	??___lwdiv,w
  2745  00CF  07AC               	addwf	___lwdiv@counter,f
  2746  00D0  28C5               	goto	l863
  2747  00D1                     l865:	
  2748  00D1  3001               	movlw	1
  2749  00D2                     u335:	
  2750  00D2  35AA               	lslf	___lwdiv@quotient,f
  2751  00D3  0DAB               	rlf	___lwdiv@quotient+1,f
  2752  00D4  0B89               	decfsz	9,f
  2753  00D5  28D2               	goto	u335
  2754  00D6  0875               	movf	___lwdiv@divisor+1,w
  2755  00D7  0277               	subwf	___lwdiv@dividend+1,w
  2756  00D8  1D03               	skipz
  2757  00D9  28DC               	goto	u345
  2758  00DA  0874               	movf	___lwdiv@divisor,w
  2759  00DB  0276               	subwf	___lwdiv@dividend,w
  2760  00DC                     u345:	
  2761  00DC  1C03               	skipc
  2762  00DD  28E3               	goto	l871
  2763  00DE  0874               	movf	___lwdiv@divisor,w
  2764  00DF  02F6               	subwf	___lwdiv@dividend,f
  2765  00E0  0875               	movf	___lwdiv@divisor+1,w
  2766  00E1  3BF7               	subwfb	___lwdiv@dividend+1,f
  2767  00E2  142A               	bsf	___lwdiv@quotient,0
  2768  00E3                     l871:	
  2769  00E3  3001               	movlw	1
  2770  00E4                     u355:	
  2771  00E4  36F5               	lsrf	___lwdiv@divisor+1,f
  2772  00E5  0CF4               	rrf	___lwdiv@divisor,f
  2773  00E6  0B89               	decfsz	9,f
  2774  00E7  28E4               	goto	u355
  2775  00E8  3001               	movlw	1
  2776  00E9  02AC               	subwf	___lwdiv@counter,f
  2777  00EA  1D03               	btfss	3,2
  2778  00EB  28D1               	goto	l865
  2779  00EC                     l875:	
  2780  00EC  082B               	movf	___lwdiv@quotient+1,w
  2781  00ED  00F5               	movwf	?___lwdiv+1
  2782  00EE  082A               	movf	___lwdiv@quotient,w
  2783  00EF  00F4               	movwf	?___lwdiv
  2784  00F0  0008               	return
  2785  00F1                     __end_of___lwdiv:	
  2786                           
  2787                           	psect	intentry
  2788  0004                     __pintentry:	
  2789 ;; *************** function __isr *****************
  2790 ;; Defined at:
  2791 ;;		line 55 in file "main.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;Total ram usage:        2 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    1
  2812 ;; This function calls:
  2813 ;;		_display_update
  2814 ;;		_encoder_isr
  2815 ;; This function is called by:
  2816 ;;		Interrupt level 1
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820  0004                     __isr:	
  2821                           
  2822                           ;incstack = 0
  2823  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2824                           
  2825                           ; Regs used in __isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2826  0005  3180               	pagesel	$
  2827  0006  0020               	movlb	0	; select bank0
  2828  0007  087F               	movf	127,w
  2829  0008  00F3               	movwf	??__isr+1
  2830                           
  2831                           ;main.c: 58: if(PIR0bits.IOCIF)
  2832  0009  002E               	movlb	14	; select bank14
  2833  000A  1E0C               	btfss	12,4	;volatile
  2834  000B  280F               	goto	i1l1001
  2835                           
  2836                           ;main.c: 59: {
  2837                           ;main.c: 60: encoder_isr();
  2838  000C  3181  21B4  3180   	fcall	_encoder_isr
  2839  000F                     i1l1001:	
  2840                           
  2841                           ;main.c: 61: }
  2842                           ;main.c: 64: if(PIR4bits.TMR2IF)
  2843  000F  002E               	movlb	14	; select bank14
  2844  0010  1C90               	btfss	16,1	;volatile
  2845  0011  281C               	goto	i1l56
  2846                           
  2847                           ;main.c: 65: {
  2848                           ;main.c: 67: display_update();
  2849  0012  3181  2156         	fcall	_display_update
  2850                           
  2851                           ;main.c: 69: ++os.timeSlot;
  2852  0014  3001               	movlw	1
  2853  0015  00F2               	movwf	??__isr
  2854  0016  0872               	movf	??__isr,w
  2855  0017  0020               	movlb	0	; select bank0
  2856  0018  07B8               	addwf	_os,f	;volatile
  2857                           
  2858                           ;main.c: 70: os.done = 0;
  2859  0019  01B9               	clrf	_os+1	;volatile
  2860                           
  2861                           ;main.c: 72: PIR4bits.TMR2IF = 0;
  2862  001A  002E               	movlb	14	; select bank14
  2863  001B  1090               	bcf	16,1	;volatile
  2864  001C                     i1l56:	
  2865  001C  0873               	movf	??__isr+1,w
  2866  001D  0020               	movlb	0	; select bank0
  2867  001E  00FF               	movwf	127
  2868  001F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2869  0020  0009               	retfie
  2870  0021                     __end_of__isr:	
  2871                           
  2872                           	psect	text9
  2873  01B4                     __ptext9:	
  2874 ;; *************** function _encoder_isr *****************
  2875 ;; Defined at:
  2876 ;;		line 22 in file "encoder.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		__isr
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _encoder_isr
  2905  01B4                     _encoder_isr:	
  2906                           
  2907                           ;encoder.c: 24: if(IOCBFbits.IOCBF2)
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _encoder_isr: [wreg]
  2911  01B4  003E               	movlb	30	; select bank30
  2912  01B5  1D4A               	btfss	74,2	;volatile
  2913  01B6  29C9               	goto	i1l945
  2914                           
  2915                           ;encoder.c: 25: {
  2916                           ;encoder.c: 26: if(PORTBbits.RB2)
  2917  01B7  0020               	movlb	0	; select bank0
  2918  01B8  1D0D               	btfss	13,2	;volatile
  2919  01B9  29BD               	goto	i1l128
  2920                           
  2921                           ;encoder.c: 27: {
  2922                           ;encoder.c: 28: if(PORTBbits.RB1)
  2923  01BA  188D               	btfsc	13,1	;volatile
  2924  01BB  29C3               	goto	i1l941
  2925                           
  2926                           ;encoder.c: 35: }
  2927                           
  2928                           ;encoder.c: 29: {
  2929                           ;encoder.c: 31: ++os.encoder;
  2930  01BC  29BF               	goto	L7
  2931  01BD                     i1l128:	
  2932                           ;encoder.c: 43: }
  2933                           ;encoder.c: 44: }
  2934                           
  2935                           ;encoder.c: 36: else
  2936                           ;encoder.c: 37: {
  2937                           ;encoder.c: 39: --os.encoder;
  2938                           
  2939                           
  2940                           ;encoder.c: 45: else
  2941                           ;encoder.c: 46: {
  2942                           ;encoder.c: 47: if(PORTBbits.RB1)
  2943  01BD  1C8D               	btfss	13,1	;volatile
  2944  01BE  29C3               	goto	i1l941
  2945  01BF                     L7:	
  2946                           
  2947                           ;encoder.c: 48: {
  2948                           ;encoder.c: 50: --os.encoder;
  2949  01BF  30FF               	movlw	255
  2950  01C0  07BA               	addwf	_os+2,f	;volatile
  2951  01C1  30FF               	movlw	255
  2952  01C2  29C6               	goto	L3
  2953  01C3                     i1l941:	
  2954                           ;encoder.c: 54: }
  2955                           
  2956                           
  2957                           ;encoder.c: 55: else
  2958                           ;encoder.c: 56: {
  2959                           ;encoder.c: 58: ++os.encoder;
  2960  01C3  3001               	movlw	1
  2961  01C4  07BA               	addwf	_os+2,f	;volatile
  2962  01C5  3000               	movlw	0
  2963  01C6                     L3:	
  2964  01C6  3DBB               	addwfc	_os+3,f	;volatile
  2965                           
  2966                           ;encoder.c: 62: }
  2967                           ;encoder.c: 63: }
  2968                           ;encoder.c: 64: IOCBFbits.IOCBF2 = 0;
  2969  01C7  003E               	movlb	30	; select bank30
  2970  01C8  114A               	bcf	74,2	;volatile
  2971  01C9                     i1l945:	
  2972                           
  2973                           ;encoder.c: 65: }
  2974                           ;encoder.c: 67: if(IOCBFbits.IOCBF1)
  2975  01C9  1CCA               	btfss	74,1	;volatile
  2976  01CA  0008               	return
  2977                           
  2978                           ;encoder.c: 68: {
  2979                           ;encoder.c: 69: if(PORTBbits.RB1)
  2980  01CB  0020               	movlb	0	; select bank0
  2981  01CC  1C8D               	btfss	13,1	;volatile
  2982  01CD  29D1               	goto	i1l135
  2983                           
  2984                           ;encoder.c: 70: {
  2985                           ;encoder.c: 71: if(PORTBbits.RB2)
  2986  01CE  190D               	btfsc	13,2	;volatile
  2987  01CF  29D7               	goto	i1l957
  2988                           
  2989                           ;encoder.c: 78: }
  2990                           
  2991                           ;encoder.c: 72: {
  2992                           ;encoder.c: 74: --os.encoder;
  2993  01D0  29D3               	goto	L8
  2994  01D1                     i1l135:	
  2995                           ;encoder.c: 86: }
  2996                           ;encoder.c: 87: }
  2997                           
  2998                           ;encoder.c: 79: else
  2999                           ;encoder.c: 80: {
  3000                           ;encoder.c: 82: ++os.encoder;
  3001                           
  3002                           
  3003                           ;encoder.c: 88: else
  3004                           ;encoder.c: 89: {
  3005                           ;encoder.c: 90: if(PORTBbits.RB2)
  3006  01D1  1D0D               	btfss	13,2	;volatile
  3007  01D2  29D7               	goto	i1l957
  3008  01D3                     L8:	
  3009                           
  3010                           ;encoder.c: 91: {
  3011                           ;encoder.c: 93: ++os.encoder;
  3012  01D3  3001               	movlw	1
  3013  01D4  07BA               	addwf	_os+2,f	;volatile
  3014  01D5  3000               	movlw	0
  3015  01D6  29DA               	goto	L6
  3016  01D7                     i1l957:	
  3017                           ;encoder.c: 97: }
  3018                           
  3019                           
  3020                           ;encoder.c: 98: else
  3021                           ;encoder.c: 99: {
  3022                           ;encoder.c: 101: --os.encoder;
  3023  01D7  30FF               	movlw	255
  3024  01D8  07BA               	addwf	_os+2,f	;volatile
  3025  01D9  30FF               	movlw	255
  3026  01DA                     L6:	
  3027  01DA  3DBB               	addwfc	_os+3,f	;volatile
  3028                           
  3029                           ;encoder.c: 105: }
  3030                           ;encoder.c: 106: }
  3031                           ;encoder.c: 107: IOCBFbits.IOCBF1 = 0;
  3032  01DB  003E               	movlb	30	; select bank30
  3033  01DC  10CA               	bcf	74,1	;volatile
  3034  01DD  0008               	return
  3035  01DE                     __end_of_encoder_isr:	
  3036                           
  3037                           	psect	text10
  3038  0156                     __ptext10:	
  3039 ;; *************** function _display_update *****************
  3040 ;; Defined at:
  3041 ;;		line 72 in file "display.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;Total ram usage:        2 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		__isr
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function _display_update
  3070  0156                     _display_update:	
  3071                           
  3072                           ;display.c: 74: LATBbits.LATB7 = 1;
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _display_update: [wreg-fsr1h+status,2+status,0]
  3076  0156  0020               	movlb	0	; select bank0
  3077  0157  1797               	bsf	23,7	;volatile
  3078                           
  3079                           ;display.c: 75: LATBbits.LATB6 = 1;
  3080  0158  1717               	bsf	23,6	;volatile
  3081                           
  3082                           ;display.c: 76: LATBbits.LATB5 = 1;
  3083  0159  1697               	bsf	23,5	;volatile
  3084                           
  3085                           ;display.c: 77: LATBbits.LATB4 = 1;
  3086  015A  1617               	bsf	23,4	;volatile
  3087                           
  3088                           ;display.c: 79: LATC = characters[segment&0b11];
  3089  015B  0879               	movf	_segment,w
  3090  015C  3903               	andlw	3
  3091  015D  3E34               	addlw	(low (_characters| 0))& (0+255)
  3092  015E  0086               	movwf	6
  3093  015F  0187               	clrf	7
  3094  0160  0801               	movf	1,w
  3095  0161  0098               	movwf	24	;volatile
  3096                           
  3097                           ;display.c: 81: switch(segment&0b11)
  3098  0162  296B               	goto	i1l967
  3099  0163                     i1l104:	
  3100                           ;display.c: 82: {
  3101                           ;display.c: 83: case 0:
  3102                           
  3103                           
  3104                           ;display.c: 84: LATBbits.LATB7 = 0;
  3105  0163  1397               	bcf	23,7	;volatile
  3106                           
  3107                           ;display.c: 85: break;
  3108  0164  2982               	goto	i1l969
  3109  0165                     i1l106:	
  3110                           ;display.c: 86: case 1:
  3111                           
  3112                           
  3113                           ;display.c: 87: LATBbits.LATB6 = 0;
  3114  0165  1317               	bcf	23,6	;volatile
  3115                           
  3116                           ;display.c: 88: break;
  3117  0166  2982               	goto	i1l969
  3118  0167                     i1l107:	
  3119                           ;display.c: 89: case 2:
  3120                           
  3121                           
  3122                           ;display.c: 90: LATBbits.LATB5 = 0;
  3123  0167  1297               	bcf	23,5	;volatile
  3124                           
  3125                           ;display.c: 91: break;
  3126  0168  2982               	goto	i1l969
  3127  0169                     i1l108:	
  3128                           ;display.c: 92: case 3:
  3129                           
  3130                           
  3131                           ;display.c: 93: LATBbits.LATB4 = 0;
  3132  0169  1217               	bcf	23,4	;volatile
  3133                           
  3134                           ;display.c: 95: }
  3135                           
  3136                           ;display.c: 94: break;
  3137  016A  2982               	goto	i1l969
  3138  016B                     i1l967:	
  3139  016B  0879               	movf	_segment,w
  3140  016C  3903               	andlw	3
  3141  016D  00F0               	movwf	??_display_update
  3142  016E  01F1               	clrf	??_display_update+1
  3143                           
  3144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3145                           ; Switch size 1, requested type "space"
  3146                           ; Number of cases is 1, Range of values is 0 to 0
  3147                           ; switch strategies available:
  3148                           ; Name         Instructions Cycles
  3149                           ; simple_byte            4     3 (average)
  3150                           ; direct_byte            8     6 (fixed)
  3151                           ; jumptable            260     6 (fixed)
  3152                           ;	Chosen strategy is simple_byte
  3153  016F  0871               	movf	??_display_update+1,w
  3154  0170  3A00               	xorlw	0	; case 0
  3155  0171  1903               	skipnz
  3156  0172  2974               	goto	i1l1147
  3157  0173  2982               	goto	i1l969
  3158  0174                     i1l1147:	
  3159                           
  3160                           ; Switch size 1, requested type "space"
  3161                           ; Number of cases is 4, Range of values is 0 to 3
  3162                           ; switch strategies available:
  3163                           ; Name         Instructions Cycles
  3164                           ; simple_byte           13     7 (average)
  3165                           ; direct_byte           14     6 (fixed)
  3166                           ; jumptable            260     6 (fixed)
  3167                           ;	Chosen strategy is simple_byte
  3168  0174  0870               	movf	??_display_update,w
  3169  0175  3A00               	xorlw	0	; case 0
  3170  0176  1903               	skipnz
  3171  0177  2963               	goto	i1l104
  3172  0178  3A01               	xorlw	1	; case 1
  3173  0179  1903               	skipnz
  3174  017A  2965               	goto	i1l106
  3175  017B  3A03               	xorlw	3	; case 2
  3176  017C  1903               	skipnz
  3177  017D  2967               	goto	i1l107
  3178  017E  3A01               	xorlw	1	; case 3
  3179  017F  1903               	skipnz
  3180  0180  2969               	goto	i1l108
  3181  0181  2982               	goto	i1l969
  3182  0182                     i1l969:	
  3183                           
  3184                           ;display.c: 97: ++segment;
  3185  0182  3001               	movlw	1
  3186  0183  00F0               	movwf	??_display_update
  3187  0184  0870               	movf	??_display_update,w
  3188  0185  07F9               	addwf	_segment,f
  3189  0186  0008               	return
  3190  0187                     __end_of_display_update:	
  3191  007E                     btemp	set	126	;btemp
  3192  007E                     int$flags	set	126
  3193  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     10      28
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _system_init->_display_init
    _display_set->___lwdiv
    _display_set->___lwmod

Critical Paths under __isr in COMMON

    __isr->_display_update

Critical Paths under _main in BANK0

    _main->_display_set
    _display_set->___lwdiv

Critical Paths under __isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under __isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under __isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under __isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under __isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under __isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under __isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under __isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under __isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under __isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under __isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under __isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under __isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1526
                                              6 BANK0      4     4      0
                        _display_set
                      _handle_relays
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
                       _display_init
                       _encoder_init
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _handle_relays                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_set                                          3     1      2    1523
                                              3 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     752
                                              4 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     480
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) __isr                                                 2     2      0       0
                                              2 COMMON     2     2      0
                     _display_update
                        _encoder_isr
 ---------------------------------------------------------------------------------
 (4) _encoder_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_set
     ___lwdiv
     ___lwmod
   _handle_relays
   _system_init
     _display_init
     _encoder_init

 __isr (ROOT)
   _display_update
   _encoder_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      1C       5       35.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      26      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      26      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Jul 22 18:49:42 2018

            __CFG_CP$OFF 0000                       l70 021E                       l62 0213  
                     l63 0210                       l64 020D                       l68 0219  
           ?_display_set 002D                       _os 0038      __end_of_system_init 0156  
            __CFG_LVP$ON 0000                      l871 00E3                      l863 00C5  
                    l865 00D1                      l875 00EC            ?_display_init 0070  
                    u315 00C8                      _PR2 028D                      u335 00D2  
                    u345 00DC             __CFG_CPD$OFF 0000                      u355 00E4  
                    u605 0191                      u625 01A0                      u635 01A7  
 __end_of_display_update 0187             __CFG_BORV$HI 0000                      wreg 0009  
           __CFG_ZCD$OFF 0000                     l1061 019A                     l1065 01A6  
                   l1145 0117                     l1059 018E                     l1091 0100  
                   l1069 01AF                     l1087 00F9                     l1097 010D  
                   l1099 011F                     _LATC 0018                     i1l56 001C  
         ??_encoder_init 0074             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   __isr 0004                     _main 00F1                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0021            __CFG_MCLRE$ON 0000                    ?__isr 0070  
         ??_display_init 0074                    ?_main 0070            __CFG_WDTE$OFF 0000  
        __end_of___lwdiv 00F1                    i1l104 0163                    i1l106 0165  
                  i1l107 0167                    i1l108 0169                    i1l135 01D1  
                  i1l128 01BD          __end_of___lwmod 01B4                    i1l941 01C3  
                  i1l945 01C9                    i1l957 01D7                    i1l967 016B  
                  i1l969 0182          ?_display_update 0070            __CFG_PWRTE$ON 0000  
                  status 0003                    wtemp0 007E           __CFG_CSWEN$OFF 0000  
        __initialization 0023             __end_of__isr 0021              _system_init 0125  
           __end_of_main 0125                   ??__isr 0072                   ??_main 0030  
                 i1l1001 000F                   i1l1147 0174           __CFG_WDTCCS$SC 0000  
   __size_of_encoder_isr 002A           __CFG_STVREN$ON 0000                ??___lwdiv 0078  
              ??___lwmod 0078     __end_of_encoder_init 0235     __size_of_display_set 0081  
__end_of__initialization 0037          __CFG_FEXTOSC$HS 0000     __end_of_display_init 0202  
         __pcstackCOMMON 0070             __pidataBANK0 0221               __pbssBANK0 0034  
  __end_of_handle_relays 0221               _characters 0034             _T2CLKCONbits 0290  
             __pmaintext 00F1               __pintentry 0004         ??_display_update 0070  
           ?_system_init 0070    __size_of_encoder_init 000A     __CFG_SCANE$available 0000  
                ___lwdiv 00BC                  ___lwmod 0187                  __ptext1 0125  
                __ptext2 022B                  __ptext3 01DE                  __ptext4 0202  
                __ptext5 003B                  __ptext6 0187                  __ptext7 00BC  
                __ptext9 01B4                _T2CONbits 028E                  _segment 0079  
              _IOCBFbits 0F4A                _IOCBNbits 0F49                _IOCBPbits 0F48  
  __size_of_display_init 0024     end_of_initialization 0037                  init_ram 0235  
                initloop 0236             _encoder_init 022B    __CFG_WDTCPS$WDTCPS_31 0000  
              _PORTAbits 000C                _PORTBbits 000D             _display_init 01DE  
              _TRISAbits 0011                _TRISBbits 0012                _TRISCbits 0013  
          ??_encoder_isr 0070            ??_display_set 002F      start_initialization 0023  
      __CFG_RSTOSC$EXT4X 0000         __CFG_LPBOREN$OFF 0000      __end_of_encoder_isr 01DE  
            __pdataBANK0 0020     __size_of_system_init 0031      __end_of_display_set 00BC  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 002A  
            _char_lookup 0020         ___lwdiv@dividend 0076                 ?___lwdiv 0074  
               ?___lwmod 0074         __CFG_PPS1WAY$OFF 0000   __size_of_handle_relays 001F  
       ___lwdiv@quotient 002A                 _LATAbits 0016                 _LATBbits 0017  
               _PIE0bits 0716                 _PIE4bits 071A              _encoder_isr 01B4  
               _PIR0bits 070C                 _PIR4bits 0710              _display_set 003B  
__size_of_display_update 0031            _handle_relays 0202         __size_of___lwdiv 0035  
       __size_of___lwmod 002D               _ANSELAbits 0F38               _ANSELBbits 0F43  
        ___lwdiv@divisor 0074          ___lwdiv@counter 002C                 __ptext10 0156  
         ?_handle_relays 0070            __size_of__isr 001D            __size_of_main 0034  
   __CFG_WDTCWS$WDTCWS_7 0000                 int$flags 007E                 main@cntr 0032  
       display_set@value 002D               _INTCONbits 000B                 intlevel1 0000  
       ___lwmod@dividend 0076        __CFG_CLKOUTEN$OFF 0000            ??_system_init 0075  
        ___lwmod@divisor 0074          ___lwmod@counter 002A           _display_update 0156  
        ??_handle_relays 0074            ?_encoder_init 0070             ?_encoder_isr 0070  
