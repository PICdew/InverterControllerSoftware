

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Oct 01 00:00:00 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.44
    37                           ; Generated 14/09/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F18855 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  001C                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0110                     	;# 
   125  0110                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0119                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  018F                     	;# 
   165  0190                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  0196                     	;# 
   169  0197                     	;# 
   170  0198                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  020C                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  020E                     	;# 
   179  020F                     	;# 
   180  020F                     	;# 
   181  0210                     	;# 
   182  0210                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0216                     	;# 
   192  0216                     	;# 
   193  0217                     	;# 
   194  0217                     	;# 
   195  0218                     	;# 
   196  0218                     	;# 
   197  0219                     	;# 
   198  021A                     	;# 
   199  021B                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021C                     	;# 
   203  021D                     	;# 
   204  021D                     	;# 
   205  021E                     	;# 
   206  021F                     	;# 
   207  028C                     	;# 
   208  028C                     	;# 
   209  028D                     	;# 
   210  028D                     	;# 
   211  028E                     	;# 
   212  028F                     	;# 
   213  0290                     	;# 
   214  0290                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0296                     	;# 
   224  0297                     	;# 
   225  0298                     	;# 
   226  0298                     	;# 
   227  0299                     	;# 
   228  0299                     	;# 
   229  029A                     	;# 
   230  029B                     	;# 
   231  029C                     	;# 
   232  029C                     	;# 
   233  029D                     	;# 
   234  030C                     	;# 
   235  030C                     	;# 
   236  030D                     	;# 
   237  030E                     	;# 
   238  030F                     	;# 
   239  0310                     	;# 
   240  0310                     	;# 
   241  0311                     	;# 
   242  0312                     	;# 
   243  0313                     	;# 
   244  0314                     	;# 
   245  0314                     	;# 
   246  0315                     	;# 
   247  0316                     	;# 
   248  0317                     	;# 
   249  0318                     	;# 
   250  0318                     	;# 
   251  0319                     	;# 
   252  031A                     	;# 
   253  031B                     	;# 
   254  031C                     	;# 
   255  031C                     	;# 
   256  031D                     	;# 
   257  031E                     	;# 
   258  031F                     	;# 
   259  038C                     	;# 
   260  038D                     	;# 
   261  038E                     	;# 
   262  0390                     	;# 
   263  0391                     	;# 
   264  0392                     	;# 
   265  040C                     	;# 
   266  040D                     	;# 
   267  040E                     	;# 
   268  040F                     	;# 
   269  0410                     	;# 
   270  0411                     	;# 
   271  0416                     	;# 
   272  0416                     	;# 
   273  0417                     	;# 
   274  0418                     	;# 
   275  0418                     	;# 
   276  0419                     	;# 
   277  041A                     	;# 
   278  041A                     	;# 
   279  041B                     	;# 
   280  041C                     	;# 
   281  041C                     	;# 
   282  041D                     	;# 
   283  041E                     	;# 
   284  041F                     	;# 
   285  048C                     	;# 
   286  048C                     	;# 
   287  048D                     	;# 
   288  048E                     	;# 
   289  048F                     	;# 
   290  048F                     	;# 
   291  0490                     	;# 
   292  0491                     	;# 
   293  0492                     	;# 
   294  0492                     	;# 
   295  0493                     	;# 
   296  0494                     	;# 
   297  0495                     	;# 
   298  0495                     	;# 
   299  0496                     	;# 
   300  0497                     	;# 
   301  0498                     	;# 
   302  0499                     	;# 
   303  049A                     	;# 
   304  049B                     	;# 
   305  049C                     	;# 
   306  049D                     	;# 
   307  050C                     	;# 
   308  050C                     	;# 
   309  050D                     	;# 
   310  050E                     	;# 
   311  050F                     	;# 
   312  050F                     	;# 
   313  0510                     	;# 
   314  0511                     	;# 
   315  0512                     	;# 
   316  0512                     	;# 
   317  0513                     	;# 
   318  0514                     	;# 
   319  0515                     	;# 
   320  0515                     	;# 
   321  0516                     	;# 
   322  0517                     	;# 
   323  0518                     	;# 
   324  0519                     	;# 
   325  051A                     	;# 
   326  051B                     	;# 
   327  051C                     	;# 
   328  051D                     	;# 
   329  058C                     	;# 
   330  058C                     	;# 
   331  058D                     	;# 
   332  058E                     	;# 
   333  058F                     	;# 
   334  058F                     	;# 
   335  0590                     	;# 
   336  0591                     	;# 
   337  0592                     	;# 
   338  0593                     	;# 
   339  060C                     	;# 
   340  060D                     	;# 
   341  060E                     	;# 
   342  060F                     	;# 
   343  0610                     	;# 
   344  0611                     	;# 
   345  0612                     	;# 
   346  0613                     	;# 
   347  0614                     	;# 
   348  0616                     	;# 
   349  0617                     	;# 
   350  0618                     	;# 
   351  0619                     	;# 
   352  061A                     	;# 
   353  061B                     	;# 
   354  061C                     	;# 
   355  061D                     	;# 
   356  061E                     	;# 
   357  068C                     	;# 
   358  068D                     	;# 
   359  068E                     	;# 
   360  068F                     	;# 
   361  0690                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  070C                     	;# 
   367  070D                     	;# 
   368  070E                     	;# 
   369  070F                     	;# 
   370  0710                     	;# 
   371  0711                     	;# 
   372  0712                     	;# 
   373  0713                     	;# 
   374  0714                     	;# 
   375  0716                     	;# 
   376  0717                     	;# 
   377  0718                     	;# 
   378  0719                     	;# 
   379  071A                     	;# 
   380  071B                     	;# 
   381  071C                     	;# 
   382  071D                     	;# 
   383  071E                     	;# 
   384  0796                     	;# 
   385  0797                     	;# 
   386  0798                     	;# 
   387  0799                     	;# 
   388  079A                     	;# 
   389  079B                     	;# 
   390  080C                     	;# 
   391  080D                     	;# 
   392  080E                     	;# 
   393  080F                     	;# 
   394  0810                     	;# 
   395  0811                     	;# 
   396  0812                     	;# 
   397  0813                     	;# 
   398  0814                     	;# 
   399  081A                     	;# 
   400  081B                     	;# 
   401  081C                     	;# 
   402  081D                     	;# 
   403  081E                     	;# 
   404  081F                     	;# 
   405  088C                     	;# 
   406  088D                     	;# 
   407  088E                     	;# 
   408  088F                     	;# 
   409  0890                     	;# 
   410  0891                     	;# 
   411  0892                     	;# 
   412  0893                     	;# 
   413  0895                     	;# 
   414  0896                     	;# 
   415  0897                     	;# 
   416  0898                     	;# 
   417  0899                     	;# 
   418  089A                     	;# 
   419  089B                     	;# 
   420  090C                     	;# 
   421  090E                     	;# 
   422  090F                     	;# 
   423  091F                     	;# 
   424  091F                     	;# 
   425  098F                     	;# 
   426  098F                     	;# 
   427  0990                     	;# 
   428  0991                     	;# 
   429  0992                     	;# 
   430  0993                     	;# 
   431  0994                     	;# 
   432  0995                     	;# 
   433  0996                     	;# 
   434  0997                     	;# 
   435  0E0F                     	;# 
   436  0E10                     	;# 
   437  0E11                     	;# 
   438  0E12                     	;# 
   439  0E13                     	;# 
   440  0E14                     	;# 
   441  0E15                     	;# 
   442  0E16                     	;# 
   443  0E17                     	;# 
   444  0E18                     	;# 
   445  0E19                     	;# 
   446  0E1A                     	;# 
   447  0E1B                     	;# 
   448  0E1C                     	;# 
   449  0E1D                     	;# 
   450  0E1E                     	;# 
   451  0E1F                     	;# 
   452  0E20                     	;# 
   453  0E21                     	;# 
   454  0E22                     	;# 
   455  0E23                     	;# 
   456  0E24                     	;# 
   457  0E25                     	;# 
   458  0E26                     	;# 
   459  0E27                     	;# 
   460  0E28                     	;# 
   461  0E29                     	;# 
   462  0E2A                     	;# 
   463  0E2B                     	;# 
   464  0E2C                     	;# 
   465  0E2D                     	;# 
   466  0E2E                     	;# 
   467  0E2F                     	;# 
   468  0E30                     	;# 
   469  0E31                     	;# 
   470  0E32                     	;# 
   471  0E33                     	;# 
   472  0E34                     	;# 
   473  0E35                     	;# 
   474  0E36                     	;# 
   475  0E37                     	;# 
   476  0E8F                     	;# 
   477  0E90                     	;# 
   478  0E91                     	;# 
   479  0E92                     	;# 
   480  0E93                     	;# 
   481  0E94                     	;# 
   482  0E95                     	;# 
   483  0E96                     	;# 
   484  0E97                     	;# 
   485  0E9C                     	;# 
   486  0E9D                     	;# 
   487  0E9E                     	;# 
   488  0EA1                     	;# 
   489  0EA2                     	;# 
   490  0EA3                     	;# 
   491  0EA4                     	;# 
   492  0EA5                     	;# 
   493  0EA9                     	;# 
   494  0EAA                     	;# 
   495  0EAB                     	;# 
   496  0EAC                     	;# 
   497  0EB1                     	;# 
   498  0EB2                     	;# 
   499  0EB3                     	;# 
   500  0EB8                     	;# 
   501  0EB9                     	;# 
   502  0EBA                     	;# 
   503  0EBB                     	;# 
   504  0EBC                     	;# 
   505  0EBD                     	;# 
   506  0EBE                     	;# 
   507  0EC3                     	;# 
   508  0EC5                     	;# 
   509  0EC6                     	;# 
   510  0EC7                     	;# 
   511  0EC8                     	;# 
   512  0EC9                     	;# 
   513  0ECA                     	;# 
   514  0ECB                     	;# 
   515  0ECC                     	;# 
   516  0F10                     	;# 
   517  0F11                     	;# 
   518  0F12                     	;# 
   519  0F13                     	;# 
   520  0F14                     	;# 
   521  0F15                     	;# 
   522  0F16                     	;# 
   523  0F17                     	;# 
   524  0F18                     	;# 
   525  0F19                     	;# 
   526  0F1A                     	;# 
   527  0F1B                     	;# 
   528  0F1C                     	;# 
   529  0F1D                     	;# 
   530  0F1E                     	;# 
   531  0F1F                     	;# 
   532  0F20                     	;# 
   533  0F21                     	;# 
   534  0F22                     	;# 
   535  0F23                     	;# 
   536  0F24                     	;# 
   537  0F25                     	;# 
   538  0F26                     	;# 
   539  0F27                     	;# 
   540  0F38                     	;# 
   541  0F39                     	;# 
   542  0F3A                     	;# 
   543  0F3B                     	;# 
   544  0F3C                     	;# 
   545  0F3D                     	;# 
   546  0F3E                     	;# 
   547  0F3F                     	;# 
   548  0F40                     	;# 
   549  0F41                     	;# 
   550  0F43                     	;# 
   551  0F44                     	;# 
   552  0F45                     	;# 
   553  0F46                     	;# 
   554  0F47                     	;# 
   555  0F48                     	;# 
   556  0F49                     	;# 
   557  0F4A                     	;# 
   558  0F4B                     	;# 
   559  0F4C                     	;# 
   560  0F4E                     	;# 
   561  0F4F                     	;# 
   562  0F50                     	;# 
   563  0F51                     	;# 
   564  0F52                     	;# 
   565  0F53                     	;# 
   566  0F54                     	;# 
   567  0F55                     	;# 
   568  0F56                     	;# 
   569  0F57                     	;# 
   570  0F65                     	;# 
   571  0F68                     	;# 
   572  0F69                     	;# 
   573  0F6A                     	;# 
   574  0F6B                     	;# 
   575  0FE4                     	;# 
   576  0FE5                     	;# 
   577  0FE6                     	;# 
   578  0FE7                     	;# 
   579  0FE8                     	;# 
   580  0FE9                     	;# 
   581  0FEA                     	;# 
   582  0FEB                     	;# 
   583  0FED                     	;# 
   584  0FEE                     	;# 
   585  0FEF                     	;# 
   586  0000                     	;# 
   587  0001                     	;# 
   588  0002                     	;# 
   589  0003                     	;# 
   590  0004                     	;# 
   591  0005                     	;# 
   592  0006                     	;# 
   593  0007                     	;# 
   594  0008                     	;# 
   595  0009                     	;# 
   596  000A                     	;# 
   597  000B                     	;# 
   598  000C                     	;# 
   599  000D                     	;# 
   600  000E                     	;# 
   601  0010                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0016                     	;# 
   606  0017                     	;# 
   607  0018                     	;# 
   608  001C                     	;# 
   609  001C                     	;# 
   610  001D                     	;# 
   611  001D                     	;# 
   612  001E                     	;# 
   613  001F                     	;# 
   614  008C                     	;# 
   615  008C                     	;# 
   616  008D                     	;# 
   617  008E                     	;# 
   618  008E                     	;# 
   619  008F                     	;# 
   620  0090                     	;# 
   621  0090                     	;# 
   622  0091                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0095                     	;# 
   626  0096                     	;# 
   627  0097                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009C                     	;# 
   633  009D                     	;# 
   634  009E                     	;# 
   635  010C                     	;# 
   636  010D                     	;# 
   637  010E                     	;# 
   638  010E                     	;# 
   639  010F                     	;# 
   640  0110                     	;# 
   641  0110                     	;# 
   642  0111                     	;# 
   643  0112                     	;# 
   644  0112                     	;# 
   645  0113                     	;# 
   646  0114                     	;# 
   647  0114                     	;# 
   648  0115                     	;# 
   649  0116                     	;# 
   650  0116                     	;# 
   651  0117                     	;# 
   652  0119                     	;# 
   653  0119                     	;# 
   654  0119                     	;# 
   655  011A                     	;# 
   656  011A                     	;# 
   657  011A                     	;# 
   658  011B                     	;# 
   659  011B                     	;# 
   660  011B                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011C                     	;# 
   664  011C                     	;# 
   665  011C                     	;# 
   666  011D                     	;# 
   667  011D                     	;# 
   668  011D                     	;# 
   669  011E                     	;# 
   670  011E                     	;# 
   671  011E                     	;# 
   672  011F                     	;# 
   673  011F                     	;# 
   674  011F                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  018C                     	;# 
   678  018D                     	;# 
   679  018E                     	;# 
   680  018F                     	;# 
   681  0190                     	;# 
   682  0191                     	;# 
   683  0192                     	;# 
   684  0196                     	;# 
   685  0197                     	;# 
   686  0198                     	;# 
   687  0199                     	;# 
   688  019A                     	;# 
   689  019B                     	;# 
   690  019C                     	;# 
   691  020C                     	;# 
   692  020C                     	;# 
   693  020D                     	;# 
   694  020E                     	;# 
   695  020F                     	;# 
   696  020F                     	;# 
   697  0210                     	;# 
   698  0210                     	;# 
   699  0211                     	;# 
   700  0211                     	;# 
   701  0212                     	;# 
   702  0212                     	;# 
   703  0213                     	;# 
   704  0214                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0216                     	;# 
   708  0216                     	;# 
   709  0217                     	;# 
   710  0217                     	;# 
   711  0218                     	;# 
   712  0218                     	;# 
   713  0219                     	;# 
   714  021A                     	;# 
   715  021B                     	;# 
   716  021B                     	;# 
   717  021C                     	;# 
   718  021C                     	;# 
   719  021D                     	;# 
   720  021D                     	;# 
   721  021E                     	;# 
   722  021F                     	;# 
   723  028C                     	;# 
   724  028C                     	;# 
   725  028D                     	;# 
   726  028D                     	;# 
   727  028E                     	;# 
   728  028F                     	;# 
   729  0290                     	;# 
   730  0290                     	;# 
   731  0291                     	;# 
   732  0292                     	;# 
   733  0292                     	;# 
   734  0293                     	;# 
   735  0293                     	;# 
   736  0294                     	;# 
   737  0295                     	;# 
   738  0296                     	;# 
   739  0296                     	;# 
   740  0297                     	;# 
   741  0298                     	;# 
   742  0298                     	;# 
   743  0299                     	;# 
   744  0299                     	;# 
   745  029A                     	;# 
   746  029B                     	;# 
   747  029C                     	;# 
   748  029C                     	;# 
   749  029D                     	;# 
   750  030C                     	;# 
   751  030C                     	;# 
   752  030D                     	;# 
   753  030E                     	;# 
   754  030F                     	;# 
   755  0310                     	;# 
   756  0310                     	;# 
   757  0311                     	;# 
   758  0312                     	;# 
   759  0313                     	;# 
   760  0314                     	;# 
   761  0314                     	;# 
   762  0315                     	;# 
   763  0316                     	;# 
   764  0317                     	;# 
   765  0318                     	;# 
   766  0318                     	;# 
   767  0319                     	;# 
   768  031A                     	;# 
   769  031B                     	;# 
   770  031C                     	;# 
   771  031C                     	;# 
   772  031D                     	;# 
   773  031E                     	;# 
   774  031F                     	;# 
   775  038C                     	;# 
   776  038D                     	;# 
   777  038E                     	;# 
   778  0390                     	;# 
   779  0391                     	;# 
   780  0392                     	;# 
   781  040C                     	;# 
   782  040D                     	;# 
   783  040E                     	;# 
   784  040F                     	;# 
   785  0410                     	;# 
   786  0411                     	;# 
   787  0416                     	;# 
   788  0416                     	;# 
   789  0417                     	;# 
   790  0418                     	;# 
   791  0418                     	;# 
   792  0419                     	;# 
   793  041A                     	;# 
   794  041A                     	;# 
   795  041B                     	;# 
   796  041C                     	;# 
   797  041C                     	;# 
   798  041D                     	;# 
   799  041E                     	;# 
   800  041F                     	;# 
   801  048C                     	;# 
   802  048C                     	;# 
   803  048D                     	;# 
   804  048E                     	;# 
   805  048F                     	;# 
   806  048F                     	;# 
   807  0490                     	;# 
   808  0491                     	;# 
   809  0492                     	;# 
   810  0492                     	;# 
   811  0493                     	;# 
   812  0494                     	;# 
   813  0495                     	;# 
   814  0495                     	;# 
   815  0496                     	;# 
   816  0497                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049C                     	;# 
   822  049D                     	;# 
   823  050C                     	;# 
   824  050C                     	;# 
   825  050D                     	;# 
   826  050E                     	;# 
   827  050F                     	;# 
   828  050F                     	;# 
   829  0510                     	;# 
   830  0511                     	;# 
   831  0512                     	;# 
   832  0512                     	;# 
   833  0513                     	;# 
   834  0514                     	;# 
   835  0515                     	;# 
   836  0515                     	;# 
   837  0516                     	;# 
   838  0517                     	;# 
   839  0518                     	;# 
   840  0519                     	;# 
   841  051A                     	;# 
   842  051B                     	;# 
   843  051C                     	;# 
   844  051D                     	;# 
   845  058C                     	;# 
   846  058C                     	;# 
   847  058D                     	;# 
   848  058E                     	;# 
   849  058F                     	;# 
   850  058F                     	;# 
   851  0590                     	;# 
   852  0591                     	;# 
   853  0592                     	;# 
   854  0593                     	;# 
   855  060C                     	;# 
   856  060D                     	;# 
   857  060E                     	;# 
   858  060F                     	;# 
   859  0610                     	;# 
   860  0611                     	;# 
   861  0612                     	;# 
   862  0613                     	;# 
   863  0614                     	;# 
   864  0616                     	;# 
   865  0617                     	;# 
   866  0618                     	;# 
   867  0619                     	;# 
   868  061A                     	;# 
   869  061B                     	;# 
   870  061C                     	;# 
   871  061D                     	;# 
   872  061E                     	;# 
   873  068C                     	;# 
   874  068D                     	;# 
   875  068E                     	;# 
   876  068F                     	;# 
   877  0690                     	;# 
   878  0691                     	;# 
   879  0692                     	;# 
   880  0693                     	;# 
   881  0694                     	;# 
   882  070C                     	;# 
   883  070D                     	;# 
   884  070E                     	;# 
   885  070F                     	;# 
   886  0710                     	;# 
   887  0711                     	;# 
   888  0712                     	;# 
   889  0713                     	;# 
   890  0714                     	;# 
   891  0716                     	;# 
   892  0717                     	;# 
   893  0718                     	;# 
   894  0719                     	;# 
   895  071A                     	;# 
   896  071B                     	;# 
   897  071C                     	;# 
   898  071D                     	;# 
   899  071E                     	;# 
   900  0796                     	;# 
   901  0797                     	;# 
   902  0798                     	;# 
   903  0799                     	;# 
   904  079A                     	;# 
   905  079B                     	;# 
   906  080C                     	;# 
   907  080D                     	;# 
   908  080E                     	;# 
   909  080F                     	;# 
   910  0810                     	;# 
   911  0811                     	;# 
   912  0812                     	;# 
   913  0813                     	;# 
   914  0814                     	;# 
   915  081A                     	;# 
   916  081B                     	;# 
   917  081C                     	;# 
   918  081D                     	;# 
   919  081E                     	;# 
   920  081F                     	;# 
   921  088C                     	;# 
   922  088D                     	;# 
   923  088E                     	;# 
   924  088F                     	;# 
   925  0890                     	;# 
   926  0891                     	;# 
   927  0892                     	;# 
   928  0893                     	;# 
   929  0895                     	;# 
   930  0896                     	;# 
   931  0897                     	;# 
   932  0898                     	;# 
   933  0899                     	;# 
   934  089A                     	;# 
   935  089B                     	;# 
   936  090C                     	;# 
   937  090E                     	;# 
   938  090F                     	;# 
   939  091F                     	;# 
   940  091F                     	;# 
   941  098F                     	;# 
   942  098F                     	;# 
   943  0990                     	;# 
   944  0991                     	;# 
   945  0992                     	;# 
   946  0993                     	;# 
   947  0994                     	;# 
   948  0995                     	;# 
   949  0996                     	;# 
   950  0997                     	;# 
   951  0E0F                     	;# 
   952  0E10                     	;# 
   953  0E11                     	;# 
   954  0E12                     	;# 
   955  0E13                     	;# 
   956  0E14                     	;# 
   957  0E15                     	;# 
   958  0E16                     	;# 
   959  0E17                     	;# 
   960  0E18                     	;# 
   961  0E19                     	;# 
   962  0E1A                     	;# 
   963  0E1B                     	;# 
   964  0E1C                     	;# 
   965  0E1D                     	;# 
   966  0E1E                     	;# 
   967  0E1F                     	;# 
   968  0E20                     	;# 
   969  0E21                     	;# 
   970  0E22                     	;# 
   971  0E23                     	;# 
   972  0E24                     	;# 
   973  0E25                     	;# 
   974  0E26                     	;# 
   975  0E27                     	;# 
   976  0E28                     	;# 
   977  0E29                     	;# 
   978  0E2A                     	;# 
   979  0E2B                     	;# 
   980  0E2C                     	;# 
   981  0E2D                     	;# 
   982  0E2E                     	;# 
   983  0E2F                     	;# 
   984  0E30                     	;# 
   985  0E31                     	;# 
   986  0E32                     	;# 
   987  0E33                     	;# 
   988  0E34                     	;# 
   989  0E35                     	;# 
   990  0E36                     	;# 
   991  0E37                     	;# 
   992  0E8F                     	;# 
   993  0E90                     	;# 
   994  0E91                     	;# 
   995  0E92                     	;# 
   996  0E93                     	;# 
   997  0E94                     	;# 
   998  0E95                     	;# 
   999  0E96                     	;# 
  1000  0E97                     	;# 
  1001  0E9C                     	;# 
  1002  0E9D                     	;# 
  1003  0E9E                     	;# 
  1004  0EA1                     	;# 
  1005  0EA2                     	;# 
  1006  0EA3                     	;# 
  1007  0EA4                     	;# 
  1008  0EA5                     	;# 
  1009  0EA9                     	;# 
  1010  0EAA                     	;# 
  1011  0EAB                     	;# 
  1012  0EAC                     	;# 
  1013  0EB1                     	;# 
  1014  0EB2                     	;# 
  1015  0EB3                     	;# 
  1016  0EB8                     	;# 
  1017  0EB9                     	;# 
  1018  0EBA                     	;# 
  1019  0EBB                     	;# 
  1020  0EBC                     	;# 
  1021  0EBD                     	;# 
  1022  0EBE                     	;# 
  1023  0EC3                     	;# 
  1024  0EC5                     	;# 
  1025  0EC6                     	;# 
  1026  0EC7                     	;# 
  1027  0EC8                     	;# 
  1028  0EC9                     	;# 
  1029  0ECA                     	;# 
  1030  0ECB                     	;# 
  1031  0ECC                     	;# 
  1032  0F10                     	;# 
  1033  0F11                     	;# 
  1034  0F12                     	;# 
  1035  0F13                     	;# 
  1036  0F14                     	;# 
  1037  0F15                     	;# 
  1038  0F16                     	;# 
  1039  0F17                     	;# 
  1040  0F18                     	;# 
  1041  0F19                     	;# 
  1042  0F1A                     	;# 
  1043  0F1B                     	;# 
  1044  0F1C                     	;# 
  1045  0F1D                     	;# 
  1046  0F1E                     	;# 
  1047  0F1F                     	;# 
  1048  0F20                     	;# 
  1049  0F21                     	;# 
  1050  0F22                     	;# 
  1051  0F23                     	;# 
  1052  0F24                     	;# 
  1053  0F25                     	;# 
  1054  0F26                     	;# 
  1055  0F27                     	;# 
  1056  0F38                     	;# 
  1057  0F39                     	;# 
  1058  0F3A                     	;# 
  1059  0F3B                     	;# 
  1060  0F3C                     	;# 
  1061  0F3D                     	;# 
  1062  0F3E                     	;# 
  1063  0F3F                     	;# 
  1064  0F40                     	;# 
  1065  0F41                     	;# 
  1066  0F43                     	;# 
  1067  0F44                     	;# 
  1068  0F45                     	;# 
  1069  0F46                     	;# 
  1070  0F47                     	;# 
  1071  0F48                     	;# 
  1072  0F49                     	;# 
  1073  0F4A                     	;# 
  1074  0F4B                     	;# 
  1075  0F4C                     	;# 
  1076  0F4E                     	;# 
  1077  0F4F                     	;# 
  1078  0F50                     	;# 
  1079  0F51                     	;# 
  1080  0F52                     	;# 
  1081  0F53                     	;# 
  1082  0F54                     	;# 
  1083  0F55                     	;# 
  1084  0F56                     	;# 
  1085  0F57                     	;# 
  1086  0F65                     	;# 
  1087  0F68                     	;# 
  1088  0F69                     	;# 
  1089  0F6A                     	;# 
  1090  0F6B                     	;# 
  1091  0FE4                     	;# 
  1092  0FE5                     	;# 
  1093  0FE6                     	;# 
  1094  0FE7                     	;# 
  1095  0FE8                     	;# 
  1096  0FE9                     	;# 
  1097  0FEA                     	;# 
  1098  0FEB                     	;# 
  1099  0FED                     	;# 
  1100  0FEE                     	;# 
  1101  0FEF                     	;# 
  1102  0000                     	;# 
  1103  0001                     	;# 
  1104  0002                     	;# 
  1105  0003                     	;# 
  1106  0004                     	;# 
  1107  0005                     	;# 
  1108  0006                     	;# 
  1109  0007                     	;# 
  1110  0008                     	;# 
  1111  0009                     	;# 
  1112  000A                     	;# 
  1113  000B                     	;# 
  1114  000C                     	;# 
  1115  000D                     	;# 
  1116  000E                     	;# 
  1117  0010                     	;# 
  1118  0011                     	;# 
  1119  0012                     	;# 
  1120  0013                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  001C                     	;# 
  1125  001C                     	;# 
  1126  001D                     	;# 
  1127  001D                     	;# 
  1128  001E                     	;# 
  1129  001F                     	;# 
  1130  008C                     	;# 
  1131  008C                     	;# 
  1132  008D                     	;# 
  1133  008E                     	;# 
  1134  008E                     	;# 
  1135  008F                     	;# 
  1136  0090                     	;# 
  1137  0090                     	;# 
  1138  0091                     	;# 
  1139  0093                     	;# 
  1140  0094                     	;# 
  1141  0095                     	;# 
  1142  0096                     	;# 
  1143  0097                     	;# 
  1144  0098                     	;# 
  1145  0099                     	;# 
  1146  009A                     	;# 
  1147  009B                     	;# 
  1148  009C                     	;# 
  1149  009D                     	;# 
  1150  009E                     	;# 
  1151  010C                     	;# 
  1152  010D                     	;# 
  1153  010E                     	;# 
  1154  010E                     	;# 
  1155  010F                     	;# 
  1156  0110                     	;# 
  1157  0110                     	;# 
  1158  0111                     	;# 
  1159  0112                     	;# 
  1160  0112                     	;# 
  1161  0113                     	;# 
  1162  0114                     	;# 
  1163  0114                     	;# 
  1164  0115                     	;# 
  1165  0116                     	;# 
  1166  0116                     	;# 
  1167  0117                     	;# 
  1168  0119                     	;# 
  1169  0119                     	;# 
  1170  0119                     	;# 
  1171  011A                     	;# 
  1172  011A                     	;# 
  1173  011A                     	;# 
  1174  011B                     	;# 
  1175  011B                     	;# 
  1176  011B                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011C                     	;# 
  1180  011C                     	;# 
  1181  011C                     	;# 
  1182  011D                     	;# 
  1183  011D                     	;# 
  1184  011D                     	;# 
  1185  011E                     	;# 
  1186  011E                     	;# 
  1187  011E                     	;# 
  1188  011F                     	;# 
  1189  011F                     	;# 
  1190  011F                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  018C                     	;# 
  1194  018D                     	;# 
  1195  018E                     	;# 
  1196  018F                     	;# 
  1197  0190                     	;# 
  1198  0191                     	;# 
  1199  0192                     	;# 
  1200  0196                     	;# 
  1201  0197                     	;# 
  1202  0198                     	;# 
  1203  0199                     	;# 
  1204  019A                     	;# 
  1205  019B                     	;# 
  1206  019C                     	;# 
  1207  020C                     	;# 
  1208  020C                     	;# 
  1209  020D                     	;# 
  1210  020E                     	;# 
  1211  020F                     	;# 
  1212  020F                     	;# 
  1213  0210                     	;# 
  1214  0210                     	;# 
  1215  0211                     	;# 
  1216  0211                     	;# 
  1217  0212                     	;# 
  1218  0212                     	;# 
  1219  0213                     	;# 
  1220  0214                     	;# 
  1221  0215                     	;# 
  1222  0215                     	;# 
  1223  0216                     	;# 
  1224  0216                     	;# 
  1225  0217                     	;# 
  1226  0217                     	;# 
  1227  0218                     	;# 
  1228  0218                     	;# 
  1229  0219                     	;# 
  1230  021A                     	;# 
  1231  021B                     	;# 
  1232  021B                     	;# 
  1233  021C                     	;# 
  1234  021C                     	;# 
  1235  021D                     	;# 
  1236  021D                     	;# 
  1237  021E                     	;# 
  1238  021F                     	;# 
  1239  028C                     	;# 
  1240  028C                     	;# 
  1241  028D                     	;# 
  1242  028D                     	;# 
  1243  028E                     	;# 
  1244  028F                     	;# 
  1245  0290                     	;# 
  1246  0290                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0292                     	;# 
  1250  0293                     	;# 
  1251  0293                     	;# 
  1252  0294                     	;# 
  1253  0295                     	;# 
  1254  0296                     	;# 
  1255  0296                     	;# 
  1256  0297                     	;# 
  1257  0298                     	;# 
  1258  0298                     	;# 
  1259  0299                     	;# 
  1260  0299                     	;# 
  1261  029A                     	;# 
  1262  029B                     	;# 
  1263  029C                     	;# 
  1264  029C                     	;# 
  1265  029D                     	;# 
  1266  030C                     	;# 
  1267  030C                     	;# 
  1268  030D                     	;# 
  1269  030E                     	;# 
  1270  030F                     	;# 
  1271  0310                     	;# 
  1272  0310                     	;# 
  1273  0311                     	;# 
  1274  0312                     	;# 
  1275  0313                     	;# 
  1276  0314                     	;# 
  1277  0314                     	;# 
  1278  0315                     	;# 
  1279  0316                     	;# 
  1280  0317                     	;# 
  1281  0318                     	;# 
  1282  0318                     	;# 
  1283  0319                     	;# 
  1284  031A                     	;# 
  1285  031B                     	;# 
  1286  031C                     	;# 
  1287  031C                     	;# 
  1288  031D                     	;# 
  1289  031E                     	;# 
  1290  031F                     	;# 
  1291  038C                     	;# 
  1292  038D                     	;# 
  1293  038E                     	;# 
  1294  0390                     	;# 
  1295  0391                     	;# 
  1296  0392                     	;# 
  1297  040C                     	;# 
  1298  040D                     	;# 
  1299  040E                     	;# 
  1300  040F                     	;# 
  1301  0410                     	;# 
  1302  0411                     	;# 
  1303  0416                     	;# 
  1304  0416                     	;# 
  1305  0417                     	;# 
  1306  0418                     	;# 
  1307  0418                     	;# 
  1308  0419                     	;# 
  1309  041A                     	;# 
  1310  041A                     	;# 
  1311  041B                     	;# 
  1312  041C                     	;# 
  1313  041C                     	;# 
  1314  041D                     	;# 
  1315  041E                     	;# 
  1316  041F                     	;# 
  1317  048C                     	;# 
  1318  048C                     	;# 
  1319  048D                     	;# 
  1320  048E                     	;# 
  1321  048F                     	;# 
  1322  048F                     	;# 
  1323  0490                     	;# 
  1324  0491                     	;# 
  1325  0492                     	;# 
  1326  0492                     	;# 
  1327  0493                     	;# 
  1328  0494                     	;# 
  1329  0495                     	;# 
  1330  0495                     	;# 
  1331  0496                     	;# 
  1332  0497                     	;# 
  1333  0498                     	;# 
  1334  0499                     	;# 
  1335  049A                     	;# 
  1336  049B                     	;# 
  1337  049C                     	;# 
  1338  049D                     	;# 
  1339  050C                     	;# 
  1340  050C                     	;# 
  1341  050D                     	;# 
  1342  050E                     	;# 
  1343  050F                     	;# 
  1344  050F                     	;# 
  1345  0510                     	;# 
  1346  0511                     	;# 
  1347  0512                     	;# 
  1348  0512                     	;# 
  1349  0513                     	;# 
  1350  0514                     	;# 
  1351  0515                     	;# 
  1352  0515                     	;# 
  1353  0516                     	;# 
  1354  0517                     	;# 
  1355  0518                     	;# 
  1356  0519                     	;# 
  1357  051A                     	;# 
  1358  051B                     	;# 
  1359  051C                     	;# 
  1360  051D                     	;# 
  1361  058C                     	;# 
  1362  058C                     	;# 
  1363  058D                     	;# 
  1364  058E                     	;# 
  1365  058F                     	;# 
  1366  058F                     	;# 
  1367  0590                     	;# 
  1368  0591                     	;# 
  1369  0592                     	;# 
  1370  0593                     	;# 
  1371  060C                     	;# 
  1372  060D                     	;# 
  1373  060E                     	;# 
  1374  060F                     	;# 
  1375  0610                     	;# 
  1376  0611                     	;# 
  1377  0612                     	;# 
  1378  0613                     	;# 
  1379  0614                     	;# 
  1380  0616                     	;# 
  1381  0617                     	;# 
  1382  0618                     	;# 
  1383  0619                     	;# 
  1384  061A                     	;# 
  1385  061B                     	;# 
  1386  061C                     	;# 
  1387  061D                     	;# 
  1388  061E                     	;# 
  1389  068C                     	;# 
  1390  068D                     	;# 
  1391  068E                     	;# 
  1392  068F                     	;# 
  1393  0690                     	;# 
  1394  0691                     	;# 
  1395  0692                     	;# 
  1396  0693                     	;# 
  1397  0694                     	;# 
  1398  070C                     	;# 
  1399  070D                     	;# 
  1400  070E                     	;# 
  1401  070F                     	;# 
  1402  0710                     	;# 
  1403  0711                     	;# 
  1404  0712                     	;# 
  1405  0713                     	;# 
  1406  0714                     	;# 
  1407  0716                     	;# 
  1408  0717                     	;# 
  1409  0718                     	;# 
  1410  0719                     	;# 
  1411  071A                     	;# 
  1412  071B                     	;# 
  1413  071C                     	;# 
  1414  071D                     	;# 
  1415  071E                     	;# 
  1416  0796                     	;# 
  1417  0797                     	;# 
  1418  0798                     	;# 
  1419  0799                     	;# 
  1420  079A                     	;# 
  1421  079B                     	;# 
  1422  080C                     	;# 
  1423  080D                     	;# 
  1424  080E                     	;# 
  1425  080F                     	;# 
  1426  0810                     	;# 
  1427  0811                     	;# 
  1428  0812                     	;# 
  1429  0813                     	;# 
  1430  0814                     	;# 
  1431  081A                     	;# 
  1432  081B                     	;# 
  1433  081C                     	;# 
  1434  081D                     	;# 
  1435  081E                     	;# 
  1436  081F                     	;# 
  1437  088C                     	;# 
  1438  088D                     	;# 
  1439  088E                     	;# 
  1440  088F                     	;# 
  1441  0890                     	;# 
  1442  0891                     	;# 
  1443  0892                     	;# 
  1444  0893                     	;# 
  1445  0895                     	;# 
  1446  0896                     	;# 
  1447  0897                     	;# 
  1448  0898                     	;# 
  1449  0899                     	;# 
  1450  089A                     	;# 
  1451  089B                     	;# 
  1452  090C                     	;# 
  1453  090E                     	;# 
  1454  090F                     	;# 
  1455  091F                     	;# 
  1456  091F                     	;# 
  1457  098F                     	;# 
  1458  098F                     	;# 
  1459  0990                     	;# 
  1460  0991                     	;# 
  1461  0992                     	;# 
  1462  0993                     	;# 
  1463  0994                     	;# 
  1464  0995                     	;# 
  1465  0996                     	;# 
  1466  0997                     	;# 
  1467  0E0F                     	;# 
  1468  0E10                     	;# 
  1469  0E11                     	;# 
  1470  0E12                     	;# 
  1471  0E13                     	;# 
  1472  0E14                     	;# 
  1473  0E15                     	;# 
  1474  0E16                     	;# 
  1475  0E17                     	;# 
  1476  0E18                     	;# 
  1477  0E19                     	;# 
  1478  0E1A                     	;# 
  1479  0E1B                     	;# 
  1480  0E1C                     	;# 
  1481  0E1D                     	;# 
  1482  0E1E                     	;# 
  1483  0E1F                     	;# 
  1484  0E20                     	;# 
  1485  0E21                     	;# 
  1486  0E22                     	;# 
  1487  0E23                     	;# 
  1488  0E24                     	;# 
  1489  0E25                     	;# 
  1490  0E26                     	;# 
  1491  0E27                     	;# 
  1492  0E28                     	;# 
  1493  0E29                     	;# 
  1494  0E2A                     	;# 
  1495  0E2B                     	;# 
  1496  0E2C                     	;# 
  1497  0E2D                     	;# 
  1498  0E2E                     	;# 
  1499  0E2F                     	;# 
  1500  0E30                     	;# 
  1501  0E31                     	;# 
  1502  0E32                     	;# 
  1503  0E33                     	;# 
  1504  0E34                     	;# 
  1505  0E35                     	;# 
  1506  0E36                     	;# 
  1507  0E37                     	;# 
  1508  0E8F                     	;# 
  1509  0E90                     	;# 
  1510  0E91                     	;# 
  1511  0E92                     	;# 
  1512  0E93                     	;# 
  1513  0E94                     	;# 
  1514  0E95                     	;# 
  1515  0E96                     	;# 
  1516  0E97                     	;# 
  1517  0E9C                     	;# 
  1518  0E9D                     	;# 
  1519  0E9E                     	;# 
  1520  0EA1                     	;# 
  1521  0EA2                     	;# 
  1522  0EA3                     	;# 
  1523  0EA4                     	;# 
  1524  0EA5                     	;# 
  1525  0EA9                     	;# 
  1526  0EAA                     	;# 
  1527  0EAB                     	;# 
  1528  0EAC                     	;# 
  1529  0EB1                     	;# 
  1530  0EB2                     	;# 
  1531  0EB3                     	;# 
  1532  0EB8                     	;# 
  1533  0EB9                     	;# 
  1534  0EBA                     	;# 
  1535  0EBB                     	;# 
  1536  0EBC                     	;# 
  1537  0EBD                     	;# 
  1538  0EBE                     	;# 
  1539  0EC3                     	;# 
  1540  0EC5                     	;# 
  1541  0EC6                     	;# 
  1542  0EC7                     	;# 
  1543  0EC8                     	;# 
  1544  0EC9                     	;# 
  1545  0ECA                     	;# 
  1546  0ECB                     	;# 
  1547  0ECC                     	;# 
  1548  0F10                     	;# 
  1549  0F11                     	;# 
  1550  0F12                     	;# 
  1551  0F13                     	;# 
  1552  0F14                     	;# 
  1553  0F15                     	;# 
  1554  0F16                     	;# 
  1555  0F17                     	;# 
  1556  0F18                     	;# 
  1557  0F19                     	;# 
  1558  0F1A                     	;# 
  1559  0F1B                     	;# 
  1560  0F1C                     	;# 
  1561  0F1D                     	;# 
  1562  0F1E                     	;# 
  1563  0F1F                     	;# 
  1564  0F20                     	;# 
  1565  0F21                     	;# 
  1566  0F22                     	;# 
  1567  0F23                     	;# 
  1568  0F24                     	;# 
  1569  0F25                     	;# 
  1570  0F26                     	;# 
  1571  0F27                     	;# 
  1572  0F38                     	;# 
  1573  0F39                     	;# 
  1574  0F3A                     	;# 
  1575  0F3B                     	;# 
  1576  0F3C                     	;# 
  1577  0F3D                     	;# 
  1578  0F3E                     	;# 
  1579  0F3F                     	;# 
  1580  0F40                     	;# 
  1581  0F41                     	;# 
  1582  0F43                     	;# 
  1583  0F44                     	;# 
  1584  0F45                     	;# 
  1585  0F46                     	;# 
  1586  0F47                     	;# 
  1587  0F48                     	;# 
  1588  0F49                     	;# 
  1589  0F4A                     	;# 
  1590  0F4B                     	;# 
  1591  0F4C                     	;# 
  1592  0F4E                     	;# 
  1593  0F4F                     	;# 
  1594  0F50                     	;# 
  1595  0F51                     	;# 
  1596  0F52                     	;# 
  1597  0F53                     	;# 
  1598  0F54                     	;# 
  1599  0F55                     	;# 
  1600  0F56                     	;# 
  1601  0F57                     	;# 
  1602  0F65                     	;# 
  1603  0F68                     	;# 
  1604  0F69                     	;# 
  1605  0F6A                     	;# 
  1606  0F6B                     	;# 
  1607  0FE4                     	;# 
  1608  0FE5                     	;# 
  1609  0FE6                     	;# 
  1610  0FE7                     	;# 
  1611  0FE8                     	;# 
  1612  0FE9                     	;# 
  1613  0FEA                     	;# 
  1614  0FEB                     	;# 
  1615  0FED                     	;# 
  1616  0FEE                     	;# 
  1617  0FEF                     	;# 
  1618                           
  1619                           	psect	idataBANK1
  1620  06F3                     __pidataBANK1:	
  1621                           
  1622                           ;initializer for _char_lookup
  1623  06F3  34BE               	retlw	190
  1624  06F4  3482               	retlw	130
  1625  06F5  3437               	retlw	55
  1626  06F6  34A7               	retlw	167
  1627  06F7  348B               	retlw	139
  1628  06F8  34AD               	retlw	173
  1629  06F9  34BD               	retlw	189
  1630  06FA  3486               	retlw	134
  1631  06FB  34BF               	retlw	191
  1632  06FC  34AF               	retlw	175
  1633  0018                     _LATC	set	24
  1634  0017                     _LATBbits	set	23
  1635  000B                     _INTCONbits	set	11
  1636  000D                     _PORTBbits	set	13
  1637  0016                     _LATAbits	set	22
  1638  000C                     _PORTAbits	set	12
  1639  0012                     _TRISBbits	set	18
  1640  0013                     _TRISCbits	set	19
  1641  0011                     _TRISAbits	set	17
  1642  020E                     _T1CONbits	set	526
  1643  0211                     _T1CLKbits	set	529
  1644  028D                     _PR2	set	653
  1645  028E                     _T2CONbits	set	654
  1646  0290                     _T2CLKCONbits	set	656
  1647  0310                     _CCPR2L	set	784
  1648  0311                     _CCPR2H	set	785
  1649  030C                     _CCPR1L	set	780
  1650  030D                     _CCPR1H	set	781
  1651  0313                     _CCP2CAPbits	set	787
  1652  0312                     _CCP2CONbits	set	786
  1653  030F                     _CCP1CAPbits	set	783
  1654  030E                     _CCP1CONbits	set	782
  1655  071C                     _PIE6bits	set	1820
  1656  071A                     _PIE4bits	set	1818
  1657  0710                     _PIR4bits	set	1808
  1658  0712                     _PIR6bits	set	1810
  1659  0EA2                     _CCP2PPS	set	3746
  1660  0EA1                     _CCP1PPS	set	3745
  1661  0E8F                     _PPSLOCKbits	set	3727
  1662  0E8F                     _PPSLOCK	set	3727
  1663  0F43                     _ANSELBbits	set	3907
  1664  0F38                     _ANSELAbits	set	3896
  1665                           
  1666                           ; #config settings
  1667  0000                     
  1668                           	psect	cinit
  1669  002B                     start_initialization:	
  1670  002B                     __initialization:	
  1671                           
  1672                           ; Initialize objects allocated to BANK1
  1673  002B  30F3               	movlw	low __pidataBANK1
  1674  002C  0084               	movwf	4
  1675  002D  3086               	movlw	(high __pidataBANK1)| (0+128)
  1676  002E  0085               	movwf	5
  1677  002F  30A0               	movlw	low __pdataBANK1
  1678  0030  0086               	movwf	6
  1679  0031  3000               	movlw	high __pdataBANK1
  1680  0032  0087               	movwf	7
  1681  0033  300A               	movlw	10
  1682  0034  3186  26FD  3180   	fcall	init_ram
  1683                           
  1684                           ; Clear objects allocated to COMMON
  1685  0037  01F6               	clrf	__pbssCOMMON& (0+127)
  1686  0038  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1687  0039  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1688  003A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1689  003B  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  1690                           
  1691                           ; Clear objects allocated to BANK0
  1692  003C  3053               	movlw	low __pbssBANK0
  1693  003D  0084               	movwf	4
  1694  003E  3000               	movlw	high __pbssBANK0
  1695  003F  0085               	movwf	5
  1696  0040  301C               	movlw	28
  1697  0041  3187  2703  3180   	fcall	clear_ram0
  1698                           
  1699                           ; Clear objects allocated to BANK1
  1700  0044  30AA               	movlw	low __pbssBANK1
  1701  0045  0084               	movwf	4
  1702  0046  3000               	movlw	high __pbssBANK1
  1703  0047  0085               	movwf	5
  1704  0048  3008               	movlw	8
  1705  0049  3187  2703         	fcall	clear_ram0
  1706  004B                     end_of_initialization:	
  1707                           ;End of C runtime variable initialization code
  1708                           
  1709  004B                     __end_of__initialization:	
  1710  004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1711  004C  0020               	movlb	0
  1712  004D  3184  2CFD         	ljmp	_main	;jump to C main() function
  1713                           
  1714                           	psect	bssCOMMON
  1715  0076                     __pbssCOMMON:	
  1716  0076                     _rollover_cnt:	
  1717  0076                     	ds	2
  1718  0078                     _timer_value:	
  1719  0078                     	ds	2
  1720  007A                     _segment:	
  1721  007A                     	ds	1
  1722                           
  1723                           	psect	bssBANK0
  1724  0053                     __pbssBANK0:	
  1725  0053                     _os:	
  1726  0053                     	ds	28
  1727                           
  1728                           	psect	bssBANK1
  1729  00AA                     __pbssBANK1:	
  1730  00AA                     _time:	
  1731  00AA                     	ds	4
  1732  00AE                     _characters:	
  1733  00AE                     	ds	4
  1734                           
  1735                           	psect	dataBANK1
  1736  00A0                     __pdataBANK1:	
  1737  00A0                     _char_lookup:	
  1738  00A0                     	ds	10
  1739                           
  1740                           	psect	inittext
  1741  06FD                     init_ram:	
  1742  06FD  00FE               	movwf	126
  1743  06FE                     initloop:	
  1744  06FE  0012               	moviw fsr0++
  1745  06FF  001E               	movwi fsr1++
  1746  0700  0BFE               	decfsz	126,f
  1747  0701  2EFE               	goto	initloop
  1748  0702  3400               	retlw	0
  1749                           
  1750                           	psect	clrtext
  1751  0703                     clear_ram0:	
  1752                           ;	Called with FSR0 containing the base address, and
  1753                           ;	WREG with the size to clear
  1754                           
  1755  0703  0064               	clrwdt	;clear the watchdog before getting into this loop
  1756  0704                     clrloop0:	
  1757  0704  0180               	clrf	0	;clear RAM location pointed to by FSR
  1758  0705  3101               	addfsr 0,1
  1759  0706  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1760  0707  2F04               	goto	clrloop0	;have we reached the end yet?
  1761  0708  3400               	retlw	0	;all done for this memory range, return
  1762                           
  1763                           	psect	cstackBANK1
  1764  00B2                     __pcstackBANK1:	
  1765  00B2                     main@cntr:	
  1766                           
  1767                           ; 2 bytes @ 0x0
  1768  00B2                     	ds	2
  1769                           
  1770                           	psect	cstackCOMMON
  1771  0070                     __pcstackCOMMON:	
  1772  0070                     ?__system_init:	
  1773  0070                     ?__handle_relays:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776  0070                     ?__calculate_speed:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779  0070                     ?_capture_isr:	
  1780                           ; 1 bytes @ 0x0
  1781                           
  1782  0070                     ??_capture_isr:	
  1783                           ; 1 bytes @ 0x0
  1784                           
  1785  0070                     ?_timer_1_isr:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788  0070                     ??_timer_1_isr:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791  0070                     ?_display_update:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794  0070                     ??_display_update:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797  0070                     ?_display_init:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800  0070                     ?_encoder_init:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803  0070                     ?_main:	
  1804                           ; 1 bytes @ 0x0
  1805                           
  1806  0070                     ?__isr:	
  1807                           ; 1 bytes @ 0x0
  1808                           
  1809                           
  1810                           ; 1 bytes @ 0x0
  1811  0070                     	ds	4
  1812  0074                     ??__isr:	
  1813                           
  1814                           ; 1 bytes @ 0x4
  1815  0074                     	ds	2
  1816                           
  1817                           	psect	cstackBANK0
  1818  0020                     __pcstackBANK0:	
  1819  0020                     ??__handle_relays:	
  1820  0020                     ??_display_init:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823  0020                     ??_encoder_init:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826  0020                     ?___lwdiv:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829  0020                     ?___lwmod:	
  1830                           ; 2 bytes @ 0x0
  1831                           
  1832  0020                     ?___ftpack:	
  1833                           ; 2 bytes @ 0x0
  1834                           
  1835  0020                     ?___lmul:	
  1836                           ; 3 bytes @ 0x0
  1837                           
  1838  0020                     ?___fttol:	
  1839                           ; 4 bytes @ 0x0
  1840                           
  1841  0020                     ___lwdiv@divisor:	
  1842                           ; 4 bytes @ 0x0
  1843                           
  1844  0020                     ___lwmod@divisor:	
  1845                           ; 2 bytes @ 0x0
  1846                           
  1847  0020                     ___ftpack@arg:	
  1848                           ; 2 bytes @ 0x0
  1849                           
  1850  0020                     ___fttol@f1:	
  1851                           ; 3 bytes @ 0x0
  1852                           
  1853  0020                     ___lmul@multiplier:	
  1854                           ; 3 bytes @ 0x0
  1855                           
  1856                           
  1857                           ; 4 bytes @ 0x0
  1858  0020                     	ds	1
  1859  0021                     ??__system_init:	
  1860                           
  1861                           ; 1 bytes @ 0x1
  1862  0021                     	ds	1
  1863  0022                     ___lwdiv@dividend:	
  1864  0022                     ___lwmod@dividend:	
  1865                           ; 2 bytes @ 0x2
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x2
  1869  0022                     	ds	1
  1870  0023                     ___ftpack@exp:	
  1871                           
  1872                           ; 1 bytes @ 0x3
  1873  0023                     	ds	1
  1874  0024                     ??___fttol:	
  1875  0024                     ??___lwdiv:	
  1876                           ; 1 bytes @ 0x4
  1877                           
  1878  0024                     ??___lwmod:	
  1879                           ; 1 bytes @ 0x4
  1880                           
  1881  0024                     ___ftpack@sign:	
  1882                           ; 1 bytes @ 0x4
  1883                           
  1884  0024                     ___lmul@multiplicand:	
  1885                           ; 1 bytes @ 0x4
  1886                           
  1887                           
  1888                           ; 4 bytes @ 0x4
  1889  0024                     	ds	1
  1890  0025                     ??___ftpack:	
  1891  0025                     ___lwdiv@counter:	
  1892                           ; 1 bytes @ 0x5
  1893                           
  1894  0025                     ___lwmod@counter:	
  1895                           ; 1 bytes @ 0x5
  1896                           
  1897                           
  1898                           ; 1 bytes @ 0x5
  1899  0025                     	ds	1
  1900  0026                     ___lwdiv@quotient:	
  1901                           
  1902                           ; 2 bytes @ 0x6
  1903  0026                     	ds	2
  1904  0028                     ?_display_set:	
  1905  0028                     ??___lmul:	
  1906                           ; 1 bytes @ 0x8
  1907                           
  1908  0028                     ?___ftmul:	
  1909                           ; 1 bytes @ 0x8
  1910                           
  1911  0028                     ?___lltoft:	
  1912                           ; 3 bytes @ 0x8
  1913                           
  1914  0028                     ___fttol@sign1:	
  1915                           ; 3 bytes @ 0x8
  1916                           
  1917  0028                     display_set@value:	
  1918                           ; 1 bytes @ 0x8
  1919                           
  1920  0028                     ___ftmul@f1:	
  1921                           ; 2 bytes @ 0x8
  1922                           
  1923  0028                     ___lmul@product:	
  1924                           ; 3 bytes @ 0x8
  1925                           
  1926  0028                     ___lltoft@c:	
  1927                           ; 4 bytes @ 0x8
  1928                           
  1929                           
  1930                           ; 4 bytes @ 0x8
  1931  0028                     	ds	1
  1932  0029                     ___fttol@lval:	
  1933                           
  1934                           ; 4 bytes @ 0x9
  1935  0029                     	ds	1
  1936  002A                     ??_display_set:	
  1937                           
  1938                           ; 1 bytes @ 0xA
  1939  002A                     	ds	1
  1940  002B                     ___ftmul@f2:	
  1941                           
  1942                           ; 3 bytes @ 0xB
  1943  002B                     	ds	1
  1944  002C                     ??___lltoft:	
  1945                           
  1946                           ; 1 bytes @ 0xC
  1947  002C                     	ds	1
  1948  002D                     ___fttol@exp1:	
  1949  002D                     ___lltoft@exp:	
  1950                           ; 1 bytes @ 0xD
  1951                           
  1952                           
  1953                           ; 1 bytes @ 0xD
  1954  002D                     	ds	1
  1955  002E                     ??___ftmul:	
  1956  002E                     ?___ftdiv:	
  1957                           ; 1 bytes @ 0xE
  1958                           
  1959  002E                     ___ftdiv@f2:	
  1960                           ; 3 bytes @ 0xE
  1961                           
  1962                           
  1963                           ; 3 bytes @ 0xE
  1964  002E                     	ds	3
  1965  0031                     ___ftdiv@f1:	
  1966                           
  1967                           ; 3 bytes @ 0x11
  1968  0031                     	ds	1
  1969  0032                     ___ftmul@exp:	
  1970                           
  1971                           ; 1 bytes @ 0x12
  1972  0032                     	ds	1
  1973  0033                     ___ftmul@f3_as_product:	
  1974                           
  1975                           ; 3 bytes @ 0x13
  1976  0033                     	ds	1
  1977  0034                     ??___ftdiv:	
  1978                           
  1979                           ; 1 bytes @ 0x14
  1980  0034                     	ds	2
  1981  0036                     ___ftmul@cntr:	
  1982                           
  1983                           ; 1 bytes @ 0x16
  1984  0036                     	ds	1
  1985  0037                     ___ftmul@sign:	
  1986                           
  1987                           ; 1 bytes @ 0x17
  1988  0037                     	ds	1
  1989  0038                     ___ftdiv@cntr:	
  1990                           
  1991                           ; 1 bytes @ 0x18
  1992  0038                     	ds	1
  1993  0039                     ___ftdiv@f3:	
  1994                           
  1995                           ; 3 bytes @ 0x19
  1996  0039                     	ds	3
  1997  003C                     ___ftdiv@exp:	
  1998                           
  1999                           ; 1 bytes @ 0x1C
  2000  003C                     	ds	1
  2001  003D                     ___ftdiv@sign:	
  2002                           
  2003                           ; 1 bytes @ 0x1D
  2004  003D                     	ds	1
  2005  003E                     ??__calculate_speed:	
  2006                           
  2007                           ; 1 bytes @ 0x1E
  2008  003E                     	ds	8
  2009  0046                     __calculate_speed@time_difference:	
  2010                           
  2011                           ; 4 bytes @ 0x26
  2012  0046                     	ds	4
  2013  004A                     __calculate_speed@distance:	
  2014                           
  2015                           ; 4 bytes @ 0x2A
  2016  004A                     	ds	4
  2017  004E                     __calculate_speed@speed:	
  2018                           
  2019                           ; 3 bytes @ 0x2E
  2020  004E                     	ds	3
  2021  0051                     ??_main:	
  2022                           
  2023                           ; 1 bytes @ 0x31
  2024  0051                     	ds	2
  2025                           
  2026                           	psect	maintext
  2027  04FD                     __pmaintext:	
  2028 ;;
  2029 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2030 ;;
  2031 ;; *************** function _main *****************
  2032 ;; Defined at:
  2033 ;;		line 27 in file "main.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  cntr            2    0[BANK1 ] unsigned int 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : B1F/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2048 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2049 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2051 ;;Total ram usage:        4 bytes
  2052 ;; Hardware stack levels required when called:    5
  2053 ;; This function calls:
  2054 ;;		__calculate_speed
  2055 ;;		__handle_relays
  2056 ;;		__system_init
  2057 ;;		_display_set
  2058 ;; This function is called by:
  2059 ;;		Startup code after reset
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _main
  2065  04FD                     _main:	
  2066                           
  2067                           ;main.c: 29: uint16_t cntr;
  2068                           ;main.c: 30: _system_init();
  2069                           
  2070                           ;incstack = 0
  2071                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2072  04FD  3185  2558  3184   	fcall	__system_init
  2073                           
  2074                           ;main.c: 31: os.encoder = 0;
  2075  0500  0020               	movlb	0	; select bank0
  2076  0501  01D5               	clrf	_os+2	;volatile
  2077  0502  01D6               	clrf	_os+3	;volatile
  2078                           
  2079                           ;main.c: 32: os.encoder_last = 0;
  2080  0503  01D7               	clrf	_os+4	;volatile
  2081  0504  01D8               	clrf	_os+5	;volatile
  2082                           
  2083                           ;main.c: 33: os.encoder_difference = 0;
  2084  0505  01D9               	clrf	_os+6	;volatile
  2085  0506  01DA               	clrf	_os+7	;volatile
  2086  0507                     l2082:	
  2087                           ;main.c: 36: while(1)
  2088                           
  2089                           
  2090                           ;main.c: 37: {
  2091                           ;main.c: 38: if(!os.done)
  2092  0507  0854               	movf	_os+1,w	;volatile
  2093  0508  1D03               	btfss	3,2
  2094  0509  2D07               	goto	l2082
  2095                           
  2096                           ;main.c: 39: {
  2097                           ;main.c: 40: _handle_relays();
  2098  050A  3186  26D4  3184   	fcall	__handle_relays
  2099                           
  2100                           ;main.c: 42: if(os.ready)
  2101  050D  0020               	movlb	0	; select bank0
  2102  050E  0864               	movf	_os+17,w	;volatile
  2103  050F  1903               	btfsc	3,2
  2104  0510  2D40               	goto	l2102
  2105                           
  2106                           ;main.c: 43: {
  2107                           ;main.c: 44: _calculate_speed();
  2108  0511  3180  204F  3184   	fcall	__calculate_speed
  2109                           
  2110                           ;main.c: 45: os.ready = 0;
  2111  0514  0020               	movlb	0	; select bank0
  2112  0515  01E4               	clrf	_os+17	;volatile
  2113                           
  2114                           ;main.c: 48: if(os.speed>0)
  2115  0516  086E               	movf	_os+27,w	;volatile
  2116  0517  3A80               	xorlw	128
  2117  0518  00D1               	movwf	??_main
  2118  0519  3080               	movlw	128
  2119  051A  0251               	subwf	??_main,w
  2120  051B  1D03               	skipz
  2121  051C  2D1F               	goto	u2575
  2122  051D  3001               	movlw	1
  2123  051E  026D               	subwf	_os+26,w	;volatile
  2124  051F                     u2575:	
  2125  051F  1C03               	skipc
  2126  0520  2D2A               	goto	l2096
  2127                           
  2128                           ;main.c: 49: {
  2129                           ;main.c: 50: display_set((uint16_t) os.speed);
  2130  0521  0020               	movlb	0	; select bank0
  2131  0522  086E               	movf	_os+27,w	;volatile
  2132  0523  00A9               	movwf	display_set@value+1
  2133  0524  086D               	movf	_os+26,w	;volatile
  2134  0525  00A8               	movwf	display_set@value
  2135  0526  3183  2320  3184   	fcall	_display_set
  2136                           
  2137                           ;main.c: 51: }
  2138  0529  2D40               	goto	l2102
  2139  052A                     l2096:	
  2140                           
  2141                           ;main.c: 52: else
  2142                           ;main.c: 53: {
  2143                           ;main.c: 54: display_set((uint16_t) -os.speed);
  2144  052A  0020               	movlb	0	; select bank0
  2145  052B  096D               	comf	_os+26,w	;volatile
  2146  052C  00D1               	movwf	??_main
  2147  052D  096E               	comf	_os+27,w	;volatile
  2148  052E  00D2               	movwf	??_main+1
  2149  052F  0AD1               	incf	??_main,f
  2150  0530  1903               	skipnz
  2151  0531  0AD2               	incf	??_main+1,f
  2152  0532  0851               	movf	??_main,w
  2153  0533  00A8               	movwf	display_set@value
  2154  0534  0852               	movf	??_main+1,w
  2155  0535  00A9               	movwf	display_set@value+1
  2156  0536  3183  2320  3184   	fcall	_display_set
  2157                           
  2158                           ;main.c: 55: }
  2159                           ;main.c: 56: }
  2160                           ;main.c: 59: switch(os.timeSlot&0b00001111)
  2161  0539  2D40               	goto	l2102
  2162  053A                     l2098:	
  2163                           ;main.c: 60: {
  2164                           ;main.c: 61: case 0:
  2165                           
  2166                           
  2167                           ;main.c: 62: ++cntr;
  2168  053A  3001               	movlw	1
  2169  053B  0021               	movlb	1	; select bank1
  2170  053C  07B2               	addwf	main@cntr^(0+128),f
  2171  053D  3000               	movlw	0
  2172  053E  3DB3               	addwfc	(main@cntr+1)^(0+128),f
  2173                           
  2174                           ;main.c: 66: }
  2175                           
  2176                           ;main.c: 65: break;
  2177                           
  2178                           ;main.c: 64: case 8:
  2179                           
  2180                           ;main.c: 63: break;
  2181  053F  2D52               	goto	l2104
  2182  0540                     l2102:	
  2183  0540  0020               	movlb	0	; select bank0
  2184  0541  0853               	movf	_os,w	;volatile
  2185  0542  390F               	andlw	15
  2186  0543  00D1               	movwf	??_main
  2187  0544  01D2               	clrf	??_main+1
  2188                           
  2189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2190                           ; Switch size 1, requested type "space"
  2191                           ; Number of cases is 1, Range of values is 0 to 0
  2192                           ; switch strategies available:
  2193                           ; Name         Instructions Cycles
  2194                           ; simple_byte            4     3 (average)
  2195                           ; direct_byte            8     6 (fixed)
  2196                           ; jumptable            260     6 (fixed)
  2197                           ;	Chosen strategy is simple_byte
  2198  0545  0852               	movf	??_main+1,w
  2199  0546  3A00               	xorlw	0	; case 0
  2200  0547  1903               	skipnz
  2201  0548  2D4A               	goto	l2150
  2202  0549  2D52               	goto	l2104
  2203  054A                     l2150:	
  2204                           
  2205                           ; Switch size 1, requested type "space"
  2206                           ; Number of cases is 2, Range of values is 0 to 8
  2207                           ; switch strategies available:
  2208                           ; Name         Instructions Cycles
  2209                           ; simple_byte            7     4 (average)
  2210                           ; direct_byte           24     6 (fixed)
  2211                           ; jumptable            260     6 (fixed)
  2212                           ;	Chosen strategy is simple_byte
  2213  054A  0851               	movf	??_main,w
  2214  054B  3A00               	xorlw	0	; case 0
  2215  054C  1903               	skipnz
  2216  054D  2D3A               	goto	l2098
  2217  054E  3A08               	xorlw	8	; case 8
  2218  054F  1903               	skipnz
  2219  0550  2D52               	goto	l2104
  2220  0551  2D52               	goto	l2104
  2221  0552                     l2104:	
  2222                           
  2223                           ;main.c: 67: os.done = 1;
  2224  0552  3001               	movlw	1
  2225  0553  0020               	movlb	0	; select bank0
  2226  0554  00D1               	movwf	??_main
  2227  0555  0851               	movf	??_main,w
  2228  0556  00D4               	movwf	_os+1	;volatile
  2229  0557  2D07               	goto	l2082
  2230  0558                     __end_of_main:	
  2231                           
  2232                           	psect	text1
  2233  0320                     __ptext1:	
  2234 ;; *************** function _display_set *****************
  2235 ;; Defined at:
  2236 ;;		line 57 in file "display.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  value           2    8[BANK0 ] unsigned int 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;Total ram usage:        3 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    3
  2257 ;; This function calls:
  2258 ;;		___lwdiv
  2259 ;;		___lwmod
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _display_set
  2267  0320                     _display_set:	
  2268                           
  2269                           ;display.c: 60: characters[3] = char_lookup[value%10];
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _display_set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2273  0320  300A               	movlw	10
  2274  0321  0020               	movlb	0	; select bank0
  2275  0322  00A0               	movwf	___lwmod@divisor
  2276  0323  3000               	movlw	0
  2277  0324  00A1               	movwf	___lwmod@divisor+1
  2278  0325  0829               	movf	display_set@value+1,w
  2279  0326  00A3               	movwf	___lwmod@dividend+1
  2280  0327  0828               	movf	display_set@value,w
  2281  0328  00A2               	movwf	___lwmod@dividend
  2282  0329  3186  262E  3183   	fcall	___lwmod
  2283  032C  0020               	movlb	0	; select bank0
  2284  032D  0820               	movf	?___lwmod,w
  2285  032E  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2286  032F  0086               	movwf	6
  2287  0330  0187               	clrf	7
  2288  0331  0801               	movf	1,w
  2289  0332  00AA               	movwf	??_display_set
  2290  0333  082A               	movf	??_display_set,w
  2291  0334  0021               	movlb	1	; select bank1
  2292  0335  00B1               	movwf	(_characters^(0+128)+3)
  2293                           
  2294                           ;display.c: 62: value /= 10;
  2295  0336  300A               	movlw	10
  2296  0337  0020               	movlb	0	; select bank0
  2297  0338  00A0               	movwf	___lwdiv@divisor
  2298  0339  3000               	movlw	0
  2299  033A  00A1               	movwf	___lwdiv@divisor+1
  2300  033B  0829               	movf	display_set@value+1,w
  2301  033C  00A3               	movwf	___lwdiv@dividend+1
  2302  033D  0828               	movf	display_set@value,w
  2303  033E  00A2               	movwf	___lwdiv@dividend
  2304  033F  3185  2598  3183   	fcall	___lwdiv
  2305  0342  0020               	movlb	0	; select bank0
  2306  0343  0821               	movf	?___lwdiv+1,w
  2307  0344  00A9               	movwf	display_set@value+1
  2308  0345  0820               	movf	?___lwdiv,w
  2309  0346  00A8               	movwf	display_set@value
  2310                           
  2311                           ;display.c: 63: characters[2] = char_lookup[value%10];
  2312  0347  300A               	movlw	10
  2313  0348  00A0               	movwf	___lwmod@divisor
  2314  0349  3000               	movlw	0
  2315  034A  00A1               	movwf	___lwmod@divisor+1
  2316  034B  0829               	movf	display_set@value+1,w
  2317  034C  00A3               	movwf	___lwmod@dividend+1
  2318  034D  0828               	movf	display_set@value,w
  2319  034E  00A2               	movwf	___lwmod@dividend
  2320  034F  3186  262E  3183   	fcall	___lwmod
  2321  0352  0020               	movlb	0	; select bank0
  2322  0353  0820               	movf	?___lwmod,w
  2323  0354  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2324  0355  0086               	movwf	6
  2325  0356  0187               	clrf	7
  2326  0357  0801               	movf	1,w
  2327  0358  00AA               	movwf	??_display_set
  2328  0359  082A               	movf	??_display_set,w
  2329  035A  0021               	movlb	1	; select bank1
  2330  035B  00B0               	movwf	(_characters^(0+128)+2)
  2331                           
  2332                           ;display.c: 65: value /= 10;
  2333  035C  300A               	movlw	10
  2334  035D  0020               	movlb	0	; select bank0
  2335  035E  00A0               	movwf	___lwdiv@divisor
  2336  035F  3000               	movlw	0
  2337  0360  00A1               	movwf	___lwdiv@divisor+1
  2338  0361  0829               	movf	display_set@value+1,w
  2339  0362  00A3               	movwf	___lwdiv@dividend+1
  2340  0363  0828               	movf	display_set@value,w
  2341  0364  00A2               	movwf	___lwdiv@dividend
  2342  0365  3185  2598  3183   	fcall	___lwdiv
  2343  0368  0020               	movlb	0	; select bank0
  2344  0369  0821               	movf	?___lwdiv+1,w
  2345  036A  00A9               	movwf	display_set@value+1
  2346  036B  0820               	movf	?___lwdiv,w
  2347  036C  00A8               	movwf	display_set@value
  2348                           
  2349                           ;display.c: 66: characters[1] = char_lookup[value%10];
  2350  036D  300A               	movlw	10
  2351  036E  00A0               	movwf	___lwmod@divisor
  2352  036F  3000               	movlw	0
  2353  0370  00A1               	movwf	___lwmod@divisor+1
  2354  0371  0829               	movf	display_set@value+1,w
  2355  0372  00A3               	movwf	___lwmod@dividend+1
  2356  0373  0828               	movf	display_set@value,w
  2357  0374  00A2               	movwf	___lwmod@dividend
  2358  0375  3186  262E  3183   	fcall	___lwmod
  2359  0378  0020               	movlb	0	; select bank0
  2360  0379  0820               	movf	?___lwmod,w
  2361  037A  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2362  037B  0086               	movwf	6
  2363  037C  0187               	clrf	7
  2364  037D  0801               	movf	1,w
  2365  037E  00AA               	movwf	??_display_set
  2366  037F  082A               	movf	??_display_set,w
  2367  0380  0021               	movlb	1	; select bank1
  2368  0381  00AF               	movwf	(_characters^(0+128)+1)
  2369                           
  2370                           ;display.c: 68: value /= 10;
  2371  0382  300A               	movlw	10
  2372  0383  0020               	movlb	0	; select bank0
  2373  0384  00A0               	movwf	___lwdiv@divisor
  2374  0385  3000               	movlw	0
  2375  0386  00A1               	movwf	___lwdiv@divisor+1
  2376  0387  0829               	movf	display_set@value+1,w
  2377  0388  00A3               	movwf	___lwdiv@dividend+1
  2378  0389  0828               	movf	display_set@value,w
  2379  038A  00A2               	movwf	___lwdiv@dividend
  2380  038B  3185  2598  3183   	fcall	___lwdiv
  2381  038E  0020               	movlb	0	; select bank0
  2382  038F  0821               	movf	?___lwdiv+1,w
  2383  0390  00A9               	movwf	display_set@value+1
  2384  0391  0820               	movf	?___lwdiv,w
  2385  0392  00A8               	movwf	display_set@value
  2386                           
  2387                           ;display.c: 69: characters[0] = char_lookup[value%10];
  2388  0393  300A               	movlw	10
  2389  0394  00A0               	movwf	___lwmod@divisor
  2390  0395  3000               	movlw	0
  2391  0396  00A1               	movwf	___lwmod@divisor+1
  2392  0397  0829               	movf	display_set@value+1,w
  2393  0398  00A3               	movwf	___lwmod@dividend+1
  2394  0399  0828               	movf	display_set@value,w
  2395  039A  00A2               	movwf	___lwmod@dividend
  2396  039B  3186  262E         	fcall	___lwmod
  2397  039D  0020               	movlb	0	; select bank0
  2398  039E  0820               	movf	?___lwmod,w
  2399  039F  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2400  03A0  0086               	movwf	6
  2401  03A1  0187               	clrf	7
  2402  03A2  0801               	movf	1,w
  2403  03A3  00AA               	movwf	??_display_set
  2404  03A4  082A               	movf	??_display_set,w
  2405  03A5  0021               	movlb	1	; select bank1
  2406  03A6  00AE               	movwf	_characters^(0+128)
  2407  03A7  0008               	return
  2408  03A8                     __end_of_display_set:	
  2409                           
  2410                           	psect	text2
  2411  062E                     __ptext2:	
  2412 ;; *************** function ___lwmod *****************
  2413 ;; Defined at:
  2414 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  divisor         2    0[BANK0 ] unsigned int 
  2417 ;;  dividend        2    2[BANK0 ] unsigned int 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  counter         1    5[BANK0 ] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  2    0[BANK0 ] unsigned int 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2433 ;;Total ram usage:        6 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    2
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_display_set
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function ___lwmod
  2445  062E                     ___lwmod:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2449  062E  0020               	movlb	0	; select bank0
  2450  062F  0820               	movf	___lwmod@divisor,w
  2451  0630  0421               	iorwf	___lwmod@divisor+1,w
  2452  0631  1903               	btfsc	3,2
  2453  0632  2E56               	goto	l2022
  2454  0633  01A5               	clrf	___lwmod@counter
  2455  0634  0AA5               	incf	___lwmod@counter,f
  2456  0635                     l2012:	
  2457  0635  1BA1               	btfsc	___lwmod@divisor+1,7
  2458  0636  2E41               	goto	l2014
  2459  0637  3001               	movlw	1
  2460  0638                     u2435:	
  2461  0638  35A0               	lslf	___lwmod@divisor,f
  2462  0639  0DA1               	rlf	___lwmod@divisor+1,f
  2463  063A  0B89               	decfsz	9,f
  2464  063B  2E38               	goto	u2435
  2465  063C  3001               	movlw	1
  2466  063D  00A4               	movwf	??___lwmod
  2467  063E  0824               	movf	??___lwmod,w
  2468  063F  07A5               	addwf	___lwmod@counter,f
  2469  0640  2E35               	goto	l2012
  2470  0641                     l2014:	
  2471  0641  0821               	movf	___lwmod@divisor+1,w
  2472  0642  0223               	subwf	___lwmod@dividend+1,w
  2473  0643  1D03               	skipz
  2474  0644  2E47               	goto	u2455
  2475  0645  0820               	movf	___lwmod@divisor,w
  2476  0646  0222               	subwf	___lwmod@dividend,w
  2477  0647                     u2455:	
  2478  0647  1C03               	skipc
  2479  0648  2E4D               	goto	l2018
  2480  0649  0820               	movf	___lwmod@divisor,w
  2481  064A  02A2               	subwf	___lwmod@dividend,f
  2482  064B  0821               	movf	___lwmod@divisor+1,w
  2483  064C  3BA3               	subwfb	___lwmod@dividend+1,f
  2484  064D                     l2018:	
  2485  064D  3001               	movlw	1
  2486  064E                     u2465:	
  2487  064E  36A1               	lsrf	___lwmod@divisor+1,f
  2488  064F  0CA0               	rrf	___lwmod@divisor,f
  2489  0650  0B89               	decfsz	9,f
  2490  0651  2E4E               	goto	u2465
  2491  0652  3001               	movlw	1
  2492  0653  02A5               	subwf	___lwmod@counter,f
  2493  0654  1D03               	btfss	3,2
  2494  0655  2E41               	goto	l2014
  2495  0656                     l2022:	
  2496  0656  0823               	movf	___lwmod@dividend+1,w
  2497  0657  00A1               	movwf	?___lwmod+1
  2498  0658  0822               	movf	___lwmod@dividend,w
  2499  0659  00A0               	movwf	?___lwmod
  2500  065A  0008               	return
  2501  065B                     __end_of___lwmod:	
  2502                           
  2503                           	psect	text3
  2504  0598                     __ptext3:	
  2505 ;; *************** function ___lwdiv *****************
  2506 ;; Defined at:
  2507 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  divisor         2    0[BANK0 ] unsigned int 
  2510 ;;  dividend        2    2[BANK0 ] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  quotient        2    6[BANK0 ] unsigned int 
  2513 ;;  counter         1    5[BANK0 ] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2    0[BANK0 ] unsigned int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2523 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;Total ram usage:        8 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    2
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_display_set
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function ___lwdiv
  2539  0598                     ___lwdiv:	
  2540                           
  2541                           ;incstack = 0
  2542                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2543  0598  0020               	movlb	0	; select bank0
  2544  0599  01A6               	clrf	___lwdiv@quotient
  2545  059A  01A7               	clrf	___lwdiv@quotient+1
  2546  059B  0820               	movf	___lwdiv@divisor,w
  2547  059C  0421               	iorwf	___lwdiv@divisor+1,w
  2548  059D  1903               	btfsc	3,2
  2549  059E  2DC8               	goto	l2000
  2550  059F  01A5               	clrf	___lwdiv@counter
  2551  05A0  0AA5               	incf	___lwdiv@counter,f
  2552  05A1                     l1988:	
  2553  05A1  1BA1               	btfsc	___lwdiv@divisor+1,7
  2554  05A2  2DAD               	goto	l1990
  2555  05A3  3001               	movlw	1
  2556  05A4                     u2365:	
  2557  05A4  35A0               	lslf	___lwdiv@divisor,f
  2558  05A5  0DA1               	rlf	___lwdiv@divisor+1,f
  2559  05A6  0B89               	decfsz	9,f
  2560  05A7  2DA4               	goto	u2365
  2561  05A8  3001               	movlw	1
  2562  05A9  00A4               	movwf	??___lwdiv
  2563  05AA  0824               	movf	??___lwdiv,w
  2564  05AB  07A5               	addwf	___lwdiv@counter,f
  2565  05AC  2DA1               	goto	l1988
  2566  05AD                     l1990:	
  2567  05AD  3001               	movlw	1
  2568  05AE                     u2385:	
  2569  05AE  35A6               	lslf	___lwdiv@quotient,f
  2570  05AF  0DA7               	rlf	___lwdiv@quotient+1,f
  2571  05B0  0B89               	decfsz	9,f
  2572  05B1  2DAE               	goto	u2385
  2573  05B2  0821               	movf	___lwdiv@divisor+1,w
  2574  05B3  0223               	subwf	___lwdiv@dividend+1,w
  2575  05B4  1D03               	skipz
  2576  05B5  2DB8               	goto	u2395
  2577  05B6  0820               	movf	___lwdiv@divisor,w
  2578  05B7  0222               	subwf	___lwdiv@dividend,w
  2579  05B8                     u2395:	
  2580  05B8  1C03               	skipc
  2581  05B9  2DBF               	goto	l1996
  2582  05BA  0820               	movf	___lwdiv@divisor,w
  2583  05BB  02A2               	subwf	___lwdiv@dividend,f
  2584  05BC  0821               	movf	___lwdiv@divisor+1,w
  2585  05BD  3BA3               	subwfb	___lwdiv@dividend+1,f
  2586  05BE  1426               	bsf	___lwdiv@quotient,0
  2587  05BF                     l1996:	
  2588  05BF  3001               	movlw	1
  2589  05C0                     u2405:	
  2590  05C0  36A1               	lsrf	___lwdiv@divisor+1,f
  2591  05C1  0CA0               	rrf	___lwdiv@divisor,f
  2592  05C2  0B89               	decfsz	9,f
  2593  05C3  2DC0               	goto	u2405
  2594  05C4  3001               	movlw	1
  2595  05C5  02A5               	subwf	___lwdiv@counter,f
  2596  05C6  1D03               	btfss	3,2
  2597  05C7  2DAD               	goto	l1990
  2598  05C8                     l2000:	
  2599  05C8  0827               	movf	___lwdiv@quotient+1,w
  2600  05C9  00A1               	movwf	?___lwdiv+1
  2601  05CA  0826               	movf	___lwdiv@quotient,w
  2602  05CB  00A0               	movwf	?___lwdiv
  2603  05CC  0008               	return
  2604  05CD                     __end_of___lwdiv:	
  2605                           
  2606                           	psect	text4
  2607  0558                     __ptext4:	
  2608 ;; *************** function __system_init *****************
  2609 ;; Defined at:
  2610 ;;		line 106 in file "main.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0, pclath, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;Total ram usage:        0 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    3
  2631 ;; This function calls:
  2632 ;;		_display_init
  2633 ;;		_encoder_init
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function __system_init
  2641  0558                     __system_init:	
  2642                           
  2643                           ;main.c: 108: TRISAbits.TRISA1 = 0;
  2644                           
  2645                           ;incstack = 0
  2646                           ; Regs used in __system_init: [wreg+status,2+status,0+pclath+cstack]
  2647  0558  0020               	movlb	0	; select bank0
  2648  0559  1091               	bcf	17,1	;volatile
  2649                           
  2650                           ;main.c: 109: TRISAbits.TRISA2 = 0;
  2651  055A  1111               	bcf	17,2	;volatile
  2652                           
  2653                           ;main.c: 110: TRISAbits.TRISA0 = 0;
  2654  055B  1011               	bcf	17,0	;volatile
  2655                           
  2656                           ;main.c: 112: TRISAbits.TRISA3 = 1;
  2657  055C  1591               	bsf	17,3	;volatile
  2658                           
  2659                           ;main.c: 113: ANSELAbits.ANSA3 = 0;
  2660  055D  003E               	movlb	30	; select bank30
  2661  055E  11B8               	bcf	56,3	;volatile
  2662                           
  2663                           ;main.c: 114: TRISAbits.TRISA4 = 1;
  2664  055F  0020               	movlb	0	; select bank0
  2665  0560  1611               	bsf	17,4	;volatile
  2666                           
  2667                           ;main.c: 115: ANSELAbits.ANSA4 = 0;
  2668  0561  003E               	movlb	30	; select bank30
  2669  0562  1238               	bcf	56,4	;volatile
  2670                           
  2671                           ;main.c: 116: TRISAbits.TRISA5 = 1;
  2672  0563  0020               	movlb	0	; select bank0
  2673  0564  1691               	bsf	17,5	;volatile
  2674                           
  2675                           ;main.c: 117: ANSELAbits.ANSA5 = 0;
  2676  0565  003E               	movlb	30	; select bank30
  2677  0566  12B8               	bcf	56,5	;volatile
  2678                           
  2679                           ;main.c: 119: TRISCbits.TRISC2 = 0;
  2680  0567  0020               	movlb	0	; select bank0
  2681  0568  1113               	bcf	19,2	;volatile
  2682                           
  2683                           ;main.c: 120: TRISCbits.TRISC1 = 0;
  2684  0569  1093               	bcf	19,1	;volatile
  2685                           
  2686                           ;main.c: 121: TRISCbits.TRISC7 = 0;
  2687  056A  1393               	bcf	19,7	;volatile
  2688                           
  2689                           ;main.c: 122: TRISCbits.TRISC5 = 0;
  2690  056B  1293               	bcf	19,5	;volatile
  2691                           
  2692                           ;main.c: 123: TRISCbits.TRISC4 = 0;
  2693  056C  1213               	bcf	19,4	;volatile
  2694                           
  2695                           ;main.c: 124: TRISCbits.TRISC3 = 0;
  2696  056D  1193               	bcf	19,3	;volatile
  2697                           
  2698                           ;main.c: 125: TRISCbits.TRISC0 = 0;
  2699  056E  1013               	bcf	19,0	;volatile
  2700                           
  2701                           ;main.c: 126: TRISCbits.TRISC6 = 0;
  2702  056F  1313               	bcf	19,6	;volatile
  2703                           
  2704                           ;main.c: 127: TRISBbits.TRISB7 = 0;
  2705  0570  1392               	bcf	18,7	;volatile
  2706                           
  2707                           ;main.c: 128: TRISBbits.TRISB6 = 0;
  2708  0571  1312               	bcf	18,6	;volatile
  2709                           
  2710                           ;main.c: 129: TRISBbits.TRISB5 = 0;
  2711  0572  1292               	bcf	18,5	;volatile
  2712                           
  2713                           ;main.c: 130: TRISBbits.TRISB4 = 0;
  2714  0573  1212               	bcf	18,4	;volatile
  2715                           
  2716                           ;main.c: 132: TRISBbits.TRISB0 = 1;
  2717  0574  1412               	bsf	18,0	;volatile
  2718                           
  2719                           ;main.c: 133: ANSELBbits.ANSB0 = 0;
  2720  0575  003E               	movlb	30	; select bank30
  2721  0576  1043               	bcf	67,0	;volatile
  2722                           
  2723                           ;main.c: 134: TRISBbits.TRISB3 = 1;
  2724  0577  0020               	movlb	0	; select bank0
  2725  0578  1592               	bsf	18,3	;volatile
  2726                           
  2727                           ;main.c: 135: ANSELBbits.ANSB3 = 0;
  2728  0579  003E               	movlb	30	; select bank30
  2729  057A  11C3               	bcf	67,3	;volatile
  2730                           
  2731                           ;main.c: 137: TRISBbits.TRISB2 = 1;
  2732  057B  0020               	movlb	0	; select bank0
  2733  057C  1512               	bsf	18,2	;volatile
  2734                           
  2735                           ;main.c: 138: ANSELBbits.ANSB2 = 0;
  2736  057D  003E               	movlb	30	; select bank30
  2737  057E  1143               	bcf	67,2	;volatile
  2738                           
  2739                           ;main.c: 139: TRISBbits.TRISB1 = 1;
  2740  057F  0020               	movlb	0	; select bank0
  2741  0580  1492               	bsf	18,1	;volatile
  2742                           
  2743                           ;main.c: 140: ANSELBbits.ANSB1 = 0;
  2744  0581  003E               	movlb	30	; select bank30
  2745  0582  10C3               	bcf	67,1	;volatile
  2746                           
  2747                           ;main.c: 142: {PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0;};
  2748  0583  3055               	movlw	85
  2749  0584  003D               	movlb	29	; select bank29
  2750  0585  008F               	movwf	15	;volsfr
  2751  0586  30AA               	movlw	170
  2752  0587  008F               	movwf	15	;volsfr
  2753  0588  100F               	bcf	15,0	;volsfr
  2754                           
  2755                           ;main.c: 143: CCP1PPS = 0x0A;
  2756  0589  300A               	movlw	10
  2757  058A  00A1               	movwf	33	;volatile
  2758                           
  2759                           ;main.c: 144: CCP2PPS = 0x09;
  2760  058B  3009               	movlw	9
  2761  058C  00A2               	movwf	34	;volatile
  2762                           
  2763                           ;main.c: 145: {PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 1;};
  2764  058D  3055               	movlw	85
  2765  058E  008F               	movwf	15	;volsfr
  2766  058F  30AA               	movlw	170
  2767  0590  008F               	movwf	15	;volsfr
  2768  0591  140F               	bsf	15,0	;volsfr
  2769                           
  2770                           ;main.c: 147: display_init();
  2771  0592  3186  265B  3185   	fcall	_display_init
  2772                           
  2773                           ;main.c: 148: encoder_init();
  2774  0595  3186  26B0         	fcall	_encoder_init
  2775  0597  0008               	return
  2776  0598                     __end_of__system_init:	
  2777                           
  2778                           	psect	text5
  2779  06B0                     __ptext5:	
  2780 ;; *************** function _encoder_init *****************
  2781 ;; Defined at:
  2782 ;;		line 9 in file "encoder.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    2
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		__system_init
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _encoder_init
  2812  06B0                     _encoder_init:	
  2813                           
  2814                           ;encoder.c: 11: rollover_cnt = 0;
  2815                           
  2816                           ;incstack = 0
  2817                           ; Regs used in _encoder_init: [wreg+status,2+status,0]
  2818  06B0  01F6               	clrf	_rollover_cnt
  2819  06B1  01F7               	clrf	_rollover_cnt+1
  2820                           
  2821                           ;encoder.c: 14: T1CLKbits.CS = 0b0001;
  2822  06B2  0024               	movlb	4	; select bank4
  2823  06B3  0811               	movf	17,w	;volatile
  2824  06B4  39F0               	andlw	-16
  2825  06B5  3801               	iorlw	1
  2826  06B6  0091               	movwf	17	;volatile
  2827                           
  2828                           ;encoder.c: 15: T1CONbits.CKPS = 0b00;
  2829  06B7  30CF               	movlw	-49
  2830  06B8  058E               	andwf	14,f	;volatile
  2831                           
  2832                           ;encoder.c: 16: T1CONbits.RD16 = 1;
  2833  06B9  148E               	bsf	14,1	;volatile
  2834                           
  2835                           ;encoder.c: 17: T1CONbits.ON = 1;
  2836  06BA  140E               	bsf	14,0	;volatile
  2837                           
  2838                           ;encoder.c: 20: INTCONbits.GIE = 1;
  2839  06BB  178B               	bsf	11,7	;volatile
  2840                           
  2841                           ;encoder.c: 21: INTCONbits.PEIE = 1;
  2842  06BC  170B               	bsf	11,6	;volatile
  2843                           
  2844                           ;encoder.c: 22: PIE4bits.TMR1IE = 1;
  2845  06BD  002E               	movlb	14	; select bank14
  2846  06BE  141A               	bsf	26,0	;volatile
  2847                           
  2848                           ;encoder.c: 25: CCP1CONbits.MODE = 0b0011;
  2849  06BF  0026               	movlb	6	; select bank6
  2850  06C0  080E               	movf	14,w	;volatile
  2851  06C1  39F0               	andlw	-16
  2852  06C2  3803               	iorlw	3
  2853  06C3  008E               	movwf	14	;volatile
  2854                           
  2855                           ;encoder.c: 26: CCP1CAPbits.CTS = 0b000;
  2856  06C4  018F               	clrf	15	;volatile
  2857                           
  2858                           ;encoder.c: 27: CCP1CONbits.EN = 1;
  2859  06C5  178E               	bsf	14,7	;volatile
  2860                           
  2861                           ;encoder.c: 30: CCP2CONbits.MODE = 0b0011;
  2862  06C6  0812               	movf	18,w	;volatile
  2863  06C7  39F0               	andlw	-16
  2864  06C8  3803               	iorlw	3
  2865  06C9  0092               	movwf	18	;volatile
  2866                           
  2867                           ;encoder.c: 31: CCP2CAPbits.CTS = 0b000;
  2868  06CA  0193               	clrf	19	;volatile
  2869                           
  2870                           ;encoder.c: 32: CCP2CONbits.EN = 1;
  2871  06CB  1792               	bsf	18,7	;volatile
  2872                           
  2873                           ;encoder.c: 35: INTCONbits.GIE = 1;
  2874  06CC  178B               	bsf	11,7	;volatile
  2875                           
  2876                           ;encoder.c: 36: INTCONbits.PEIE = 1;
  2877  06CD  170B               	bsf	11,6	;volatile
  2878                           
  2879                           ;encoder.c: 37: PIR6bits.CCP1IF = 0;
  2880  06CE  002E               	movlb	14	; select bank14
  2881  06CF  1012               	bcf	18,0	;volatile
  2882                           
  2883                           ;encoder.c: 38: PIE6bits.CCP1IE = 1;
  2884  06D0  141C               	bsf	28,0	;volatile
  2885                           
  2886                           ;encoder.c: 39: PIR6bits.CCP2IF = 0;
  2887  06D1  1092               	bcf	18,1	;volatile
  2888                           
  2889                           ;encoder.c: 40: PIE6bits.CCP2IE = 1;
  2890  06D2  149C               	bsf	28,1	;volatile
  2891  06D3  0008               	return
  2892  06D4                     __end_of_encoder_init:	
  2893                           
  2894                           	psect	text6
  2895  065B                     __ptext6:	
  2896 ;; *************** function _display_init *****************
  2897 ;; Defined at:
  2898 ;;		line 31 in file "display.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;Total ram usage:        1 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    2
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		__system_init
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _display_init
  2928  065B                     _display_init:	
  2929                           
  2930                           ;display.c: 34: segment = 0;
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in _display_init: [wreg+status,2+status,0]
  2934  065B  01FA               	clrf	_segment
  2935                           
  2936                           ;display.c: 37: characters[0] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b0
      +                          0100000 | 0b10000000);
  2937  065C  30BE               	movlw	190
  2938  065D  0020               	movlb	0	; select bank0
  2939  065E  00A0               	movwf	??_display_init
  2940  065F  0820               	movf	??_display_init,w
  2941  0660  0021               	movlb	1	; select bank1
  2942  0661  00AE               	movwf	_characters^(0+128)
  2943                           
  2944                           ;display.c: 38: characters[1] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b0
      +                          0100000 | 0b10000000);
  2945  0662  30BE               	movlw	190
  2946  0663  0020               	movlb	0	; select bank0
  2947  0664  00A0               	movwf	??_display_init
  2948  0665  0820               	movf	??_display_init,w
  2949  0666  0021               	movlb	1	; select bank1
  2950  0667  00AF               	movwf	(_characters^(0+128)+1)
  2951                           
  2952                           ;display.c: 39: characters[2] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b0
      +                          0100000 | 0b10000000);
  2953  0668  30BE               	movlw	190
  2954  0669  0020               	movlb	0	; select bank0
  2955  066A  00A0               	movwf	??_display_init
  2956  066B  0820               	movf	??_display_init,w
  2957  066C  0021               	movlb	1	; select bank1
  2958  066D  00B0               	movwf	(_characters^(0+128)+2)
  2959                           
  2960                           ;display.c: 40: characters[3] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b0
      +                          0100000 | 0b10000000);
  2961  066E  30BE               	movlw	190
  2962  066F  0020               	movlb	0	; select bank0
  2963  0670  00A0               	movwf	??_display_init
  2964  0671  0820               	movf	??_display_init,w
  2965  0672  0021               	movlb	1	; select bank1
  2966  0673  00B1               	movwf	(_characters^(0+128)+3)
  2967                           
  2968                           ;display.c: 43: T2CLKCONbits.CS = 0b0001;
  2969  0674  0025               	movlb	5	; select bank5
  2970  0675  0810               	movf	16,w	;volatile
  2971  0676  39F0               	andlw	-16
  2972  0677  3801               	iorlw	1
  2973  0678  0090               	movwf	16	;volatile
  2974                           
  2975                           ;display.c: 44: T2CONbits.CKPS = 0b111;
  2976  0679  3070               	movlw	112
  2977  067A  048E               	iorwf	14,f	;volatile
  2978                           
  2979                           ;display.c: 45: PR2 = 125;
  2980  067B  307D               	movlw	125
  2981  067C  008D               	movwf	13	;volatile
  2982                           
  2983                           ;display.c: 46: T2CONbits.OUTPS = 0b0000;
  2984  067D  30F0               	movlw	-16
  2985  067E  058E               	andwf	14,f	;volatile
  2986                           
  2987                           ;display.c: 49: INTCONbits.GIE = 1;
  2988  067F  178B               	bsf	11,7	;volatile
  2989                           
  2990                           ;display.c: 50: INTCONbits.PEIE = 1;
  2991  0680  170B               	bsf	11,6	;volatile
  2992                           
  2993                           ;display.c: 51: PIE4bits.TMR2IE = 1;
  2994  0681  002E               	movlb	14	; select bank14
  2995  0682  149A               	bsf	26,1	;volatile
  2996                           
  2997                           ;display.c: 54: T2CONbits.ON = 1;
  2998  0683  0025               	movlb	5	; select bank5
  2999  0684  178E               	bsf	14,7	;volatile
  3000  0685  0008               	return
  3001  0686                     __end_of_display_init:	
  3002                           
  3003                           	psect	text7
  3004  06D4                     __ptext7:	
  3005 ;; *************** function __handle_relays *****************
  3006 ;; Defined at:
  3007 ;;		line 152 in file "main.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		None
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    2
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function __handle_relays
  3037  06D4                     __handle_relays:	
  3038                           
  3039                           ;main.c: 154: if(PORTAbits.RA3)
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in __handle_relays: []
  3043  06D4  0020               	movlb	0	; select bank0
  3044  06D5  1D8C               	btfss	12,3	;volatile
  3045  06D6  2EE5               	goto	l80
  3046                           
  3047                           ;main.c: 155: {
  3048                           ;main.c: 158: LATAbits.LATA0 = 1;
  3049  06D7  1416               	bsf	22,0	;volatile
  3050                           
  3051                           ;main.c: 159: if(PORTAbits.RA4)
  3052  06D8  1E0C               	btfss	12,4	;volatile
  3053  06D9  2EE2               	goto	l81
  3054                           
  3055                           ;main.c: 160: {
  3056                           ;main.c: 162: if(PORTAbits.RA5)
  3057  06DA  1E8C               	btfss	12,5	;volatile
  3058  06DB  2EDF               	goto	l82
  3059                           
  3060                           ;main.c: 163: {
  3061                           ;main.c: 164: LATAbits.LATA1 = 0;
  3062  06DC  1096               	bcf	22,1	;volatile
  3063                           
  3064                           ;main.c: 165: LATAbits.LATA2 = 1;
  3065  06DD  1516               	bsf	22,2	;volatile
  3066                           
  3067                           ;main.c: 166: }
  3068  06DE  0008               	return
  3069  06DF                     l82:	
  3070                           
  3071                           ;main.c: 167: else
  3072                           ;main.c: 168: {
  3073                           ;main.c: 169: LATAbits.LATA2 = 0;
  3074  06DF  1116               	bcf	22,2	;volatile
  3075                           
  3076                           ;main.c: 170: LATAbits.LATA1 = 1;
  3077  06E0  1496               	bsf	22,1	;volatile
  3078                           
  3079                           ;main.c: 171: }
  3080                           ;main.c: 172: }
  3081  06E1  0008               	return
  3082  06E2                     l81:	
  3083                           
  3084                           ;main.c: 173: else
  3085                           ;main.c: 174: {
  3086                           ;main.c: 176: LATAbits.LATA1 = 0;
  3087  06E2  1096               	bcf	22,1	;volatile
  3088                           
  3089                           ;main.c: 177: LATAbits.LATA2 = 0;
  3090  06E3  1116               	bcf	22,2	;volatile
  3091                           
  3092                           ;main.c: 178: }
  3093                           ;main.c: 179: }
  3094  06E4  0008               	return
  3095  06E5                     l80:	
  3096                           
  3097                           ;main.c: 180: else
  3098                           ;main.c: 181: {
  3099                           ;main.c: 184: LATAbits.LATA0 = 0;
  3100  06E5  1016               	bcf	22,0	;volatile
  3101                           
  3102                           ;main.c: 185: if(PORTBbits.RB0)
  3103  06E6  1C0D               	btfss	13,0	;volatile
  3104  06E7  2EEB               	goto	l86
  3105                           
  3106                           ;main.c: 186: {
  3107                           ;main.c: 187: LATAbits.LATA2 = 0;
  3108  06E8  1116               	bcf	22,2	;volatile
  3109                           
  3110                           ;main.c: 188: LATAbits.LATA1 = 1;
  3111  06E9  1496               	bsf	22,1	;volatile
  3112                           
  3113                           ;main.c: 189: }
  3114  06EA  0008               	return
  3115  06EB                     l86:	
  3116                           
  3117                           ;main.c: 190: else if(PORTBbits.RB3)
  3118  06EB  1D8D               	btfss	13,3	;volatile
  3119  06EC  2EF0               	goto	l88
  3120                           
  3121                           ;main.c: 191: {
  3122                           ;main.c: 192: LATAbits.LATA1 = 0;
  3123  06ED  1096               	bcf	22,1	;volatile
  3124                           
  3125                           ;main.c: 193: LATAbits.LATA2 = 1;
  3126  06EE  1516               	bsf	22,2	;volatile
  3127                           
  3128                           ;main.c: 194: }
  3129  06EF  0008               	return
  3130  06F0                     l88:	
  3131                           
  3132                           ;main.c: 195: else
  3133                           ;main.c: 196: {
  3134                           ;main.c: 197: LATAbits.LATA1 = 0;
  3135  06F0  1096               	bcf	22,1	;volatile
  3136                           
  3137                           ;main.c: 198: LATAbits.LATA2 = 0;
  3138  06F1  1116               	bcf	22,2	;volatile
  3139  06F2  0008               	return
  3140  06F3                     __end_of__handle_relays:	
  3141                           
  3142                           	psect	text8
  3143  004F                     __ptext8:	
  3144 ;; *************** function __calculate_speed *****************
  3145 ;; Defined at:
  3146 ;;		line 203 in file "main.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  distance        4   42[BANK0 ] unsigned long 
  3151 ;;  time_differe    4   38[BANK0 ] unsigned long 
  3152 ;;  speed           3   46[BANK0 ] float 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;Total ram usage:       19 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    4
  3169 ;; This function calls:
  3170 ;;		___ftdiv
  3171 ;;		___ftmul
  3172 ;;		___fttol
  3173 ;;		___lltoft
  3174 ;;		___lmul
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function __calculate_speed
  3182  004F                     __calculate_speed:	
  3183                           
  3184                           ;main.c: 205: uint32_t distance;
  3185                           ;main.c: 206: uint32_t time_difference;
  3186                           ;main.c: 207: float speed;
  3187                           ;main.c: 209: if(os.encoder_difference>64)
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in __calculate_speed: [wreg+status,2+status,0+pclath+cstack]
  3191  004F  0020               	movlb	0	; select bank0
  3192  0050  085A               	movf	_os+7,w	;volatile
  3193  0051  3A80               	xorlw	128
  3194  0052  00BE               	movwf	??__calculate_speed
  3195  0053  3080               	movlw	128
  3196  0054  023E               	subwf	??__calculate_speed,w
  3197  0055  1D03               	skipz
  3198  0056  2859               	goto	u2535
  3199  0057  3041               	movlw	65
  3200  0058  0259               	subwf	_os+6,w	;volatile
  3201  0059                     u2535:	
  3202  0059  1C03               	skipc
  3203  005A  2925               	goto	l2062
  3204                           
  3205                           ;main.c: 210: {
  3206                           ;main.c: 211: distance = (uint32_t) os.encoder_difference;
  3207  005B  0020               	movlb	0	; select bank0
  3208  005C  0859               	movf	_os+6,w	;volatile
  3209  005D  00CA               	movwf	__calculate_speed@distance
  3210  005E  085A               	movf	_os+7,w	;volatile
  3211  005F  00CB               	movwf	__calculate_speed@distance+1
  3212  0060  0D89               	rlf	9,f
  3213  0061  3B89               	subwfb	9,f
  3214  0062  0989               	comf	9,f
  3215  0063  00CC               	movwf	__calculate_speed@distance+2
  3216  0064  00CD               	movwf	__calculate_speed@distance+3
  3217                           
  3218                           ;main.c: 212: distance *= 60;
  3219  0065  3000               	movlw	0
  3220  0066  00A3               	movwf	___lmul@multiplier+3
  3221  0067  3000               	movlw	0
  3222  0068  00A2               	movwf	___lmul@multiplier+2
  3223  0069  3000               	movlw	0
  3224  006A  00A1               	movwf	___lmul@multiplier+1
  3225  006B  303C               	movlw	60
  3226  006C  00A0               	movwf	___lmul@multiplier
  3227  006D  084D               	movf	__calculate_speed@distance+3,w
  3228  006E  00A7               	movwf	___lmul@multiplicand+3
  3229  006F  084C               	movf	__calculate_speed@distance+2,w
  3230  0070  00A6               	movwf	___lmul@multiplicand+2
  3231  0071  084B               	movf	__calculate_speed@distance+1,w
  3232  0072  00A5               	movwf	___lmul@multiplicand+1
  3233  0073  084A               	movf	__calculate_speed@distance,w
  3234  0074  00A4               	movwf	___lmul@multiplicand
  3235  0075  3185  25FE  3180   	fcall	___lmul
  3236  0078  0020               	movlb	0	; select bank0
  3237  0079  0823               	movf	?___lmul+3,w
  3238  007A  00CD               	movwf	__calculate_speed@distance+3
  3239  007B  0822               	movf	?___lmul+2,w
  3240  007C  00CC               	movwf	__calculate_speed@distance+2
  3241  007D  0821               	movf	?___lmul+1,w
  3242  007E  00CB               	movwf	__calculate_speed@distance+1
  3243  007F  0820               	movf	?___lmul,w
  3244  0080  00CA               	movwf	__calculate_speed@distance
  3245                           
  3246                           ;main.c: 214: time_difference = os.time_sum - os.time_sum_last;
  3247  0081  0869               	movf	_os+22,w	;volatile
  3248  0082  00BE               	movwf	??__calculate_speed
  3249  0083  086A               	movf	_os+23,w	;volatile
  3250  0084  00BF               	movwf	??__calculate_speed+1
  3251  0085  086B               	movf	_os+24,w	;volatile
  3252  0086  00C0               	movwf	??__calculate_speed+2
  3253  0087  086C               	movf	_os+25,w	;volatile
  3254  0088  00C1               	movwf	??__calculate_speed+3
  3255  0089  0965               	comf	_os+18,w	;volatile
  3256  008A  00C2               	movwf	??__calculate_speed+4
  3257  008B  0966               	comf	_os+19,w	;volatile
  3258  008C  00C3               	movwf	??__calculate_speed+5
  3259  008D  0967               	comf	_os+20,w	;volatile
  3260  008E  00C4               	movwf	??__calculate_speed+6
  3261  008F  0968               	comf	_os+21,w	;volatile
  3262  0090  00C5               	movwf	??__calculate_speed+7
  3263  0091  0AC2               	incf	??__calculate_speed+4,f
  3264  0092  1903               	skipnz
  3265  0093  0AC3               	incf	??__calculate_speed+5,f
  3266  0094  1903               	skipnz
  3267  0095  0AC4               	incf	??__calculate_speed+6,f
  3268  0096  1903               	skipnz
  3269  0097  0AC5               	incf	??__calculate_speed+7,f
  3270  0098  0842               	movf	??__calculate_speed+4,w
  3271  0099  07BE               	addwf	??__calculate_speed,f
  3272  009A  0843               	movf	??__calculate_speed+5,w
  3273  009B  3DBF               	addwfc	??__calculate_speed+1,f
  3274  009C  0844               	movf	??__calculate_speed+6,w
  3275  009D  3DC0               	addwfc	??__calculate_speed+2,f
  3276  009E  0845               	movf	??__calculate_speed+7,w
  3277  009F  3DC1               	addwfc	??__calculate_speed+3,f
  3278  00A0  0841               	movf	??__calculate_speed+3,w
  3279  00A1  00C9               	movwf	__calculate_speed@time_difference+3
  3280  00A2  0840               	movf	??__calculate_speed+2,w
  3281  00A3  00C8               	movwf	__calculate_speed@time_difference+2
  3282  00A4  083F               	movf	??__calculate_speed+1,w
  3283  00A5  00C7               	movwf	__calculate_speed@time_difference+1
  3284  00A6  083E               	movf	??__calculate_speed,w
  3285  00A7  00C6               	movwf	__calculate_speed@time_difference
  3286                           
  3287                           ;main.c: 216: time_difference += 16;
  3288  00A8  3010               	movlw	16
  3289  00A9  07C6               	addwf	__calculate_speed@time_difference,f
  3290  00AA  3000               	movlw	0
  3291  00AB  3DC7               	addwfc	__calculate_speed@time_difference+1,f
  3292  00AC  3000               	movlw	0
  3293  00AD  3DC8               	addwfc	__calculate_speed@time_difference+2,f
  3294  00AE  3000               	movlw	0
  3295  00AF  3DC9               	addwfc	__calculate_speed@time_difference+3,f
  3296                           
  3297                           ;main.c: 217: time_difference >>= 5;
  3298  00B0  3005               	movlw	5
  3299  00B1                     u2545:	
  3300  00B1  36C9               	lsrf	__calculate_speed@time_difference+3,f
  3301  00B2  0CC8               	rrf	__calculate_speed@time_difference+2,f
  3302  00B3  0CC7               	rrf	__calculate_speed@time_difference+1,f
  3303  00B4  0CC6               	rrf	__calculate_speed@time_difference,f
  3304  00B5  0B89               	decfsz	9,f
  3305  00B6  28B1               	goto	u2545
  3306                           
  3307                           ;main.c: 219: speed = (float) distance;
  3308  00B7  084D               	movf	__calculate_speed@distance+3,w
  3309  00B8  00AB               	movwf	___lltoft@c+3
  3310  00B9  084C               	movf	__calculate_speed@distance+2,w
  3311  00BA  00AA               	movwf	___lltoft@c+2
  3312  00BB  084B               	movf	__calculate_speed@distance+1,w
  3313  00BC  00A9               	movwf	___lltoft@c+1
  3314  00BD  084A               	movf	__calculate_speed@distance,w
  3315  00BE  00A8               	movwf	___lltoft@c
  3316  00BF  3186  2686  3180   	fcall	___lltoft
  3317  00C2  0020               	movlb	0	; select bank0
  3318  00C3  0828               	movf	?___lltoft,w
  3319  00C4  00CE               	movwf	__calculate_speed@speed
  3320  00C5  0829               	movf	?___lltoft+1,w
  3321  00C6  00CF               	movwf	__calculate_speed@speed+1
  3322  00C7  082A               	movf	?___lltoft+2,w
  3323  00C8  00D0               	movwf	__calculate_speed@speed+2
  3324                           
  3325                           ;main.c: 220: speed /= time_difference;
  3326  00C9  0849               	movf	__calculate_speed@time_difference+3,w
  3327  00CA  00AB               	movwf	___lltoft@c+3
  3328  00CB  0848               	movf	__calculate_speed@time_difference+2,w
  3329  00CC  00AA               	movwf	___lltoft@c+2
  3330  00CD  0847               	movf	__calculate_speed@time_difference+1,w
  3331  00CE  00A9               	movwf	___lltoft@c+1
  3332  00CF  0846               	movf	__calculate_speed@time_difference,w
  3333  00D0  00A8               	movwf	___lltoft@c
  3334  00D1  3186  2686  3180   	fcall	___lltoft
  3335  00D4  0020               	movlb	0	; select bank0
  3336  00D5  0828               	movf	?___lltoft,w
  3337  00D6  00AE               	movwf	___ftdiv@f2
  3338  00D7  0829               	movf	?___lltoft+1,w
  3339  00D8  00AF               	movwf	___ftdiv@f2+1
  3340  00D9  082A               	movf	?___lltoft+2,w
  3341  00DA  00B0               	movwf	___ftdiv@f2+2
  3342  00DB  084E               	movf	__calculate_speed@speed,w
  3343  00DC  00B1               	movwf	___ftdiv@f1
  3344  00DD  084F               	movf	__calculate_speed@speed+1,w
  3345  00DE  00B2               	movwf	___ftdiv@f1+1
  3346  00DF  0850               	movf	__calculate_speed@speed+2,w
  3347  00E0  00B3               	movwf	___ftdiv@f1+2
  3348  00E1  3181  21DD  3180   	fcall	___ftdiv
  3349  00E4  0020               	movlb	0	; select bank0
  3350  00E5  082E               	movf	?___ftdiv,w
  3351  00E6  00CE               	movwf	__calculate_speed@speed
  3352  00E7  082F               	movf	?___ftdiv+1,w
  3353  00E8  00CF               	movwf	__calculate_speed@speed+1
  3354  00E9  0830               	movf	?___ftdiv+2,w
  3355  00EA  00D0               	movwf	__calculate_speed@speed+2
  3356                           
  3357                           ;main.c: 221: speed /= 256;
  3358  00EB  3000               	movlw	0
  3359  00EC  00AE               	movwf	___ftdiv@f2
  3360  00ED  3080               	movlw	128
  3361  00EE  00AF               	movwf	___ftdiv@f2+1
  3362  00EF  3043               	movlw	67
  3363  00F0  00B0               	movwf	___ftdiv@f2+2
  3364  00F1  084E               	movf	__calculate_speed@speed,w
  3365  00F2  00B1               	movwf	___ftdiv@f1
  3366  00F3  084F               	movf	__calculate_speed@speed+1,w
  3367  00F4  00B2               	movwf	___ftdiv@f1+1
  3368  00F5  0850               	movf	__calculate_speed@speed+2,w
  3369  00F6  00B3               	movwf	___ftdiv@f1+2
  3370  00F7  3181  21DD  3180   	fcall	___ftdiv
  3371  00FA  0020               	movlb	0	; select bank0
  3372  00FB  082E               	movf	?___ftdiv,w
  3373  00FC  00CE               	movwf	__calculate_speed@speed
  3374  00FD  082F               	movf	?___ftdiv+1,w
  3375  00FE  00CF               	movwf	__calculate_speed@speed+1
  3376  00FF  0830               	movf	?___ftdiv+2,w
  3377  0100  00D0               	movwf	__calculate_speed@speed+2
  3378                           
  3379                           ;main.c: 222: speed *= 8000000.0;
  3380  0101  3024               	movlw	36
  3381  0102  00A8               	movwf	___ftmul@f1
  3382  0103  30F4               	movlw	244
  3383  0104  00A9               	movwf	___ftmul@f1+1
  3384  0105  304A               	movlw	74
  3385  0106  00AA               	movwf	___ftmul@f1+2
  3386  0107  084E               	movf	__calculate_speed@speed,w
  3387  0108  00AB               	movwf	___ftmul@f2
  3388  0109  084F               	movf	__calculate_speed@speed+1,w
  3389  010A  00AC               	movwf	___ftmul@f2+1
  3390  010B  0850               	movf	__calculate_speed@speed+2,w
  3391  010C  00AD               	movwf	___ftmul@f2+2
  3392  010D  3181  2129  3180   	fcall	___ftmul
  3393  0110  0020               	movlb	0	; select bank0
  3394  0111  0828               	movf	?___ftmul,w
  3395  0112  00CE               	movwf	__calculate_speed@speed
  3396  0113  0829               	movf	?___ftmul+1,w
  3397  0114  00CF               	movwf	__calculate_speed@speed+1
  3398  0115  082A               	movf	?___ftmul+2,w
  3399  0116  00D0               	movwf	__calculate_speed@speed+2
  3400                           
  3401                           ;main.c: 224: os.speed = (int32_t) speed;
  3402  0117  084E               	movf	__calculate_speed@speed,w
  3403  0118  00A0               	movwf	___fttol@f1
  3404  0119  084F               	movf	__calculate_speed@speed+1,w
  3405  011A  00A1               	movwf	___fttol@f1+1
  3406  011B  0850               	movf	__calculate_speed@speed+2,w
  3407  011C  00A2               	movwf	___fttol@f1+2
  3408  011D  3183  23A8         	fcall	___fttol
  3409  011F  0020               	movlb	0	; select bank0
  3410  0120  0821               	movf	?___fttol+1,w
  3411  0121  00EE               	movwf	_os+27	;volatile
  3412  0122  0820               	movf	?___fttol,w
  3413  0123  00ED               	movwf	_os+26	;volatile
  3414                           
  3415                           ;main.c: 225: }
  3416  0124  0008               	return
  3417  0125                     l2062:	
  3418                           
  3419                           ;main.c: 226: else
  3420                           ;main.c: 227: {
  3421                           ;main.c: 228: os.speed = 0;
  3422  0125  0020               	movlb	0	; select bank0
  3423  0126  01ED               	clrf	_os+26	;volatile
  3424  0127  01EE               	clrf	_os+27	;volatile
  3425  0128  0008               	return
  3426  0129                     __end_of__calculate_speed:	
  3427                           
  3428                           	psect	text9
  3429  05FE                     __ptext9:	
  3430 ;; *************** function ___lmul *****************
  3431 ;; Defined at:
  3432 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3435 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  product         4    8[BANK0 ] unsigned long 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  4    0[BANK0 ] unsigned long 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3447 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3450 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;Total ram usage:       12 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    2
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		__calculate_speed
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function ___lmul
  3463  05FE                     ___lmul:	
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3467  05FE  3000               	movlw	0
  3468  05FF  0020               	movlb	0	; select bank0
  3469  0600  00AB               	movwf	___lmul@product+3
  3470  0601  3000               	movlw	0
  3471  0602  00AA               	movwf	___lmul@product+2
  3472  0603  3000               	movlw	0
  3473  0604  00A9               	movwf	___lmul@product+1
  3474  0605  3000               	movlw	0
  3475  0606  00A8               	movwf	___lmul@product
  3476  0607                     l1822:	
  3477  0607  1C20               	btfss	___lmul@multiplier,0
  3478  0608  2E11               	goto	l1826
  3479  0609  0824               	movf	___lmul@multiplicand,w
  3480  060A  07A8               	addwf	___lmul@product,f
  3481  060B  0825               	movf	___lmul@multiplicand+1,w
  3482  060C  3DA9               	addwfc	___lmul@product+1,f
  3483  060D  0826               	movf	___lmul@multiplicand+2,w
  3484  060E  3DAA               	addwfc	___lmul@product+2,f
  3485  060F  0827               	movf	___lmul@multiplicand+3,w
  3486  0610  3DAB               	addwfc	___lmul@product+3,f
  3487  0611                     l1826:	
  3488  0611  3001               	movlw	1
  3489  0612                     u2005:	
  3490  0612  35A4               	lslf	___lmul@multiplicand,f
  3491  0613  0DA5               	rlf	___lmul@multiplicand+1,f
  3492  0614  0DA6               	rlf	___lmul@multiplicand+2,f
  3493  0615  0DA7               	rlf	___lmul@multiplicand+3,f
  3494  0616  0B89               	decfsz	9,f
  3495  0617  2E12               	goto	u2005
  3496  0618  3001               	movlw	1
  3497  0619                     u2015:	
  3498  0619  36A3               	lsrf	___lmul@multiplier+3,f
  3499  061A  0CA2               	rrf	___lmul@multiplier+2,f
  3500  061B  0CA1               	rrf	___lmul@multiplier+1,f
  3501  061C  0CA0               	rrf	___lmul@multiplier,f
  3502  061D  0B89               	decfsz	9,f
  3503  061E  2E19               	goto	u2015
  3504  061F  0823               	movf	___lmul@multiplier+3,w
  3505  0620  0422               	iorwf	___lmul@multiplier+2,w
  3506  0621  0421               	iorwf	___lmul@multiplier+1,w
  3507  0622  0420               	iorwf	___lmul@multiplier,w
  3508  0623  1D03               	skipz
  3509  0624  2E07               	goto	l1822
  3510  0625  082B               	movf	___lmul@product+3,w
  3511  0626  00A3               	movwf	?___lmul+3
  3512  0627  082A               	movf	___lmul@product+2,w
  3513  0628  00A2               	movwf	?___lmul+2
  3514  0629  0829               	movf	___lmul@product+1,w
  3515  062A  00A1               	movwf	?___lmul+1
  3516  062B  0828               	movf	___lmul@product,w
  3517  062C  00A0               	movwf	?___lmul
  3518  062D  0008               	return
  3519  062E                     __end_of___lmul:	
  3520                           
  3521                           	psect	text10
  3522  0686                     __ptext10:	
  3523 ;; *************** function ___lltoft *****************
  3524 ;; Defined at:
  3525 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  c               4    8[BANK0 ] unsigned long 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  exp             1   13[BANK0 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  3    8[BANK0 ] float 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3539 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;Total ram usage:        6 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    3
  3546 ;; This function calls:
  3547 ;;		___ftpack
  3548 ;; This function is called by:
  3549 ;;		__calculate_speed
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function ___lltoft
  3555  0686                     ___lltoft:	
  3556                           
  3557                           ;incstack = 0
  3558                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3559  0686  308E               	movlw	142
  3560  0687  0020               	movlb	0	; select bank0
  3561  0688  00AC               	movwf	??___lltoft
  3562  0689  082C               	movf	??___lltoft,w
  3563  068A  00AD               	movwf	___lltoft@exp
  3564  068B                     l1972:	
  3565  068B  30FF               	movlw	255
  3566  068C  052B               	andwf	___lltoft@c+3,w
  3567  068D  1903               	btfsc	3,2
  3568  068E  2E9B               	goto	l1974
  3569  068F  3001               	movlw	1
  3570  0690                     u2335:	
  3571  0690  36AB               	lsrf	___lltoft@c+3,f
  3572  0691  0CAA               	rrf	___lltoft@c+2,f
  3573  0692  0CA9               	rrf	___lltoft@c+1,f
  3574  0693  0CA8               	rrf	___lltoft@c,f
  3575  0694  0B89               	decfsz	9,f
  3576  0695  2E90               	goto	u2335
  3577  0696  3001               	movlw	1
  3578  0697  00AC               	movwf	??___lltoft
  3579  0698  082C               	movf	??___lltoft,w
  3580  0699  07AD               	addwf	___lltoft@exp,f
  3581  069A  2E8B               	goto	l1972
  3582  069B                     l1974:	
  3583  069B  0828               	movf	___lltoft@c,w
  3584  069C  00A0               	movwf	___ftpack@arg
  3585  069D  0829               	movf	___lltoft@c+1,w
  3586  069E  00A1               	movwf	___ftpack@arg+1
  3587  069F  082A               	movf	___lltoft@c+2,w
  3588  06A0  00A2               	movwf	___ftpack@arg+2
  3589  06A1  082D               	movf	___lltoft@exp,w
  3590  06A2  00AC               	movwf	??___lltoft
  3591  06A3  082C               	movf	??___lltoft,w
  3592  06A4  00A3               	movwf	___ftpack@exp
  3593  06A5  01A4               	clrf	___ftpack@sign
  3594  06A6  3184  2498         	fcall	___ftpack
  3595  06A8  0020               	movlb	0	; select bank0
  3596  06A9  0820               	movf	?___ftpack,w
  3597  06AA  00A8               	movwf	?___lltoft
  3598  06AB  0821               	movf	?___ftpack+1,w
  3599  06AC  00A9               	movwf	?___lltoft+1
  3600  06AD  0822               	movf	?___ftpack+2,w
  3601  06AE  00AA               	movwf	?___lltoft+2
  3602  06AF  0008               	return
  3603  06B0                     __end_of___lltoft:	
  3604                           
  3605                           	psect	text11
  3606  03A8                     __ptext11:	
  3607 ;; *************** function ___fttol *****************
  3608 ;; Defined at:
  3609 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  f1              3    0[BANK0 ] float 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  lval            4    9[BANK0 ] unsigned long 
  3614 ;;  exp1            1   13[BANK0 ] unsigned char 
  3615 ;;  sign1           1    8[BANK0 ] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  4    0[BANK0 ] long 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3625 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;Total ram usage:       14 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    2
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		__calculate_speed
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function ___fttol
  3641  03A8                     ___fttol:	
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3645  03A8  0020               	movlb	0	; select bank0
  3646  03A9  0820               	movf	___fttol@f1,w
  3647  03AA  00A4               	movwf	??___fttol
  3648  03AB  0821               	movf	___fttol@f1+1,w
  3649  03AC  00A5               	movwf	??___fttol+1
  3650  03AD  0822               	movf	___fttol@f1+2,w
  3651  03AE  00A6               	movwf	??___fttol+2
  3652  03AF  1003               	clrc
  3653  03B0  0D25               	rlf	??___fttol+1,w
  3654  03B1  0D26               	rlf	??___fttol+2,w
  3655  03B2  00A7               	movwf	??___fttol+3
  3656  03B3  0827               	movf	??___fttol+3,w
  3657  03B4  00AD               	movwf	___fttol@exp1
  3658  03B5  082D               	movf	___fttol@exp1,w
  3659  03B6  1D03               	btfss	3,2
  3660  03B7  2BC1               	goto	l1932
  3661  03B8  3000               	movlw	0
  3662  03B9  00A3               	movwf	?___fttol+3
  3663  03BA  3000               	movlw	0
  3664  03BB  00A2               	movwf	?___fttol+2
  3665  03BC  3000               	movlw	0
  3666  03BD  00A1               	movwf	?___fttol+1
  3667  03BE  3000               	movlw	0
  3668  03BF  00A0               	movwf	?___fttol
  3669  03C0  0008               	return
  3670  03C1                     l1932:	
  3671  03C1  0820               	movf	___fttol@f1,w
  3672  03C2  00A4               	movwf	??___fttol
  3673  03C3  0821               	movf	___fttol@f1+1,w
  3674  03C4  00A5               	movwf	??___fttol+1
  3675  03C5  0822               	movf	___fttol@f1+2,w
  3676  03C6  00A6               	movwf	??___fttol+2
  3677  03C7  3017               	movlw	23
  3678  03C8                     u2245:	
  3679  03C8  36A6               	lsrf	??___fttol+2,f
  3680  03C9  0CA5               	rrf	??___fttol+1,f
  3681  03CA  0CA4               	rrf	??___fttol,f
  3682  03CB  0B89               	decfsz	9,f
  3683  03CC  2BC8               	goto	u2245
  3684  03CD  0824               	movf	??___fttol,w
  3685  03CE  00A7               	movwf	??___fttol+3
  3686  03CF  0827               	movf	??___fttol+3,w
  3687  03D0  00A8               	movwf	___fttol@sign1
  3688  03D1  17A1               	bsf	___fttol@f1+1,7
  3689  03D2  30FF               	movlw	255
  3690  03D3  05A0               	andwf	___fttol@f1,f
  3691  03D4  30FF               	movlw	255
  3692  03D5  05A1               	andwf	___fttol@f1+1,f
  3693  03D6  3000               	movlw	0
  3694  03D7  05A2               	andwf	___fttol@f1+2,f
  3695  03D8  0820               	movf	___fttol@f1,w
  3696  03D9  00A9               	movwf	___fttol@lval
  3697  03DA  0821               	movf	___fttol@f1+1,w
  3698  03DB  00AA               	movwf	___fttol@lval+1
  3699  03DC  0822               	movf	___fttol@f1+2,w
  3700  03DD  00AB               	movwf	___fttol@lval+2
  3701  03DE  01AC               	clrf	___fttol@lval+3
  3702  03DF  308E               	movlw	142
  3703  03E0  02AD               	subwf	___fttol@exp1,f
  3704  03E1  1FAD               	btfss	___fttol@exp1,7
  3705  03E2  2BFF               	goto	l1952
  3706  03E3  082D               	movf	___fttol@exp1,w
  3707  03E4  3A80               	xorlw	128
  3708  03E5  3E8F               	addlw	143
  3709  03E6  1803               	skipnc
  3710  03E7  2BF1               	goto	l1950
  3711  03E8  3000               	movlw	0
  3712  03E9  00A3               	movwf	?___fttol+3
  3713  03EA  3000               	movlw	0
  3714  03EB  00A2               	movwf	?___fttol+2
  3715  03EC  3000               	movlw	0
  3716  03ED  00A1               	movwf	?___fttol+1
  3717  03EE  3000               	movlw	0
  3718  03EF  00A0               	movwf	?___fttol
  3719  03F0  0008               	return
  3720  03F1                     l1950:	
  3721  03F1  3001               	movlw	1
  3722  03F2                     u2275:	
  3723  03F2  36AC               	lsrf	___fttol@lval+3,f
  3724  03F3  0CAB               	rrf	___fttol@lval+2,f
  3725  03F4  0CAA               	rrf	___fttol@lval+1,f
  3726  03F5  0CA9               	rrf	___fttol@lval,f
  3727  03F6  0B89               	decfsz	9,f
  3728  03F7  2BF2               	goto	u2275
  3729  03F8  3001               	movlw	1
  3730  03F9  00A4               	movwf	??___fttol
  3731  03FA  0824               	movf	??___fttol,w
  3732  03FB  07AD               	addwf	___fttol@exp1,f
  3733  03FC  1903               	btfsc	3,2
  3734  03FD  2C18               	goto	l1960
  3735  03FE  2BF1               	goto	l1950
  3736  03FF                     l1952:	
  3737  03FF  3018               	movlw	24
  3738  0400  022D               	subwf	___fttol@exp1,w
  3739  0401  1C03               	skipc
  3740  0402  2C15               	goto	l536
  3741  0403  3000               	movlw	0
  3742  0404  00A3               	movwf	?___fttol+3
  3743  0405  3000               	movlw	0
  3744  0406  00A2               	movwf	?___fttol+2
  3745  0407  3000               	movlw	0
  3746  0408  00A1               	movwf	?___fttol+1
  3747  0409  3000               	movlw	0
  3748  040A  00A0               	movwf	?___fttol
  3749  040B  0008               	return
  3750  040C                     l1958:	
  3751  040C  3001               	movlw	1
  3752  040D                     u2305:	
  3753  040D  35A9               	lslf	___fttol@lval,f
  3754  040E  0DAA               	rlf	___fttol@lval+1,f
  3755  040F  0DAB               	rlf	___fttol@lval+2,f
  3756  0410  0DAC               	rlf	___fttol@lval+3,f
  3757  0411  0B89               	decfsz	9,f
  3758  0412  2C0D               	goto	u2305
  3759  0413  3001               	movlw	1
  3760  0414  02AD               	subwf	___fttol@exp1,f
  3761  0415                     l536:	
  3762  0415  082D               	movf	___fttol@exp1,w
  3763  0416  1D03               	btfss	3,2
  3764  0417  2C0C               	goto	l1958
  3765  0418                     l1960:	
  3766  0418  0828               	movf	___fttol@sign1,w
  3767  0419  1903               	btfsc	3,2
  3768  041A  2C26               	goto	l1964
  3769  041B  09A9               	comf	___fttol@lval,f
  3770  041C  09AA               	comf	___fttol@lval+1,f
  3771  041D  09AB               	comf	___fttol@lval+2,f
  3772  041E  09AC               	comf	___fttol@lval+3,f
  3773  041F  0AA9               	incf	___fttol@lval,f
  3774  0420  1903               	skipnz
  3775  0421  0AAA               	incf	___fttol@lval+1,f
  3776  0422  1903               	skipnz
  3777  0423  0AAB               	incf	___fttol@lval+2,f
  3778  0424  1903               	skipnz
  3779  0425  0AAC               	incf	___fttol@lval+3,f
  3780  0426                     l1964:	
  3781  0426  082C               	movf	___fttol@lval+3,w
  3782  0427  00A3               	movwf	?___fttol+3
  3783  0428  082B               	movf	___fttol@lval+2,w
  3784  0429  00A2               	movwf	?___fttol+2
  3785  042A  082A               	movf	___fttol@lval+1,w
  3786  042B  00A1               	movwf	?___fttol+1
  3787  042C  0829               	movf	___fttol@lval,w
  3788  042D  00A0               	movwf	?___fttol
  3789  042E  0008               	return
  3790  042F                     __end_of___fttol:	
  3791                           
  3792                           	psect	text12
  3793  0129                     __ptext12:	
  3794 ;; *************** function ___ftmul *****************
  3795 ;; Defined at:
  3796 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  f1              3    8[BANK0 ] float 
  3799 ;;  f2              3   11[BANK0 ] float 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  3802 ;;  sign            1   23[BANK0 ] unsigned char 
  3803 ;;  cntr            1   22[BANK0 ] unsigned char 
  3804 ;;  exp             1   18[BANK0 ] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  3    8[BANK0 ] float 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0, pclath, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3814 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;Total ram usage:       16 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    3
  3821 ;; This function calls:
  3822 ;;		___ftpack
  3823 ;; This function is called by:
  3824 ;;		__calculate_speed
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           
  3829                           ;psect for function ___ftmul
  3830  0129                     ___ftmul:	
  3831                           
  3832                           ;incstack = 0
  3833                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3834  0129  0020               	movlb	0	; select bank0
  3835  012A  0828               	movf	___ftmul@f1,w
  3836  012B  00AE               	movwf	??___ftmul
  3837  012C  0829               	movf	___ftmul@f1+1,w
  3838  012D  00AF               	movwf	??___ftmul+1
  3839  012E  082A               	movf	___ftmul@f1+2,w
  3840  012F  00B0               	movwf	??___ftmul+2
  3841  0130  1003               	clrc
  3842  0131  0D2F               	rlf	??___ftmul+1,w
  3843  0132  0D30               	rlf	??___ftmul+2,w
  3844  0133  00B1               	movwf	??___ftmul+3
  3845  0134  0831               	movf	??___ftmul+3,w
  3846  0135  00B2               	movwf	___ftmul@exp
  3847  0136  0832               	movf	___ftmul@exp,w
  3848  0137  1D03               	btfss	3,2
  3849  0138  2940               	goto	l1882
  3850  0139  3000               	movlw	0
  3851  013A  00A8               	movwf	?___ftmul
  3852  013B  3000               	movlw	0
  3853  013C  00A9               	movwf	?___ftmul+1
  3854  013D  3000               	movlw	0
  3855  013E  00AA               	movwf	?___ftmul+2
  3856  013F  0008               	return
  3857  0140                     l1882:	
  3858  0140  082B               	movf	___ftmul@f2,w
  3859  0141  00AE               	movwf	??___ftmul
  3860  0142  082C               	movf	___ftmul@f2+1,w
  3861  0143  00AF               	movwf	??___ftmul+1
  3862  0144  082D               	movf	___ftmul@f2+2,w
  3863  0145  00B0               	movwf	??___ftmul+2
  3864  0146  1003               	clrc
  3865  0147  0D2F               	rlf	??___ftmul+1,w
  3866  0148  0D30               	rlf	??___ftmul+2,w
  3867  0149  00B1               	movwf	??___ftmul+3
  3868  014A  0831               	movf	??___ftmul+3,w
  3869  014B  00B7               	movwf	___ftmul@sign
  3870  014C  0837               	movf	___ftmul@sign,w
  3871  014D  1D03               	btfss	3,2
  3872  014E  2956               	goto	l1888
  3873  014F  3000               	movlw	0
  3874  0150  00A8               	movwf	?___ftmul
  3875  0151  3000               	movlw	0
  3876  0152  00A9               	movwf	?___ftmul+1
  3877  0153  3000               	movlw	0
  3878  0154  00AA               	movwf	?___ftmul+2
  3879  0155  0008               	return
  3880  0156                     l1888:	
  3881  0156  0837               	movf	___ftmul@sign,w
  3882  0157  3E7B               	addlw	123
  3883  0158  00AE               	movwf	??___ftmul
  3884  0159  082E               	movf	??___ftmul,w
  3885  015A  07B2               	addwf	___ftmul@exp,f
  3886  015B  0828               	movf	___ftmul@f1,w
  3887  015C  00AE               	movwf	??___ftmul
  3888  015D  0829               	movf	___ftmul@f1+1,w
  3889  015E  00AF               	movwf	??___ftmul+1
  3890  015F  082A               	movf	___ftmul@f1+2,w
  3891  0160  00B0               	movwf	??___ftmul+2
  3892  0161  3010               	movlw	16
  3893  0162                     u2135:	
  3894  0162  36B0               	lsrf	??___ftmul+2,f
  3895  0163  0CAF               	rrf	??___ftmul+1,f
  3896  0164  0CAE               	rrf	??___ftmul,f
  3897  0165  0B89               	decfsz	9,f
  3898  0166  2962               	goto	u2135
  3899  0167  082E               	movf	??___ftmul,w
  3900  0168  00B1               	movwf	??___ftmul+3
  3901  0169  0831               	movf	??___ftmul+3,w
  3902  016A  00B7               	movwf	___ftmul@sign
  3903  016B  082B               	movf	___ftmul@f2,w
  3904  016C  00AE               	movwf	??___ftmul
  3905  016D  082C               	movf	___ftmul@f2+1,w
  3906  016E  00AF               	movwf	??___ftmul+1
  3907  016F  082D               	movf	___ftmul@f2+2,w
  3908  0170  00B0               	movwf	??___ftmul+2
  3909  0171  3010               	movlw	16
  3910  0172                     u2145:	
  3911  0172  36B0               	lsrf	??___ftmul+2,f
  3912  0173  0CAF               	rrf	??___ftmul+1,f
  3913  0174  0CAE               	rrf	??___ftmul,f
  3914  0175  0B89               	decfsz	9,f
  3915  0176  2972               	goto	u2145
  3916  0177  082E               	movf	??___ftmul,w
  3917  0178  00B1               	movwf	??___ftmul+3
  3918  0179  0831               	movf	??___ftmul+3,w
  3919  017A  06B7               	xorwf	___ftmul@sign,f
  3920  017B  3080               	movlw	128
  3921  017C  00AE               	movwf	??___ftmul
  3922  017D  082E               	movf	??___ftmul,w
  3923  017E  05B7               	andwf	___ftmul@sign,f
  3924  017F  17A9               	bsf	___ftmul@f1+1,7
  3925  0180  17AC               	bsf	___ftmul@f2+1,7
  3926  0181  30FF               	movlw	255
  3927  0182  05AB               	andwf	___ftmul@f2,f
  3928  0183  30FF               	movlw	255
  3929  0184  05AC               	andwf	___ftmul@f2+1,f
  3930  0185  3000               	movlw	0
  3931  0186  05AD               	andwf	___ftmul@f2+2,f
  3932  0187  3000               	movlw	0
  3933  0188  00B3               	movwf	___ftmul@f3_as_product
  3934  0189  3000               	movlw	0
  3935  018A  00B4               	movwf	___ftmul@f3_as_product+1
  3936  018B  3000               	movlw	0
  3937  018C  00B5               	movwf	___ftmul@f3_as_product+2
  3938  018D  3007               	movlw	7
  3939  018E  00AE               	movwf	??___ftmul
  3940  018F  082E               	movf	??___ftmul,w
  3941  0190  00B6               	movwf	___ftmul@cntr
  3942  0191                     l1900:	
  3943  0191  1C28               	btfss	___ftmul@f1,0
  3944  0192  2999               	goto	l1904
  3945  0193  082B               	movf	___ftmul@f2,w
  3946  0194  07B3               	addwf	___ftmul@f3_as_product,f
  3947  0195  082C               	movf	___ftmul@f2+1,w
  3948  0196  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  3949  0197  082D               	movf	___ftmul@f2+2,w
  3950  0198  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  3951  0199                     l1904:	
  3952  0199  3001               	movlw	1
  3953  019A                     u2165:	
  3954  019A  36AA               	lsrf	___ftmul@f1+2,f
  3955  019B  0CA9               	rrf	___ftmul@f1+1,f
  3956  019C  0CA8               	rrf	___ftmul@f1,f
  3957  019D  0B89               	decfsz	9,f
  3958  019E  299A               	goto	u2165
  3959  019F  3001               	movlw	1
  3960  01A0                     u2175:	
  3961  01A0  35AB               	lslf	___ftmul@f2,f
  3962  01A1  0DAC               	rlf	___ftmul@f2+1,f
  3963  01A2  0DAD               	rlf	___ftmul@f2+2,f
  3964  01A3  0B89               	decfsz	9,f
  3965  01A4  29A0               	goto	u2175
  3966  01A5  3001               	movlw	1
  3967  01A6  02B6               	subwf	___ftmul@cntr,f
  3968  01A7  1D03               	btfss	3,2
  3969  01A8  2991               	goto	l1900
  3970  01A9  3009               	movlw	9
  3971  01AA  00AE               	movwf	??___ftmul
  3972  01AB  082E               	movf	??___ftmul,w
  3973  01AC  00B6               	movwf	___ftmul@cntr
  3974  01AD                     l1912:	
  3975  01AD  1C28               	btfss	___ftmul@f1,0
  3976  01AE  29B5               	goto	l1916
  3977  01AF  082B               	movf	___ftmul@f2,w
  3978  01B0  07B3               	addwf	___ftmul@f3_as_product,f
  3979  01B1  082C               	movf	___ftmul@f2+1,w
  3980  01B2  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  3981  01B3  082D               	movf	___ftmul@f2+2,w
  3982  01B4  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  3983  01B5                     l1916:	
  3984  01B5  3001               	movlw	1
  3985  01B6                     u2205:	
  3986  01B6  36AA               	lsrf	___ftmul@f1+2,f
  3987  01B7  0CA9               	rrf	___ftmul@f1+1,f
  3988  01B8  0CA8               	rrf	___ftmul@f1,f
  3989  01B9  0B89               	decfsz	9,f
  3990  01BA  29B6               	goto	u2205
  3991  01BB  3001               	movlw	1
  3992  01BC                     u2215:	
  3993  01BC  36B5               	lsrf	___ftmul@f3_as_product+2,f
  3994  01BD  0CB4               	rrf	___ftmul@f3_as_product+1,f
  3995  01BE  0CB3               	rrf	___ftmul@f3_as_product,f
  3996  01BF  0B89               	decfsz	9,f
  3997  01C0  29BC               	goto	u2215
  3998  01C1  3001               	movlw	1
  3999  01C2  02B6               	subwf	___ftmul@cntr,f
  4000  01C3  1D03               	btfss	3,2
  4001  01C4  29AD               	goto	l1912
  4002  01C5  0833               	movf	___ftmul@f3_as_product,w
  4003  01C6  00A0               	movwf	___ftpack@arg
  4004  01C7  0834               	movf	___ftmul@f3_as_product+1,w
  4005  01C8  00A1               	movwf	___ftpack@arg+1
  4006  01C9  0835               	movf	___ftmul@f3_as_product+2,w
  4007  01CA  00A2               	movwf	___ftpack@arg+2
  4008  01CB  0832               	movf	___ftmul@exp,w
  4009  01CC  00AE               	movwf	??___ftmul
  4010  01CD  082E               	movf	??___ftmul,w
  4011  01CE  00A3               	movwf	___ftpack@exp
  4012  01CF  0837               	movf	___ftmul@sign,w
  4013  01D0  00AF               	movwf	??___ftmul+1
  4014  01D1  082F               	movf	??___ftmul+1,w
  4015  01D2  00A4               	movwf	___ftpack@sign
  4016  01D3  3184  2498         	fcall	___ftpack
  4017  01D5  0020               	movlb	0	; select bank0
  4018  01D6  0820               	movf	?___ftpack,w
  4019  01D7  00A8               	movwf	?___ftmul
  4020  01D8  0821               	movf	?___ftpack+1,w
  4021  01D9  00A9               	movwf	?___ftmul+1
  4022  01DA  0822               	movf	?___ftpack+2,w
  4023  01DB  00AA               	movwf	?___ftmul+2
  4024  01DC  0008               	return
  4025  01DD                     __end_of___ftmul:	
  4026                           
  4027                           	psect	text13
  4028  01DD                     __ptext13:	
  4029 ;; *************** function ___ftdiv *****************
  4030 ;; Defined at:
  4031 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  f2              3   14[BANK0 ] float 
  4034 ;;  f1              3   17[BANK0 ] float 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  f3              3   25[BANK0 ] float 
  4037 ;;  sign            1   29[BANK0 ] unsigned char 
  4038 ;;  exp             1   28[BANK0 ] unsigned char 
  4039 ;;  cntr            1   24[BANK0 ] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  3   14[BANK0 ] float 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, pclath, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4049 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;Total ram usage:       16 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    3
  4056 ;; This function calls:
  4057 ;;		___ftpack
  4058 ;; This function is called by:
  4059 ;;		__calculate_speed
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function ___ftdiv
  4065  01DD                     ___ftdiv:	
  4066                           
  4067                           ;incstack = 0
  4068                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4069  01DD  0020               	movlb	0	; select bank0
  4070  01DE  0831               	movf	___ftdiv@f1,w
  4071  01DF  00B4               	movwf	??___ftdiv
  4072  01E0  0832               	movf	___ftdiv@f1+1,w
  4073  01E1  00B5               	movwf	??___ftdiv+1
  4074  01E2  0833               	movf	___ftdiv@f1+2,w
  4075  01E3  00B6               	movwf	??___ftdiv+2
  4076  01E4  1003               	clrc
  4077  01E5  0D35               	rlf	??___ftdiv+1,w
  4078  01E6  0D36               	rlf	??___ftdiv+2,w
  4079  01E7  00B7               	movwf	??___ftdiv+3
  4080  01E8  0837               	movf	??___ftdiv+3,w
  4081  01E9  00BC               	movwf	___ftdiv@exp
  4082  01EA  083C               	movf	___ftdiv@exp,w
  4083  01EB  1D03               	btfss	3,2
  4084  01EC  29F4               	goto	l1840
  4085  01ED  3000               	movlw	0
  4086  01EE  00AE               	movwf	?___ftdiv
  4087  01EF  3000               	movlw	0
  4088  01F0  00AF               	movwf	?___ftdiv+1
  4089  01F1  3000               	movlw	0
  4090  01F2  00B0               	movwf	?___ftdiv+2
  4091  01F3  0008               	return
  4092  01F4                     l1840:	
  4093  01F4  082E               	movf	___ftdiv@f2,w
  4094  01F5  00B4               	movwf	??___ftdiv
  4095  01F6  082F               	movf	___ftdiv@f2+1,w
  4096  01F7  00B5               	movwf	??___ftdiv+1
  4097  01F8  0830               	movf	___ftdiv@f2+2,w
  4098  01F9  00B6               	movwf	??___ftdiv+2
  4099  01FA  1003               	clrc
  4100  01FB  0D35               	rlf	??___ftdiv+1,w
  4101  01FC  0D36               	rlf	??___ftdiv+2,w
  4102  01FD  00B7               	movwf	??___ftdiv+3
  4103  01FE  0837               	movf	??___ftdiv+3,w
  4104  01FF  00BD               	movwf	___ftdiv@sign
  4105  0200  083D               	movf	___ftdiv@sign,w
  4106  0201  1D03               	btfss	3,2
  4107  0202  2A0A               	goto	l1846
  4108  0203  3000               	movlw	0
  4109  0204  00AE               	movwf	?___ftdiv
  4110  0205  3000               	movlw	0
  4111  0206  00AF               	movwf	?___ftdiv+1
  4112  0207  3000               	movlw	0
  4113  0208  00B0               	movwf	?___ftdiv+2
  4114  0209  0008               	return
  4115  020A                     l1846:	
  4116  020A  3000               	movlw	0
  4117  020B  00B9               	movwf	___ftdiv@f3
  4118  020C  3000               	movlw	0
  4119  020D  00BA               	movwf	___ftdiv@f3+1
  4120  020E  3000               	movlw	0
  4121  020F  00BB               	movwf	___ftdiv@f3+2
  4122  0210  3089               	movlw	137
  4123  0211  073D               	addwf	___ftdiv@sign,w
  4124  0212  00B4               	movwf	??___ftdiv
  4125  0213  0834               	movf	??___ftdiv,w
  4126  0214  02BC               	subwf	___ftdiv@exp,f
  4127  0215  0831               	movf	___ftdiv@f1,w
  4128  0216  00B4               	movwf	??___ftdiv
  4129  0217  0832               	movf	___ftdiv@f1+1,w
  4130  0218  00B5               	movwf	??___ftdiv+1
  4131  0219  0833               	movf	___ftdiv@f1+2,w
  4132  021A  00B6               	movwf	??___ftdiv+2
  4133  021B  3010               	movlw	16
  4134  021C                     u2055:	
  4135  021C  36B6               	lsrf	??___ftdiv+2,f
  4136  021D  0CB5               	rrf	??___ftdiv+1,f
  4137  021E  0CB4               	rrf	??___ftdiv,f
  4138  021F  0B89               	decfsz	9,f
  4139  0220  2A1C               	goto	u2055
  4140  0221  0834               	movf	??___ftdiv,w
  4141  0222  00B7               	movwf	??___ftdiv+3
  4142  0223  0837               	movf	??___ftdiv+3,w
  4143  0224  00BD               	movwf	___ftdiv@sign
  4144  0225  082E               	movf	___ftdiv@f2,w
  4145  0226  00B4               	movwf	??___ftdiv
  4146  0227  082F               	movf	___ftdiv@f2+1,w
  4147  0228  00B5               	movwf	??___ftdiv+1
  4148  0229  0830               	movf	___ftdiv@f2+2,w
  4149  022A  00B6               	movwf	??___ftdiv+2
  4150  022B  3010               	movlw	16
  4151  022C                     u2065:	
  4152  022C  36B6               	lsrf	??___ftdiv+2,f
  4153  022D  0CB5               	rrf	??___ftdiv+1,f
  4154  022E  0CB4               	rrf	??___ftdiv,f
  4155  022F  0B89               	decfsz	9,f
  4156  0230  2A2C               	goto	u2065
  4157  0231  0834               	movf	??___ftdiv,w
  4158  0232  00B7               	movwf	??___ftdiv+3
  4159  0233  0837               	movf	??___ftdiv+3,w
  4160  0234  06BD               	xorwf	___ftdiv@sign,f
  4161  0235  3080               	movlw	128
  4162  0236  00B4               	movwf	??___ftdiv
  4163  0237  0834               	movf	??___ftdiv,w
  4164  0238  05BD               	andwf	___ftdiv@sign,f
  4165  0239  17B2               	bsf	___ftdiv@f1+1,7
  4166  023A  30FF               	movlw	255
  4167  023B  05B1               	andwf	___ftdiv@f1,f
  4168  023C  30FF               	movlw	255
  4169  023D  05B2               	andwf	___ftdiv@f1+1,f
  4170  023E  3000               	movlw	0
  4171  023F  05B3               	andwf	___ftdiv@f1+2,f
  4172  0240  17AF               	bsf	___ftdiv@f2+1,7
  4173  0241  30FF               	movlw	255
  4174  0242  05AE               	andwf	___ftdiv@f2,f
  4175  0243  30FF               	movlw	255
  4176  0244  05AF               	andwf	___ftdiv@f2+1,f
  4177  0245  3000               	movlw	0
  4178  0246  05B0               	andwf	___ftdiv@f2+2,f
  4179  0247  3018               	movlw	24
  4180  0248  00B4               	movwf	??___ftdiv
  4181  0249  0834               	movf	??___ftdiv,w
  4182  024A  00B8               	movwf	___ftdiv@cntr
  4183  024B                     l1860:	
  4184  024B  3001               	movlw	1
  4185  024C                     u2075:	
  4186  024C  35B9               	lslf	___ftdiv@f3,f
  4187  024D  0DBA               	rlf	___ftdiv@f3+1,f
  4188  024E  0DBB               	rlf	___ftdiv@f3+2,f
  4189  024F  0B89               	decfsz	9,f
  4190  0250  2A4C               	goto	u2075
  4191  0251  0830               	movf	___ftdiv@f2+2,w
  4192  0252  0233               	subwf	___ftdiv@f1+2,w
  4193  0253  1D03               	skipz
  4194  0254  2A5B               	goto	u2085
  4195  0255  082F               	movf	___ftdiv@f2+1,w
  4196  0256  0232               	subwf	___ftdiv@f1+1,w
  4197  0257  1D03               	skipz
  4198  0258  2A5B               	goto	u2085
  4199  0259  082E               	movf	___ftdiv@f2,w
  4200  025A  0231               	subwf	___ftdiv@f1,w
  4201  025B                     u2085:	
  4202  025B  1C03               	skipc
  4203  025C  2A64               	goto	l1868
  4204  025D  082E               	movf	___ftdiv@f2,w
  4205  025E  02B1               	subwf	___ftdiv@f1,f
  4206  025F  082F               	movf	___ftdiv@f2+1,w
  4207  0260  3BB2               	subwfb	___ftdiv@f1+1,f
  4208  0261  0830               	movf	___ftdiv@f2+2,w
  4209  0262  3BB3               	subwfb	___ftdiv@f1+2,f
  4210  0263  1439               	bsf	___ftdiv@f3,0
  4211  0264                     l1868:	
  4212  0264  3001               	movlw	1
  4213  0265                     u2095:	
  4214  0265  35B1               	lslf	___ftdiv@f1,f
  4215  0266  0DB2               	rlf	___ftdiv@f1+1,f
  4216  0267  0DB3               	rlf	___ftdiv@f1+2,f
  4217  0268  0B89               	decfsz	9,f
  4218  0269  2A65               	goto	u2095
  4219  026A  3001               	movlw	1
  4220  026B  02B8               	subwf	___ftdiv@cntr,f
  4221  026C  1D03               	btfss	3,2
  4222  026D  2A4B               	goto	l1860
  4223  026E  0839               	movf	___ftdiv@f3,w
  4224  026F  00A0               	movwf	___ftpack@arg
  4225  0270  083A               	movf	___ftdiv@f3+1,w
  4226  0271  00A1               	movwf	___ftpack@arg+1
  4227  0272  083B               	movf	___ftdiv@f3+2,w
  4228  0273  00A2               	movwf	___ftpack@arg+2
  4229  0274  083C               	movf	___ftdiv@exp,w
  4230  0275  00B4               	movwf	??___ftdiv
  4231  0276  0834               	movf	??___ftdiv,w
  4232  0277  00A3               	movwf	___ftpack@exp
  4233  0278  083D               	movf	___ftdiv@sign,w
  4234  0279  00B5               	movwf	??___ftdiv+1
  4235  027A  0835               	movf	??___ftdiv+1,w
  4236  027B  00A4               	movwf	___ftpack@sign
  4237  027C  3184  2498         	fcall	___ftpack
  4238  027E  0020               	movlb	0	; select bank0
  4239  027F  0820               	movf	?___ftpack,w
  4240  0280  00AE               	movwf	?___ftdiv
  4241  0281  0821               	movf	?___ftpack+1,w
  4242  0282  00AF               	movwf	?___ftdiv+1
  4243  0283  0822               	movf	?___ftpack+2,w
  4244  0284  00B0               	movwf	?___ftdiv+2
  4245  0285  0008               	return
  4246  0286                     __end_of___ftdiv:	
  4247                           
  4248                           	psect	text14
  4249  0498                     __ptext14:	
  4250 ;; *************** function ___ftpack *****************
  4251 ;; Defined at:
  4252 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  arg             3    0[BANK0 ] unsigned um
  4255 ;;  exp             1    3[BANK0 ] unsigned char 
  4256 ;;  sign            1    4[BANK0 ] unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  3    0[BANK0 ] float 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4268 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;Total ram usage:        8 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    2
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		___ftdiv
  4279 ;;		___ftmul
  4280 ;;		___lltoft
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           
  4285                           ;psect for function ___ftpack
  4286  0498                     ___ftpack:	
  4287                           
  4288                           ;incstack = 0
  4289                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4290  0498  0020               	movlb	0	; select bank0
  4291  0499  0823               	movf	___ftpack@exp,w
  4292  049A  1903               	btfsc	3,2
  4293  049B  2CA1               	goto	l1728
  4294  049C  0822               	movf	___ftpack@arg+2,w
  4295  049D  0421               	iorwf	___ftpack@arg+1,w
  4296  049E  0420               	iorwf	___ftpack@arg,w
  4297  049F  1D03               	skipz
  4298  04A0  2CB2               	goto	l1734
  4299  04A1                     l1728:	
  4300  04A1  3000               	movlw	0
  4301  04A2  00A0               	movwf	?___ftpack
  4302  04A3  3000               	movlw	0
  4303  04A4  00A1               	movwf	?___ftpack+1
  4304  04A5  3000               	movlw	0
  4305  04A6  00A2               	movwf	?___ftpack+2
  4306  04A7  0008               	return
  4307  04A8                     l1732:	
  4308  04A8  3001               	movlw	1
  4309  04A9  00A5               	movwf	??___ftpack
  4310  04AA  0825               	movf	??___ftpack,w
  4311  04AB  07A3               	addwf	___ftpack@exp,f
  4312  04AC  3001               	movlw	1
  4313  04AD                     u1895:	
  4314  04AD  36A2               	lsrf	___ftpack@arg+2,f
  4315  04AE  0CA1               	rrf	___ftpack@arg+1,f
  4316  04AF  0CA0               	rrf	___ftpack@arg,f
  4317  04B0  0B89               	decfsz	9,f
  4318  04B1  2CAD               	goto	u1895
  4319  04B2                     l1734:	
  4320  04B2  30FE               	movlw	254
  4321  04B3  0522               	andwf	___ftpack@arg+2,w
  4322  04B4  1903               	btfsc	3,2
  4323  04B5  2CCB               	goto	l445
  4324  04B6  2CA8               	goto	l1732
  4325  04B7                     l1736:	
  4326  04B7  3001               	movlw	1
  4327  04B8  00A5               	movwf	??___ftpack
  4328  04B9  0825               	movf	??___ftpack,w
  4329  04BA  07A3               	addwf	___ftpack@exp,f
  4330  04BB  3001               	movlw	1
  4331  04BC  07A0               	addwf	___ftpack@arg,f
  4332  04BD  3000               	movlw	0
  4333  04BE  1803               	skipnc
  4334  04BF  3001               	movlw	1
  4335  04C0  07A1               	addwf	___ftpack@arg+1,f
  4336  04C1  3000               	movlw	0
  4337  04C2  1803               	skipnc
  4338  04C3  3001               	movlw	1
  4339  04C4  07A2               	addwf	___ftpack@arg+2,f
  4340  04C5  3001               	movlw	1
  4341  04C6                     u1915:	
  4342  04C6  36A2               	lsrf	___ftpack@arg+2,f
  4343  04C7  0CA1               	rrf	___ftpack@arg+1,f
  4344  04C8  0CA0               	rrf	___ftpack@arg,f
  4345  04C9  0B89               	decfsz	9,f
  4346  04CA  2CC6               	goto	u1915
  4347  04CB                     l445:	
  4348  04CB  30FF               	movlw	255
  4349  04CC  0522               	andwf	___ftpack@arg+2,w
  4350  04CD  1903               	btfsc	3,2
  4351  04CE  2CD8               	goto	l1744
  4352  04CF  2CB7               	goto	l1736
  4353  04D0                     l1742:	
  4354  04D0  3001               	movlw	1
  4355  04D1  02A3               	subwf	___ftpack@exp,f
  4356  04D2  3001               	movlw	1
  4357  04D3                     u1935:	
  4358  04D3  35A0               	lslf	___ftpack@arg,f
  4359  04D4  0DA1               	rlf	___ftpack@arg+1,f
  4360  04D5  0DA2               	rlf	___ftpack@arg+2,f
  4361  04D6  0B89               	decfsz	9,f
  4362  04D7  2CD3               	goto	u1935
  4363  04D8                     l1744:	
  4364  04D8  1BA1               	btfsc	___ftpack@arg+1,7
  4365  04D9  2CDE               	goto	l452
  4366  04DA  3002               	movlw	2
  4367  04DB  0223               	subwf	___ftpack@exp,w
  4368  04DC  1803               	skipnc
  4369  04DD  2CD0               	goto	l1742
  4370  04DE                     l452:	
  4371  04DE  1823               	btfsc	___ftpack@exp,0
  4372  04DF  2CE6               	goto	l453
  4373  04E0  30FF               	movlw	255
  4374  04E1  05A0               	andwf	___ftpack@arg,f
  4375  04E2  307F               	movlw	127
  4376  04E3  05A1               	andwf	___ftpack@arg+1,f
  4377  04E4  30FF               	movlw	255
  4378  04E5  05A2               	andwf	___ftpack@arg+2,f
  4379  04E6                     l453:	
  4380  04E6  1003               	clrc
  4381  04E7  0CA3               	rrf	___ftpack@exp,f
  4382  04E8  0823               	movf	___ftpack@exp,w
  4383  04E9  00A5               	movwf	??___ftpack
  4384  04EA  01A6               	clrf	??___ftpack+1
  4385  04EB  01A7               	clrf	??___ftpack+2
  4386  04EC  3010               	movlw	16
  4387  04ED                     u1975:	
  4388  04ED  35A5               	lslf	??___ftpack,f
  4389  04EE  0DA6               	rlf	??___ftpack+1,f
  4390  04EF  0DA7               	rlf	??___ftpack+2,f
  4391  04F0  0B89               	decfsz	9,f
  4392  04F1  2CED               	goto	u1975
  4393  04F2  0825               	movf	??___ftpack,w
  4394  04F3  04A0               	iorwf	___ftpack@arg,f
  4395  04F4  0826               	movf	??___ftpack+1,w
  4396  04F5  04A1               	iorwf	___ftpack@arg+1,f
  4397  04F6  0827               	movf	??___ftpack+2,w
  4398  04F7  04A2               	iorwf	___ftpack@arg+2,f
  4399  04F8  0824               	movf	___ftpack@sign,w
  4400  04F9  1903               	btfsc	3,2
  4401  04FA  0008               	return
  4402  04FB  17A2               	bsf	___ftpack@arg+2,7
  4403  04FC  0008               	return
  4404  04FD                     __end_of___ftpack:	
  4405                           
  4406                           	psect	intentry
  4407  0004                     __pintentry:	
  4408 ;; *************** function __isr *****************
  4409 ;; Defined at:
  4410 ;;		line 74 in file "main.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    1
  4431 ;; This function calls:
  4432 ;;		_capture_isr
  4433 ;;		_display_update
  4434 ;;		_timer_1_isr
  4435 ;; This function is called by:
  4436 ;;		Interrupt level 1
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440  0004                     __isr:	
  4441                           
  4442                           ;incstack = 0
  4443  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4444                           
  4445                           ; Regs used in __isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4446  0005  3180               	pagesel	$
  4447  0006  0020               	movlb	0	; select bank0
  4448  0007  087F               	movf	127,w
  4449  0008  00F5               	movwf	??__isr+1
  4450                           
  4451                           ;main.c: 82: if(PIR6bits.CCP1IF || PIR6bits.CCP2IF)
  4452  0009  002E               	movlb	14	; select bank14
  4453  000A  1812               	btfsc	18,0	;volatile
  4454  000B  280E               	goto	i1l1668
  4455  000C  1C92               	btfss	18,1	;volatile
  4456  000D  2811               	goto	i1l1670
  4457  000E                     i1l1668:	
  4458                           
  4459                           ;main.c: 83: {
  4460                           ;main.c: 84: capture_isr();
  4461  000E  3182  2286  3180   	fcall	_capture_isr
  4462  0011                     i1l1670:	
  4463                           
  4464                           ;main.c: 85: }
  4465                           ;main.c: 88: if(PIR4bits.TMR1IF)
  4466  0011  002E               	movlb	14	; select bank14
  4467  0012  1C10               	btfss	16,0	;volatile
  4468  0013  2817               	goto	i1l1674
  4469                           
  4470                           ;main.c: 89: {
  4471                           ;main.c: 90: timer_1_isr();
  4472  0014  3184  242F  3180   	fcall	_timer_1_isr
  4473  0017                     i1l1674:	
  4474                           
  4475                           ;main.c: 91: }
  4476                           ;main.c: 94: if(PIR4bits.TMR2IF)
  4477  0017  002E               	movlb	14	; select bank14
  4478  0018  1C90               	btfss	16,1	;volatile
  4479  0019  2824               	goto	i1l74
  4480                           
  4481                           ;main.c: 95: {
  4482                           ;main.c: 97: display_update();
  4483  001A  3185  25CD         	fcall	_display_update
  4484                           
  4485                           ;main.c: 99: ++os.timeSlot;
  4486  001C  3001               	movlw	1
  4487  001D  00F4               	movwf	??__isr
  4488  001E  0874               	movf	??__isr,w
  4489  001F  0020               	movlb	0	; select bank0
  4490  0020  07D3               	addwf	_os,f	;volatile
  4491                           
  4492                           ;main.c: 100: os.done = 0;
  4493  0021  01D4               	clrf	_os+1	;volatile
  4494                           
  4495                           ;main.c: 102: PIR4bits.TMR2IF = 0;
  4496  0022  002E               	movlb	14	; select bank14
  4497  0023  1090               	bcf	16,1	;volatile
  4498  0024                     i1l74:	
  4499  0024  0875               	movf	??__isr+1,w
  4500  0025  0020               	movlb	0	; select bank0
  4501  0026  00FF               	movwf	127
  4502  0027  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4503  0028  0009               	retfie
  4504  0029                     __end_of__isr:	
  4505                           
  4506                           	psect	text16
  4507  042F                     __ptext16:	
  4508 ;; *************** function _timer_1_isr *****************
  4509 ;; Defined at:
  4510 ;;		line 43 in file "encoder.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;Total ram usage:        4 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		__isr
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function _timer_1_isr
  4539  042F                     _timer_1_isr:	
  4540                           
  4541                           ;encoder.c: 45: ++rollover_cnt;
  4542                           
  4543                           ;incstack = 0
  4544                           ; Regs used in _timer_1_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  4545  042F  3001               	movlw	1
  4546  0430  07F6               	addwf	_rollover_cnt,f
  4547  0431  3000               	movlw	0
  4548  0432  3DF7               	addwfc	_rollover_cnt+1,f
  4549                           
  4550                           ;encoder.c: 48: if((rollover_cnt&0b11111) == 0)
  4551  0433  301F               	movlw	31
  4552  0434  0576               	andwf	_rollover_cnt,w
  4553  0435  00F0               	movwf	??_timer_1_isr
  4554  0436  3000               	movlw	0
  4555  0437  0577               	andwf	_rollover_cnt+1,w
  4556  0438  00F1               	movwf	??_timer_1_isr+1
  4557  0439  0870               	movf	??_timer_1_isr,w
  4558  043A  0471               	iorwf	??_timer_1_isr+1,w
  4559  043B  1D03               	btfss	3,2
  4560  043C  2C95               	goto	i1l1092
  4561                           
  4562                           ;encoder.c: 49: {
  4563                           ;encoder.c: 51: os.encoder_difference = os.encoder - os.encoder_last;
  4564  043D  3002               	movlw	2
  4565  043E  3E53               	addlw	(low (_os| 0))& (0+255)
  4566  043F  0086               	movwf	6
  4567  0440  0187               	clrf	7
  4568  0441  0020               	movlb	0	; select bank0
  4569  0442  0957               	comf	_os+4,w	;volatile
  4570  0443  00F0               	movwf	??_timer_1_isr
  4571  0444  0958               	comf	_os+5,w	;volatile
  4572  0445  00F1               	movwf	??_timer_1_isr+1
  4573  0446  0AF0               	incf	??_timer_1_isr,f
  4574  0447  1903               	skipnz
  4575  0448  0AF1               	incf	??_timer_1_isr+1,f
  4576  0449  3F40               	moviw [0]fsr1
  4577  044A  0770               	addwf	??_timer_1_isr,w
  4578  044B  00F2               	movwf	??_timer_1_isr+2
  4579  044C  3F41               	moviw [1]fsr1
  4580  044D  3D71               	addwfc	??_timer_1_isr+1,w
  4581  044E  00F3               	movwf	??_timer_1_isr+3
  4582  044F  0872               	movf	??_timer_1_isr+2,w
  4583  0450  00D9               	movwf	_os+6	;volatile
  4584  0451  0873               	movf	??_timer_1_isr+3,w
  4585  0452  00DA               	movwf	_os+7	;volatile
  4586                           
  4587                           ;encoder.c: 52: os.encoder_last = os.encoder;
  4588  0453  0856               	movf	_os+3,w	;volatile
  4589  0454  00D8               	movwf	_os+5	;volatile
  4590  0455  0855               	movf	_os+2,w	;volatile
  4591  0456  00D7               	movwf	_os+4	;volatile
  4592                           
  4593                           ;encoder.c: 54: if(os.encoder_difference>64)
  4594  0457  085A               	movf	_os+7,w	;volatile
  4595  0458  3A80               	xorlw	128
  4596  0459  00F0               	movwf	??_timer_1_isr
  4597  045A  3080               	movlw	128
  4598  045B  0270               	subwf	??_timer_1_isr,w
  4599  045C  1D03               	skipz
  4600  045D  2C60               	goto	u86_25
  4601  045E  3041               	movlw	65
  4602  045F  0259               	subwf	_os+6,w	;volatile
  4603  0460                     u86_25:	
  4604  0460  1C03               	skipc
  4605  0461  2C7C               	goto	i1l1086
  4606                           
  4607                           ;encoder.c: 55: {
  4608                           ;encoder.c: 56: os.capture = 32;
  4609  0462  3020               	movlw	32
  4610  0463  00F0               	movwf	??_timer_1_isr
  4611  0464  0870               	movf	??_timer_1_isr,w
  4612  0465  0020               	movlb	0	; select bank0
  4613  0466  00DB               	movwf	_os+8	;volatile
  4614                           
  4615                           ;encoder.c: 57: os.time_sum_last = os.time_sum;
  4616  0467  3016               	movlw	22
  4617  0468  3E53               	addlw	(low (_os| 0))& (0+255)
  4618  0469  0086               	movwf	6
  4619  046A  0187               	clrf	7
  4620  046B  3F40               	moviw [0]fsr1
  4621  046C  00E5               	movwf	_os+18	;volatile
  4622  046D  3F41               	moviw [1]fsr1
  4623  046E  00E6               	movwf	_os+19	;volatile
  4624  046F  3F42               	moviw [2]fsr1
  4625  0470  00E7               	movwf	_os+20	;volatile
  4626  0471  3F43               	moviw [3]fsr1
  4627  0472  00E8               	movwf	_os+21	;volatile
  4628                           
  4629                           ;encoder.c: 58: os.time_sum = 0;
  4630  0473  3000               	movlw	0
  4631  0474  00EC               	movwf	_os+25	;volatile
  4632  0475  3000               	movlw	0
  4633  0476  00EB               	movwf	_os+24	;volatile
  4634  0477  3000               	movlw	0
  4635  0478  00EA               	movwf	_os+23	;volatile
  4636  0479  3000               	movlw	0
  4637  047A  00E9               	movwf	_os+22	;volatile
  4638                           
  4639                           ;encoder.c: 59: }
  4640  047B  2C95               	goto	i1l1092
  4641  047C                     i1l1086:	
  4642                           
  4643                           ;encoder.c: 60: else
  4644                           ;encoder.c: 61: {
  4645                           ;encoder.c: 63: os.time_sum = rollover_cnt;
  4646  047C  0876               	movf	_rollover_cnt,w
  4647  047D  0020               	movlb	0	; select bank0
  4648  047E  00E9               	movwf	_os+22	;volatile
  4649  047F  0877               	movf	_rollover_cnt+1,w
  4650  0480  00EA               	movwf	_os+23	;volatile
  4651  0481  01EB               	clrf	_os+24	;volatile
  4652  0482  01EC               	clrf	_os+25	;volatile
  4653                           
  4654                           ;encoder.c: 64: os.time_sum <<= 16;
  4655  0483  3010               	movlw	16
  4656  0484                     u87_25:	
  4657  0484  35E9               	lslf	_os+22,f	;volatile
  4658  0485  0DEA               	rlf	_os+23,f	;volatile
  4659  0486  0DEB               	rlf	_os+24,f	;volatile
  4660  0487  0DEC               	rlf	_os+25,f	;volatile
  4661  0488  0B89               	decfsz	9,f
  4662  0489  2C84               	goto	u87_25
  4663                           
  4664                           ;encoder.c: 65: os.time_sum <<= 5;
  4665  048A  3005               	movlw	5
  4666  048B                     u88_25:	
  4667  048B  35E9               	lslf	_os+22,f	;volatile
  4668  048C  0DEA               	rlf	_os+23,f	;volatile
  4669  048D  0DEB               	rlf	_os+24,f	;volatile
  4670  048E  0DEC               	rlf	_os+25,f	;volatile
  4671  048F  0B89               	decfsz	9,f
  4672  0490  2C8B               	goto	u88_25
  4673                           
  4674                           ;encoder.c: 67: os.ready = 1;
  4675  0491  3001               	movlw	1
  4676  0492  00F0               	movwf	??_timer_1_isr
  4677  0493  0870               	movf	??_timer_1_isr,w
  4678  0494  00E4               	movwf	_os+17	;volatile
  4679  0495                     i1l1092:	
  4680                           
  4681                           ;encoder.c: 68: }
  4682                           ;encoder.c: 69: }
  4683                           ;encoder.c: 72: PIR4bits.TMR1IF = 0;
  4684  0495  002E               	movlb	14	; select bank14
  4685  0496  1010               	bcf	16,0	;volatile
  4686  0497  0008               	return
  4687  0498                     __end_of_timer_1_isr:	
  4688                           
  4689                           	psect	text17
  4690  05CD                     __ptext17:	
  4691 ;; *************** function _display_update *****************
  4692 ;; Defined at:
  4693 ;;		line 72 in file "display.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;Total ram usage:        2 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		__isr
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _display_update
  4722  05CD                     _display_update:	
  4723                           
  4724                           ;display.c: 74: LATBbits.LATB7 = 1;
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in _display_update: [wreg-fsr1h+status,2+status,0]
  4728  05CD  0020               	movlb	0	; select bank0
  4729  05CE  1797               	bsf	23,7	;volatile
  4730                           
  4731                           ;display.c: 75: LATBbits.LATB6 = 1;
  4732  05CF  1717               	bsf	23,6	;volatile
  4733                           
  4734                           ;display.c: 76: LATBbits.LATB5 = 1;
  4735  05D0  1697               	bsf	23,5	;volatile
  4736                           
  4737                           ;display.c: 77: LATBbits.LATB4 = 1;
  4738  05D1  1617               	bsf	23,4	;volatile
  4739                           
  4740                           ;display.c: 79: LATC = characters[segment&0b11];
  4741  05D2  087A               	movf	_segment,w
  4742  05D3  3903               	andlw	3
  4743  05D4  3EAE               	addlw	(low (_characters| 0))& (0+255)
  4744  05D5  0086               	movwf	6
  4745  05D6  0187               	clrf	7
  4746  05D7  0801               	movf	1,w
  4747  05D8  0098               	movwf	24	;volatile
  4748                           
  4749                           ;display.c: 81: switch(segment&0b11)
  4750  05D9  2DE2               	goto	i1l1620
  4751  05DA                     i1l127:	
  4752                           ;display.c: 82: {
  4753                           ;display.c: 83: case 0:
  4754                           
  4755                           
  4756                           ;display.c: 84: LATBbits.LATB7 = 0;
  4757  05DA  1397               	bcf	23,7	;volatile
  4758                           
  4759                           ;display.c: 85: break;
  4760  05DB  2DF9               	goto	i1l1622
  4761  05DC                     i1l129:	
  4762                           ;display.c: 86: case 1:
  4763                           
  4764                           
  4765                           ;display.c: 87: LATBbits.LATB6 = 0;
  4766  05DC  1317               	bcf	23,6	;volatile
  4767                           
  4768                           ;display.c: 88: break;
  4769  05DD  2DF9               	goto	i1l1622
  4770  05DE                     i1l130:	
  4771                           ;display.c: 89: case 2:
  4772                           
  4773                           
  4774                           ;display.c: 90: LATBbits.LATB5 = 0;
  4775  05DE  1297               	bcf	23,5	;volatile
  4776                           
  4777                           ;display.c: 91: break;
  4778  05DF  2DF9               	goto	i1l1622
  4779  05E0                     i1l131:	
  4780                           ;display.c: 92: case 3:
  4781                           
  4782                           
  4783                           ;display.c: 93: LATBbits.LATB4 = 0;
  4784  05E0  1217               	bcf	23,4	;volatile
  4785                           
  4786                           ;display.c: 95: }
  4787                           
  4788                           ;display.c: 94: break;
  4789  05E1  2DF9               	goto	i1l1622
  4790  05E2                     i1l1620:	
  4791  05E2  087A               	movf	_segment,w
  4792  05E3  3903               	andlw	3
  4793  05E4  00F0               	movwf	??_display_update
  4794  05E5  01F1               	clrf	??_display_update+1
  4795                           
  4796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4797                           ; Switch size 1, requested type "space"
  4798                           ; Number of cases is 1, Range of values is 0 to 0
  4799                           ; switch strategies available:
  4800                           ; Name         Instructions Cycles
  4801                           ; simple_byte            4     3 (average)
  4802                           ; direct_byte            8     6 (fixed)
  4803                           ; jumptable            260     6 (fixed)
  4804                           ;	Chosen strategy is simple_byte
  4805  05E6  0871               	movf	??_display_update+1,w
  4806  05E7  3A00               	xorlw	0	; case 0
  4807  05E8  1903               	skipnz
  4808  05E9  2DEB               	goto	i1l2152
  4809  05EA  2DF9               	goto	i1l1622
  4810  05EB                     i1l2152:	
  4811                           
  4812                           ; Switch size 1, requested type "space"
  4813                           ; Number of cases is 4, Range of values is 0 to 3
  4814                           ; switch strategies available:
  4815                           ; Name         Instructions Cycles
  4816                           ; simple_byte           13     7 (average)
  4817                           ; direct_byte           14     6 (fixed)
  4818                           ; jumptable            260     6 (fixed)
  4819                           ;	Chosen strategy is simple_byte
  4820  05EB  0870               	movf	??_display_update,w
  4821  05EC  3A00               	xorlw	0	; case 0
  4822  05ED  1903               	skipnz
  4823  05EE  2DDA               	goto	i1l127
  4824  05EF  3A01               	xorlw	1	; case 1
  4825  05F0  1903               	skipnz
  4826  05F1  2DDC               	goto	i1l129
  4827  05F2  3A03               	xorlw	3	; case 2
  4828  05F3  1903               	skipnz
  4829  05F4  2DDE               	goto	i1l130
  4830  05F5  3A01               	xorlw	1	; case 3
  4831  05F6  1903               	skipnz
  4832  05F7  2DE0               	goto	i1l131
  4833  05F8  2DF9               	goto	i1l1622
  4834  05F9                     i1l1622:	
  4835                           
  4836                           ;display.c: 97: ++segment;
  4837  05F9  3001               	movlw	1
  4838  05FA  00F0               	movwf	??_display_update
  4839  05FB  0870               	movf	??_display_update,w
  4840  05FC  07FA               	addwf	_segment,f
  4841  05FD  0008               	return
  4842  05FE                     __end_of_display_update:	
  4843                           
  4844                           	psect	text18
  4845  0286                     __ptext18:	
  4846 ;; *************** function _capture_isr *****************
  4847 ;; Defined at:
  4848 ;;		line 75 in file "encoder.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;Total ram usage:        1 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		__isr
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _capture_isr
  4877  0286                     _capture_isr:	
  4878                           
  4879                           ;encoder.c: 77: if(PIR6bits.CCP1IF)
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in _capture_isr: [wreg+status,2+status,0]
  4883  0286  002E               	movlb	14	; select bank14
  4884  0287  1C12               	btfss	18,0	;volatile
  4885  0288  2AD3               	goto	i1l1584
  4886                           
  4887                           ;encoder.c: 78: {
  4888                           ;encoder.c: 80: if(os.capture)
  4889  0289  0020               	movlb	0	; select bank0
  4890  028A  085B               	movf	_os+8,w	;volatile
  4891  028B  1903               	btfsc	3,2
  4892  028C  2AC2               	goto	i1l1570
  4893                           
  4894                           ;encoder.c: 81: {
  4895                           ;encoder.c: 83: time = rollover_cnt;
  4896  028D  0876               	movf	_rollover_cnt,w
  4897  028E  0021               	movlb	1	; select bank1
  4898  028F  00AA               	movwf	_time^(0+128)
  4899  0290  0877               	movf	_rollover_cnt+1,w
  4900  0291  00AB               	movwf	(_time^(0+128)+1)
  4901  0292  01AC               	clrf	(_time^(0+128)+2)
  4902  0293  01AD               	clrf	(_time^(0+128)+3)
  4903                           
  4904                           ;encoder.c: 84: time <<= 8;
  4905  0294  3008               	movlw	8
  4906  0295                     u166_25:	
  4907  0295  35AA               	lslf	_time^(0+128),f
  4908  0296  0DAB               	rlf	(_time+1)^(0+128),f
  4909  0297  0DAC               	rlf	(_time+2)^(0+128),f
  4910  0298  0DAD               	rlf	(_time+3)^(0+128),f
  4911  0299  0B89               	decfsz	9,f
  4912  029A  2A95               	goto	u166_25
  4913                           
  4914                           ;encoder.c: 85: time |= CCPR1H;
  4915  029B  0026               	movlb	6	; select bank6
  4916  029C  080D               	movf	13,w	;volatile
  4917  029D  0021               	movlb	1	; select bank1
  4918  029E  04AA               	iorwf	_time^(0+128),f
  4919                           
  4920                           ;encoder.c: 86: time <<= 8;
  4921  029F  3008               	movlw	8
  4922  02A0                     u167_25:	
  4923  02A0  35AA               	lslf	_time^(0+128),f
  4924  02A1  0DAB               	rlf	(_time+1)^(0+128),f
  4925  02A2  0DAC               	rlf	(_time+2)^(0+128),f
  4926  02A3  0DAD               	rlf	(_time+3)^(0+128),f
  4927  02A4  0B89               	decfsz	9,f
  4928  02A5  2AA0               	goto	u167_25
  4929                           
  4930                           ;encoder.c: 87: time |= CCPR1L;
  4931  02A6  0026               	movlb	6	; select bank6
  4932  02A7  080C               	movf	12,w	;volatile
  4933  02A8  0021               	movlb	1	; select bank1
  4934  02A9  04AA               	iorwf	_time^(0+128),f
  4935                           
  4936                           ;encoder.c: 89: os.time_sum += time;
  4937  02AA  082A               	movf	_time^(0+128),w
  4938  02AB  0020               	movlb	0	; select bank0
  4939  02AC  07E9               	addwf	_os+22,f	;volatile
  4940  02AD  0021               	movlb	1	; select bank1
  4941  02AE  082B               	movf	(_time+1)^(0+128),w
  4942  02AF  0020               	movlb	0	; select bank0
  4943  02B0  3DEA               	addwfc	_os+23,f	;volatile
  4944  02B1  0021               	movlb	1	; select bank1
  4945  02B2  082C               	movf	(_time+2)^(0+128),w
  4946  02B3  0020               	movlb	0	; select bank0
  4947  02B4  3DEB               	addwfc	_os+24,f	;volatile
  4948  02B5  0021               	movlb	1	; select bank1
  4949  02B6  082D               	movf	(_time+3)^(0+128),w
  4950  02B7  0020               	movlb	0	; select bank0
  4951  02B8  3DEC               	addwfc	_os+25,f	;volatile
  4952                           
  4953                           ;encoder.c: 91: --os.capture;
  4954  02B9  3001               	movlw	1
  4955  02BA  02DB               	subwf	_os+8,f	;volatile
  4956                           
  4957                           ;encoder.c: 93: if(os.capture==0)
  4958  02BB  085B               	movf	_os+8,w	;volatile
  4959  02BC  1D03               	btfss	3,2
  4960  02BD  2AC2               	goto	i1l1570
  4961                           
  4962                           ;encoder.c: 94: {
  4963                           ;encoder.c: 95: os.ready = 1;
  4964  02BE  3001               	movlw	1
  4965  02BF  00F0               	movwf	??_capture_isr
  4966  02C0  0870               	movf	??_capture_isr,w
  4967  02C1  00E4               	movwf	_os+17	;volatile
  4968  02C2                     i1l1570:	
  4969                           
  4970                           ;encoder.c: 96: }
  4971                           ;encoder.c: 97: }
  4972                           ;encoder.c: 99: if(PORTBbits.RB2)
  4973  02C2  1D0D               	btfss	13,2	;volatile
  4974  02C3  2AC7               	goto	i1l187
  4975                           
  4976                           ;encoder.c: 100: {
  4977                           ;encoder.c: 101: if(PORTBbits.RB1)
  4978  02C4  188D               	btfsc	13,1	;volatile
  4979  02C5  2ACD               	goto	i1l1580
  4980                           
  4981                           ;encoder.c: 108: }
  4982                           
  4983                           ;encoder.c: 102: {
  4984                           ;encoder.c: 104: ++os.encoder;
  4985  02C6  2AC9               	goto	L7
  4986  02C7                     i1l187:	
  4987                           ;encoder.c: 116: }
  4988                           ;encoder.c: 117: }
  4989                           
  4990                           ;encoder.c: 109: else
  4991                           ;encoder.c: 110: {
  4992                           ;encoder.c: 112: --os.encoder;
  4993                           
  4994                           
  4995                           ;encoder.c: 118: else
  4996                           ;encoder.c: 119: {
  4997                           ;encoder.c: 120: if(PORTBbits.RB1)
  4998  02C7  1C8D               	btfss	13,1	;volatile
  4999  02C8  2ACD               	goto	i1l1580
  5000  02C9                     L7:	
  5001                           
  5002                           ;encoder.c: 121: {
  5003                           ;encoder.c: 123: --os.encoder;
  5004  02C9  30FF               	movlw	255
  5005  02CA  07D5               	addwf	_os+2,f	;volatile
  5006  02CB  30FF               	movlw	255
  5007  02CC  2AD0               	goto	L3
  5008  02CD                     i1l1580:	
  5009                           ;encoder.c: 127: }
  5010                           
  5011                           
  5012                           ;encoder.c: 128: else
  5013                           ;encoder.c: 129: {
  5014                           ;encoder.c: 131: ++os.encoder;
  5015  02CD  3001               	movlw	1
  5016  02CE  07D5               	addwf	_os+2,f	;volatile
  5017  02CF  3000               	movlw	0
  5018  02D0                     L3:	
  5019  02D0  3DD6               	addwfc	_os+3,f	;volatile
  5020                           
  5021                           ;encoder.c: 135: }
  5022                           ;encoder.c: 136: }
  5023                           ;encoder.c: 137: PIR6bits.CCP1IF = 0;
  5024  02D1  002E               	movlb	14	; select bank14
  5025  02D2  1012               	bcf	18,0	;volatile
  5026  02D3                     i1l1584:	
  5027                           
  5028                           ;encoder.c: 138: }
  5029                           ;encoder.c: 140: if(PIR6bits.CCP2IF)
  5030  02D3  1C92               	btfss	18,1	;volatile
  5031  02D4  0008               	return
  5032                           
  5033                           ;encoder.c: 141: {
  5034                           ;encoder.c: 143: if(os.capture)
  5035  02D5  0020               	movlb	0	; select bank0
  5036  02D6  085B               	movf	_os+8,w	;volatile
  5037  02D7  1903               	btfsc	3,2
  5038  02D8  2B0E               	goto	i1l1600
  5039                           
  5040                           ;encoder.c: 144: {
  5041                           ;encoder.c: 146: time = rollover_cnt;
  5042  02D9  0876               	movf	_rollover_cnt,w
  5043  02DA  0021               	movlb	1	; select bank1
  5044  02DB  00AA               	movwf	_time^(0+128)
  5045  02DC  0877               	movf	_rollover_cnt+1,w
  5046  02DD  00AB               	movwf	(_time^(0+128)+1)
  5047  02DE  01AC               	clrf	(_time^(0+128)+2)
  5048  02DF  01AD               	clrf	(_time^(0+128)+3)
  5049                           
  5050                           ;encoder.c: 147: time <<= 8;
  5051  02E0  3008               	movlw	8
  5052  02E1                     u174_25:	
  5053  02E1  35AA               	lslf	_time^(0+128),f
  5054  02E2  0DAB               	rlf	(_time+1)^(0+128),f
  5055  02E3  0DAC               	rlf	(_time+2)^(0+128),f
  5056  02E4  0DAD               	rlf	(_time+3)^(0+128),f
  5057  02E5  0B89               	decfsz	9,f
  5058  02E6  2AE1               	goto	u174_25
  5059                           
  5060                           ;encoder.c: 148: time |= CCPR2H;
  5061  02E7  0026               	movlb	6	; select bank6
  5062  02E8  0811               	movf	17,w	;volatile
  5063  02E9  0021               	movlb	1	; select bank1
  5064  02EA  04AA               	iorwf	_time^(0+128),f
  5065                           
  5066                           ;encoder.c: 149: time <<= 8;
  5067  02EB  3008               	movlw	8
  5068  02EC                     u175_25:	
  5069  02EC  35AA               	lslf	_time^(0+128),f
  5070  02ED  0DAB               	rlf	(_time+1)^(0+128),f
  5071  02EE  0DAC               	rlf	(_time+2)^(0+128),f
  5072  02EF  0DAD               	rlf	(_time+3)^(0+128),f
  5073  02F0  0B89               	decfsz	9,f
  5074  02F1  2AEC               	goto	u175_25
  5075                           
  5076                           ;encoder.c: 150: time |= CCPR2L;
  5077  02F2  0026               	movlb	6	; select bank6
  5078  02F3  0810               	movf	16,w	;volatile
  5079  02F4  0021               	movlb	1	; select bank1
  5080  02F5  04AA               	iorwf	_time^(0+128),f
  5081                           
  5082                           ;encoder.c: 152: os.time_sum += time;
  5083  02F6  082A               	movf	_time^(0+128),w
  5084  02F7  0020               	movlb	0	; select bank0
  5085  02F8  07E9               	addwf	_os+22,f	;volatile
  5086  02F9  0021               	movlb	1	; select bank1
  5087  02FA  082B               	movf	(_time+1)^(0+128),w
  5088  02FB  0020               	movlb	0	; select bank0
  5089  02FC  3DEA               	addwfc	_os+23,f	;volatile
  5090  02FD  0021               	movlb	1	; select bank1
  5091  02FE  082C               	movf	(_time+2)^(0+128),w
  5092  02FF  0020               	movlb	0	; select bank0
  5093  0300  3DEB               	addwfc	_os+24,f	;volatile
  5094  0301  0021               	movlb	1	; select bank1
  5095  0302  082D               	movf	(_time+3)^(0+128),w
  5096  0303  0020               	movlb	0	; select bank0
  5097  0304  3DEC               	addwfc	_os+25,f	;volatile
  5098                           
  5099                           ;encoder.c: 154: --os.capture;
  5100  0305  3001               	movlw	1
  5101  0306  02DB               	subwf	_os+8,f	;volatile
  5102                           
  5103                           ;encoder.c: 156: if(os.capture==0)
  5104  0307  085B               	movf	_os+8,w	;volatile
  5105  0308  1D03               	btfss	3,2
  5106  0309  2B0E               	goto	i1l1600
  5107                           
  5108                           ;encoder.c: 157: {
  5109                           ;encoder.c: 158: os.ready = 1;
  5110  030A  3001               	movlw	1
  5111  030B  00F0               	movwf	??_capture_isr
  5112  030C  0870               	movf	??_capture_isr,w
  5113  030D  00E4               	movwf	_os+17	;volatile
  5114  030E                     i1l1600:	
  5115                           
  5116                           ;encoder.c: 159: }
  5117                           ;encoder.c: 160: }
  5118                           ;encoder.c: 162: if(PORTBbits.RB1)
  5119  030E  1C8D               	btfss	13,1	;volatile
  5120  030F  2B13               	goto	i1l196
  5121                           
  5122                           ;encoder.c: 163: {
  5123                           ;encoder.c: 164: if(PORTBbits.RB2)
  5124  0310  190D               	btfsc	13,2	;volatile
  5125  0311  2B19               	goto	i1l1610
  5126                           
  5127                           ;encoder.c: 171: }
  5128                           
  5129                           ;encoder.c: 165: {
  5130                           ;encoder.c: 167: --os.encoder;
  5131  0312  2B15               	goto	L8
  5132  0313                     i1l196:	
  5133                           ;encoder.c: 179: }
  5134                           ;encoder.c: 180: }
  5135                           
  5136                           ;encoder.c: 172: else
  5137                           ;encoder.c: 173: {
  5138                           ;encoder.c: 175: ++os.encoder;
  5139                           
  5140                           
  5141                           ;encoder.c: 181: else
  5142                           ;encoder.c: 182: {
  5143                           ;encoder.c: 183: if(PORTBbits.RB2)
  5144  0313  1D0D               	btfss	13,2	;volatile
  5145  0314  2B19               	goto	i1l1610
  5146  0315                     L8:	
  5147                           
  5148                           ;encoder.c: 184: {
  5149                           ;encoder.c: 186: ++os.encoder;
  5150  0315  3001               	movlw	1
  5151  0316  07D5               	addwf	_os+2,f	;volatile
  5152  0317  3000               	movlw	0
  5153  0318  2B1C               	goto	L6
  5154  0319                     i1l1610:	
  5155                           ;encoder.c: 190: }
  5156                           
  5157                           
  5158                           ;encoder.c: 191: else
  5159                           ;encoder.c: 192: {
  5160                           ;encoder.c: 194: --os.encoder;
  5161  0319  30FF               	movlw	255
  5162  031A  07D5               	addwf	_os+2,f	;volatile
  5163  031B  30FF               	movlw	255
  5164  031C                     L6:	
  5165  031C  3DD6               	addwfc	_os+3,f	;volatile
  5166                           
  5167                           ;encoder.c: 198: }
  5168                           ;encoder.c: 199: }
  5169                           ;encoder.c: 200: PIR6bits.CCP2IF = 0;
  5170  031D  002E               	movlb	14	; select bank14
  5171  031E  1092               	bcf	18,1	;volatile
  5172  031F  0008               	return
  5173  0320                     __end_of_capture_isr:	
  5174  007E                     btemp	set	126	;btemp
  5175  007E                     int$flags	set	126
  5176  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     51      79
    BANK1            80      2      20
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under __isr in COMMON

    __isr->_timer_1_isr

Critical Paths under _main in BANK0

    _main->__calculate_speed
    _display_set->___lwdiv
    __system_init->_display_init
    __calculate_speed->___ftdiv
    ___lltoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___lltoft

Critical Paths under __isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under __isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under __isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under __isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under __isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under __isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under __isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under __isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under __isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under __isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under __isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under __isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under __isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10242
                                             49 BANK0      2     2      0
                                              0 BANK1      2     2      0
                   __calculate_speed
                     __handle_relays
                       __system_init
                        _display_set
 ---------------------------------------------------------------------------------
 (1) _display_set                                          3     1      2    1739
                                              8 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     752
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     631
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) __system_init                                         0     0      0       0
                       _display_init
                       _encoder_init
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) __handle_relays                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __calculate_speed                                    19    19      0    8500
                                             30 BANK0     19    19      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lltoft
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     266
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2240
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     436
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2626
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2688
                                             14 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2008
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) __isr                                                 2     2      0       0
                                              4 COMMON     2     2      0
                        _capture_isr
                     _display_update
                        _timer_1_isr
 ---------------------------------------------------------------------------------
 (5) _timer_1_isr                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _display_update                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _capture_isr                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __calculate_speed
     ___ftdiv
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___fttol
     ___lltoft
       ___ftpack
     ___lmul
   __handle_relays
   __system_init
     _display_init
     _encoder_init
   _display_set
     ___lwdiv
     ___lwmod

 __isr (ROOT)
   _capture_isr
   _display_update
   _timer_1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      14       7       25.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Oct 01 00:00:00 2018

                     __CFG_CP$OFF 0000                                l80 06E5                                l81 06E2  
                              l82 06DF                                l86 06EB                                l88 06F0  
                    _rollover_cnt 0076                      ?_display_set 0028                                _os 0053  
                     __CFG_LVP$ON 0000                               l452 04DE                               l453 04E6  
                             l445 04CB                               l536 0415                     ?_display_init 0070  
                             _PR2 028D                      __CFG_CPD$OFF 0000                       __CFG_WRT$ON 0000  
          __end_of_display_update 05FE                      __CFG_BORV$HI 0000                               wreg 0009  
                    __CFG_ZCD$OFF 0000                      ___ftdiv@cntr 0038                      ___ftdiv@sign 003D  
                            l2000 05C8                              l2012 0635                              l2014 0641  
                            l2022 0656                              l2102 0540                              l2104 0552  
                            l2018 064D                              l2062 0125                              l2150 054A  
                            l2082 0507                              l2096 052A                              l2098 053A  
                            l1732 04A8                              l1900 0191                              l1742 04D0  
                            l1734 04B2                              l1822 0607                              l1744 04D8  
                            l1736 04B7                              l1728 04A1                              l1840 01F4  
                            l1912 01AD                              l1904 0199                              l1826 0611  
                            l1860 024B                              l1916 01B5                              l1932 03C1  
                            l1846 020A                              l1950 03F1                              l1960 0418  
                            l1952 03FF                              l1882 0140                              l1868 0264  
                            l1964 0426                              l1972 068B                              l1958 040C  
                            l1974 069B                              l1990 05AD                              l1888 0156  
                            l1996 05BF                              l1988 05A1  __calculate_speed@time_difference 0046  
                            u2005 0612                              u2015 0619                              u2205 01B6  
                            u2055 021C                              u2215 01BC                              u2135 0162  
                            _LATC 0018                              u2065 022C                              u2145 0172  
                            u2305 040D                              u2075 024C                              u2085 025B  
                            u2165 019A                              u2245 03C8                              u2405 05C0  
                            u2095 0265                              u2175 01A0                              u2335 0690  
                            u2275 03F2                              u2435 0638                              u2365 05A4  
                            u2535 0059                              u2455 0647                              u2545 00B1  
                            u2385 05AE                              u2465 064E                              u1915 04C6  
                            u2395 05B8                              u1935 04D3                              u2575 051F  
                            u1975 04ED                              u1895 04AD                              i1l74 0024  
                  ??_encoder_init 0020                              __isr 0004                              _main 04FD  
                    ___ftpack@arg 0020                      ___ftpack@exp 0023                              _time 00AA  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E                     __CFG_BOREN$ON 0000                              start 0029  
                   __CFG_CSWEN$ON 0000                     __CFG_MCLRE$ON 0000                      ___ftmul@cntr 0036  
                    ___ftmul@sign 0037                      ___fttol@exp1 002D                      ___fttol@lval 0029  
                           ?__isr 0070                    ??_display_init 0020                             ?_main 0070  
                   __CFG_WDTE$OFF 0000                   __end_of___ftdiv 0286                   __end_of___ftmul 01DD  
                 __end_of___fttol 042F                   __end_of___lwdiv 05CD                             i1l130 05DE  
                           i1l131 05E0                             i1l127 05DA                             i1l129 05DC  
                 __end_of___lwmod 065B                             i1l187 02C7                             i1l196 0313  
                           u86_25 0460                             u87_25 0484                             u88_25 048B  
                 ?_display_update 0070               ___lmul@multiplicand 0024                     __CFG_PWRTE$ON 0000  
                    ___lltoft@exp 002D                    __CFG_FCMEN$OFF 0000                     ?__system_init 0070  
                   ___ftpack@sign 0024                             status 0003                             wtemp0 007E  
                 __initialization 002B                      __end_of__isr 0029                      __end_of_main 0558  
            __size_of_capture_isr 009A                            ??__isr 0074                            ??_main 0051  
                   ___fttol@sign1 0028         __calculate_speed@distance 004A                    ??__system_init 0021  
                          _CCPR1H 030D                            _CCPR2H 0311                            _CCPR1L 030C  
                          _CCPR2L 0310                  __end_of___ftpack 04FD                  __end_of___lltoft 06B0  
                          i1l1092 0495                            i1l1086 047C                            i1l1600 030E  
                          i1l2152 05EB                            i1l1610 0319                            i1l1620 05E2  
                          i1l1622 05F9                            i1l1570 02C2                            i1l1580 02CD  
                          i1l1670 0011                            i1l1584 02D3                            i1l1674 0017  
                          i1l1668 000E                    __CFG_WDTCCS$SC 0000                            u174_25 02E1  
                          u166_25 0295                            u175_25 02EC                            u167_25 02A0  
                          ___lmul 05FE                    __CFG_STVREN$ON 0000                         ??___ftdiv 0034  
                       ??___ftmul 002E                         ??___fttol 0024                         ??___lwdiv 0024  
                       ??___lwmod 0024              __end_of_encoder_init 06D4                      ?_timer_1_isr 0070  
            __size_of_display_set 0088             ___ftmul@f3_as_product 0033           __end_of__initialization 004B  
                 __CFG_FEXTOSC$HS 0000              __end_of_display_init 0686                        ___ftdiv@f1 0031  
                      ___ftdiv@f2 002E                        ___ftdiv@f3 0039                 ?__calculate_speed 0070  
                      ___ftmul@f1 0028                        ___ftmul@f2 002B                        ___fttol@f1 0020  
                  __pcstackCOMMON 0070                ??__calculate_speed 003E                      __pidataBANK1 06F3  
                      ___lltoft@c 0028                        __pbssBANK0 0053                        __pbssBANK1 00AA  
         __size_of__handle_relays 001F                        _characters 00AE                      _T2CLKCONbits 0290  
                      __pmaintext 04FD              __end_of__system_init 0598                           ?___lmul 0020  
                      __pintentry 0004                           _CCP1PPS 0EA1                           _CCP2PPS 0EA2  
                  ___lmul@product 0028                  ??_display_update 0070                         ?___ftpack 0020  
                       ?___lltoft 0028                           _PPSLOCK 0E8F             __size_of_encoder_init 0024  
            __CFG_SCANE$available 0000                   __size_of___lmul 0030                           ___ftdiv 01DD  
                         ___ftmul 0129                           ___fttol 03A8                           ___lwdiv 0598  
                         ___lwmod 062E                        ??___ftpack 0025                        ??___lltoft 002C  
                         __ptext1 0320                           __ptext2 062E                           __ptext3 0598  
                         __ptext4 0558                           __ptext5 06B0                           __ptext6 065B  
                         __ptext7 06D4                           __ptext8 004F                           __ptext9 05FE  
                       _T1CLKbits 0211                         _T1CONbits 020E                         _T2CONbits 028E  
            __size_of_timer_1_isr 0069                           _segment 007A                           clrloop0 0704  
           __size_of_display_init 002B              end_of_initialization 004B                           init_ram 06FD  
                         initloop 06FE                      _encoder_init 06B0                     ??_capture_isr 0070  
           __CFG_WDTCPS$WDTCPS_31 0000                         _PORTAbits 000C                         _PORTBbits 000D  
                    _display_init 065B                         _TRISAbits 0011                         _TRISBbits 0012  
                       _TRISCbits 0013                       _CCP1CAPbits 030F                       _CCP2CAPbits 0313  
                  __handle_relays 06D4             __size_of__system_init 0040                       _CCP1CONbits 030E  
                     ___ftdiv@exp 003C                       _CCP2CONbits 0312                       ___ftmul@exp 0032  
                   ??_display_set 002A                    __end_of___lmul 062E               __end_of_capture_isr 0320  
       __size_of__calculate_speed 00DA               start_initialization 002B                      __system_init 0558  
          __end_of__handle_relays 06F3            __calculate_speed@speed 004E                 __CFG_RSTOSC$EXT4X 0000  
                __CFG_LPBOREN$OFF 0000                          ??___lmul 0028                       __pdataBANK1 00A0  
               __size_of___ftpack 0065                 __size_of___lltoft 002A               __end_of_display_set 03A8  
                     __pbssCOMMON 0076                         ___latbits 0002                     __pcstackBANK0 0020  
                   __pcstackBANK1 00B2                       _char_lookup 00A0                   ?__handle_relays 0070  
                ___lwdiv@dividend 0022                       _capture_isr 0286                          ?___ftdiv 002E  
                        ?___ftmul 0028                          ?___fttol 0020                          ?___lwdiv 0020  
                        ?___lwmod 0020                  __CFG_PPS1WAY$OFF 0000                  ___lwdiv@quotient 0026  
                        _LATAbits 0016                          _LATBbits 0017                         clear_ram0 0703  
                        _PIE4bits 071A                          _PIE6bits 071C                          _PIR4bits 0710  
                        _PIR6bits 0712                       _display_set 0320                     ??_timer_1_isr 0070  
                __calculate_speed 004F           __size_of_display_update 0031                 ___lmul@multiplier 0020  
                __size_of___ftdiv 00A9                  __size_of___ftmul 00B4                  __size_of___fttol 0087  
                __size_of___lwdiv 0035                  __size_of___lwmod 002D                          ___ftpack 0498  
                        ___lltoft 0686                        _ANSELAbits 0F38                        _ANSELBbits 0F43  
                 ___lwdiv@divisor 0020                   ___lwdiv@counter 0025               __end_of_timer_1_isr 0498  
                        __ptext10 0686                          __ptext11 03A8                          __ptext12 0129  
                        __ptext13 01DD                          __ptext14 0498                          __ptext16 042F  
                        __ptext17 05CD                          __ptext18 0286                     __size_of__isr 0025  
                   __size_of_main 005B              __CFG_WDTCWS$WDTCWS_7 0000                          int$flags 007E  
                        main@cntr 00B2                  display_set@value 0028                  ??__handle_relays 0020  
                      _INTCONbits 000B                          intlevel1 0000                  ___lwmod@dividend 0022  
               __CFG_CLKOUTEN$OFF 0000                       _PPSLOCKbits 0E8F                      ?_capture_isr 0070  
                     _timer_1_isr 042F                   ___lwmod@divisor 0020                   ___lwmod@counter 0025  
                  _display_update 05CD                       _timer_value 0078                     ?_encoder_init 0070  
        __end_of__calculate_speed 0129  
