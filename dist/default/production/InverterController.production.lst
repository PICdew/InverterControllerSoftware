

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Oct 02 21:15:14 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.00
    37                           ; Generated 27/05/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F18855 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  001C                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0110                     	;# 
   125  0110                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0119                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  018F                     	;# 
   165  0190                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  0196                     	;# 
   169  0197                     	;# 
   170  0198                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  020C                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  020E                     	;# 
   179  020F                     	;# 
   180  020F                     	;# 
   181  0210                     	;# 
   182  0210                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0216                     	;# 
   192  0216                     	;# 
   193  0217                     	;# 
   194  0217                     	;# 
   195  0218                     	;# 
   196  0218                     	;# 
   197  0219                     	;# 
   198  021A                     	;# 
   199  021B                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021C                     	;# 
   203  021D                     	;# 
   204  021D                     	;# 
   205  021E                     	;# 
   206  021F                     	;# 
   207  028C                     	;# 
   208  028C                     	;# 
   209  028D                     	;# 
   210  028D                     	;# 
   211  028E                     	;# 
   212  028F                     	;# 
   213  0290                     	;# 
   214  0290                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0296                     	;# 
   224  0297                     	;# 
   225  0298                     	;# 
   226  0298                     	;# 
   227  0299                     	;# 
   228  0299                     	;# 
   229  029A                     	;# 
   230  029B                     	;# 
   231  029C                     	;# 
   232  029C                     	;# 
   233  029D                     	;# 
   234  030C                     	;# 
   235  030C                     	;# 
   236  030D                     	;# 
   237  030E                     	;# 
   238  030F                     	;# 
   239  0310                     	;# 
   240  0310                     	;# 
   241  0311                     	;# 
   242  0312                     	;# 
   243  0313                     	;# 
   244  0314                     	;# 
   245  0314                     	;# 
   246  0315                     	;# 
   247  0316                     	;# 
   248  0317                     	;# 
   249  0318                     	;# 
   250  0318                     	;# 
   251  0319                     	;# 
   252  031A                     	;# 
   253  031B                     	;# 
   254  031C                     	;# 
   255  031C                     	;# 
   256  031D                     	;# 
   257  031E                     	;# 
   258  031F                     	;# 
   259  038C                     	;# 
   260  038C                     	;# 
   261  038D                     	;# 
   262  038E                     	;# 
   263  0390                     	;# 
   264  0390                     	;# 
   265  0391                     	;# 
   266  0392                     	;# 
   267  040C                     	;# 
   268  040D                     	;# 
   269  040E                     	;# 
   270  040F                     	;# 
   271  0410                     	;# 
   272  0411                     	;# 
   273  0416                     	;# 
   274  0416                     	;# 
   275  0417                     	;# 
   276  0418                     	;# 
   277  0418                     	;# 
   278  0419                     	;# 
   279  041A                     	;# 
   280  041A                     	;# 
   281  041B                     	;# 
   282  041C                     	;# 
   283  041C                     	;# 
   284  041D                     	;# 
   285  041E                     	;# 
   286  041F                     	;# 
   287  048C                     	;# 
   288  048C                     	;# 
   289  048D                     	;# 
   290  048E                     	;# 
   291  048F                     	;# 
   292  048F                     	;# 
   293  0490                     	;# 
   294  0491                     	;# 
   295  0492                     	;# 
   296  0492                     	;# 
   297  0493                     	;# 
   298  0494                     	;# 
   299  0495                     	;# 
   300  0495                     	;# 
   301  0496                     	;# 
   302  0497                     	;# 
   303  0498                     	;# 
   304  0499                     	;# 
   305  049A                     	;# 
   306  049B                     	;# 
   307  049C                     	;# 
   308  049D                     	;# 
   309  050C                     	;# 
   310  050C                     	;# 
   311  050D                     	;# 
   312  050E                     	;# 
   313  050F                     	;# 
   314  050F                     	;# 
   315  0510                     	;# 
   316  0511                     	;# 
   317  0512                     	;# 
   318  0512                     	;# 
   319  0513                     	;# 
   320  0514                     	;# 
   321  0515                     	;# 
   322  0515                     	;# 
   323  0516                     	;# 
   324  0517                     	;# 
   325  0518                     	;# 
   326  0519                     	;# 
   327  051A                     	;# 
   328  051B                     	;# 
   329  051C                     	;# 
   330  051D                     	;# 
   331  058C                     	;# 
   332  058C                     	;# 
   333  058D                     	;# 
   334  058E                     	;# 
   335  058F                     	;# 
   336  058F                     	;# 
   337  0590                     	;# 
   338  0591                     	;# 
   339  0592                     	;# 
   340  0593                     	;# 
   341  060C                     	;# 
   342  060D                     	;# 
   343  060E                     	;# 
   344  060F                     	;# 
   345  0610                     	;# 
   346  0611                     	;# 
   347  0612                     	;# 
   348  0613                     	;# 
   349  0614                     	;# 
   350  0616                     	;# 
   351  0617                     	;# 
   352  0618                     	;# 
   353  0619                     	;# 
   354  061A                     	;# 
   355  061B                     	;# 
   356  061C                     	;# 
   357  061D                     	;# 
   358  061E                     	;# 
   359  068C                     	;# 
   360  068D                     	;# 
   361  068E                     	;# 
   362  068F                     	;# 
   363  0690                     	;# 
   364  0691                     	;# 
   365  0692                     	;# 
   366  0693                     	;# 
   367  0694                     	;# 
   368  070C                     	;# 
   369  070D                     	;# 
   370  070E                     	;# 
   371  070F                     	;# 
   372  0710                     	;# 
   373  0711                     	;# 
   374  0712                     	;# 
   375  0713                     	;# 
   376  0714                     	;# 
   377  0716                     	;# 
   378  0717                     	;# 
   379  0718                     	;# 
   380  0719                     	;# 
   381  071A                     	;# 
   382  071B                     	;# 
   383  071C                     	;# 
   384  071D                     	;# 
   385  071E                     	;# 
   386  0796                     	;# 
   387  0797                     	;# 
   388  0798                     	;# 
   389  0799                     	;# 
   390  079A                     	;# 
   391  079B                     	;# 
   392  080C                     	;# 
   393  080D                     	;# 
   394  080E                     	;# 
   395  080F                     	;# 
   396  0810                     	;# 
   397  0811                     	;# 
   398  0812                     	;# 
   399  0813                     	;# 
   400  0814                     	;# 
   401  081A                     	;# 
   402  081B                     	;# 
   403  081C                     	;# 
   404  081D                     	;# 
   405  081E                     	;# 
   406  081F                     	;# 
   407  088C                     	;# 
   408  088D                     	;# 
   409  088E                     	;# 
   410  088F                     	;# 
   411  0890                     	;# 
   412  0891                     	;# 
   413  0892                     	;# 
   414  0893                     	;# 
   415  0895                     	;# 
   416  0896                     	;# 
   417  0897                     	;# 
   418  0898                     	;# 
   419  0899                     	;# 
   420  089A                     	;# 
   421  089B                     	;# 
   422  090C                     	;# 
   423  090E                     	;# 
   424  090F                     	;# 
   425  091F                     	;# 
   426  091F                     	;# 
   427  098F                     	;# 
   428  098F                     	;# 
   429  0990                     	;# 
   430  0991                     	;# 
   431  0992                     	;# 
   432  0993                     	;# 
   433  0994                     	;# 
   434  0995                     	;# 
   435  0996                     	;# 
   436  0997                     	;# 
   437  0E0F                     	;# 
   438  0E10                     	;# 
   439  0E11                     	;# 
   440  0E12                     	;# 
   441  0E13                     	;# 
   442  0E14                     	;# 
   443  0E15                     	;# 
   444  0E16                     	;# 
   445  0E17                     	;# 
   446  0E18                     	;# 
   447  0E19                     	;# 
   448  0E1A                     	;# 
   449  0E1B                     	;# 
   450  0E1C                     	;# 
   451  0E1D                     	;# 
   452  0E1E                     	;# 
   453  0E1F                     	;# 
   454  0E20                     	;# 
   455  0E21                     	;# 
   456  0E22                     	;# 
   457  0E23                     	;# 
   458  0E24                     	;# 
   459  0E25                     	;# 
   460  0E26                     	;# 
   461  0E27                     	;# 
   462  0E28                     	;# 
   463  0E29                     	;# 
   464  0E2A                     	;# 
   465  0E2B                     	;# 
   466  0E2C                     	;# 
   467  0E2D                     	;# 
   468  0E2E                     	;# 
   469  0E2F                     	;# 
   470  0E30                     	;# 
   471  0E31                     	;# 
   472  0E32                     	;# 
   473  0E33                     	;# 
   474  0E34                     	;# 
   475  0E35                     	;# 
   476  0E36                     	;# 
   477  0E37                     	;# 
   478  0E8F                     	;# 
   479  0E90                     	;# 
   480  0E91                     	;# 
   481  0E92                     	;# 
   482  0E93                     	;# 
   483  0E94                     	;# 
   484  0E95                     	;# 
   485  0E96                     	;# 
   486  0E97                     	;# 
   487  0E9C                     	;# 
   488  0E9D                     	;# 
   489  0E9E                     	;# 
   490  0EA1                     	;# 
   491  0EA2                     	;# 
   492  0EA3                     	;# 
   493  0EA4                     	;# 
   494  0EA5                     	;# 
   495  0EA9                     	;# 
   496  0EAA                     	;# 
   497  0EAB                     	;# 
   498  0EAC                     	;# 
   499  0EB1                     	;# 
   500  0EB2                     	;# 
   501  0EB3                     	;# 
   502  0EB8                     	;# 
   503  0EB9                     	;# 
   504  0EBA                     	;# 
   505  0EBB                     	;# 
   506  0EBC                     	;# 
   507  0EBD                     	;# 
   508  0EBE                     	;# 
   509  0EC3                     	;# 
   510  0EC5                     	;# 
   511  0EC6                     	;# 
   512  0EC7                     	;# 
   513  0EC8                     	;# 
   514  0EC9                     	;# 
   515  0ECA                     	;# 
   516  0ECB                     	;# 
   517  0ECC                     	;# 
   518  0F10                     	;# 
   519  0F11                     	;# 
   520  0F12                     	;# 
   521  0F13                     	;# 
   522  0F14                     	;# 
   523  0F15                     	;# 
   524  0F16                     	;# 
   525  0F17                     	;# 
   526  0F18                     	;# 
   527  0F19                     	;# 
   528  0F1A                     	;# 
   529  0F1B                     	;# 
   530  0F1C                     	;# 
   531  0F1D                     	;# 
   532  0F1E                     	;# 
   533  0F1F                     	;# 
   534  0F20                     	;# 
   535  0F21                     	;# 
   536  0F22                     	;# 
   537  0F23                     	;# 
   538  0F24                     	;# 
   539  0F25                     	;# 
   540  0F26                     	;# 
   541  0F27                     	;# 
   542  0F38                     	;# 
   543  0F39                     	;# 
   544  0F3A                     	;# 
   545  0F3B                     	;# 
   546  0F3C                     	;# 
   547  0F3D                     	;# 
   548  0F3E                     	;# 
   549  0F3F                     	;# 
   550  0F40                     	;# 
   551  0F41                     	;# 
   552  0F43                     	;# 
   553  0F44                     	;# 
   554  0F45                     	;# 
   555  0F46                     	;# 
   556  0F47                     	;# 
   557  0F48                     	;# 
   558  0F49                     	;# 
   559  0F4A                     	;# 
   560  0F4B                     	;# 
   561  0F4C                     	;# 
   562  0F4E                     	;# 
   563  0F4F                     	;# 
   564  0F50                     	;# 
   565  0F51                     	;# 
   566  0F52                     	;# 
   567  0F53                     	;# 
   568  0F54                     	;# 
   569  0F55                     	;# 
   570  0F56                     	;# 
   571  0F57                     	;# 
   572  0F65                     	;# 
   573  0F68                     	;# 
   574  0F69                     	;# 
   575  0F6A                     	;# 
   576  0F6B                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  000E                     	;# 
   603  0010                     	;# 
   604  0011                     	;# 
   605  0012                     	;# 
   606  0013                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  001C                     	;# 
   611  001C                     	;# 
   612  001D                     	;# 
   613  001D                     	;# 
   614  001E                     	;# 
   615  001F                     	;# 
   616  008C                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  008E                     	;# 
   620  008E                     	;# 
   621  008F                     	;# 
   622  0090                     	;# 
   623  0090                     	;# 
   624  0091                     	;# 
   625  0093                     	;# 
   626  0094                     	;# 
   627  0095                     	;# 
   628  0096                     	;# 
   629  0097                     	;# 
   630  0098                     	;# 
   631  0099                     	;# 
   632  009A                     	;# 
   633  009B                     	;# 
   634  009C                     	;# 
   635  009D                     	;# 
   636  009E                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010E                     	;# 
   641  010F                     	;# 
   642  0110                     	;# 
   643  0110                     	;# 
   644  0111                     	;# 
   645  0112                     	;# 
   646  0112                     	;# 
   647  0113                     	;# 
   648  0114                     	;# 
   649  0114                     	;# 
   650  0115                     	;# 
   651  0116                     	;# 
   652  0116                     	;# 
   653  0117                     	;# 
   654  0119                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  011A                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011B                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011C                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011D                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011E                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011F                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  018C                     	;# 
   680  018D                     	;# 
   681  018E                     	;# 
   682  018F                     	;# 
   683  0190                     	;# 
   684  0191                     	;# 
   685  0192                     	;# 
   686  0196                     	;# 
   687  0197                     	;# 
   688  0198                     	;# 
   689  0199                     	;# 
   690  019A                     	;# 
   691  019B                     	;# 
   692  019C                     	;# 
   693  020C                     	;# 
   694  020C                     	;# 
   695  020D                     	;# 
   696  020E                     	;# 
   697  020F                     	;# 
   698  020F                     	;# 
   699  0210                     	;# 
   700  0210                     	;# 
   701  0211                     	;# 
   702  0211                     	;# 
   703  0212                     	;# 
   704  0212                     	;# 
   705  0213                     	;# 
   706  0214                     	;# 
   707  0215                     	;# 
   708  0215                     	;# 
   709  0216                     	;# 
   710  0216                     	;# 
   711  0217                     	;# 
   712  0217                     	;# 
   713  0218                     	;# 
   714  0218                     	;# 
   715  0219                     	;# 
   716  021A                     	;# 
   717  021B                     	;# 
   718  021B                     	;# 
   719  021C                     	;# 
   720  021C                     	;# 
   721  021D                     	;# 
   722  021D                     	;# 
   723  021E                     	;# 
   724  021F                     	;# 
   725  028C                     	;# 
   726  028C                     	;# 
   727  028D                     	;# 
   728  028D                     	;# 
   729  028E                     	;# 
   730  028F                     	;# 
   731  0290                     	;# 
   732  0290                     	;# 
   733  0291                     	;# 
   734  0292                     	;# 
   735  0292                     	;# 
   736  0293                     	;# 
   737  0293                     	;# 
   738  0294                     	;# 
   739  0295                     	;# 
   740  0296                     	;# 
   741  0296                     	;# 
   742  0297                     	;# 
   743  0298                     	;# 
   744  0298                     	;# 
   745  0299                     	;# 
   746  0299                     	;# 
   747  029A                     	;# 
   748  029B                     	;# 
   749  029C                     	;# 
   750  029C                     	;# 
   751  029D                     	;# 
   752  030C                     	;# 
   753  030C                     	;# 
   754  030D                     	;# 
   755  030E                     	;# 
   756  030F                     	;# 
   757  0310                     	;# 
   758  0310                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0314                     	;# 
   763  0314                     	;# 
   764  0315                     	;# 
   765  0316                     	;# 
   766  0317                     	;# 
   767  0318                     	;# 
   768  0318                     	;# 
   769  0319                     	;# 
   770  031A                     	;# 
   771  031B                     	;# 
   772  031C                     	;# 
   773  031C                     	;# 
   774  031D                     	;# 
   775  031E                     	;# 
   776  031F                     	;# 
   777  038C                     	;# 
   778  038C                     	;# 
   779  038D                     	;# 
   780  038E                     	;# 
   781  0390                     	;# 
   782  0390                     	;# 
   783  0391                     	;# 
   784  0392                     	;# 
   785  040C                     	;# 
   786  040D                     	;# 
   787  040E                     	;# 
   788  040F                     	;# 
   789  0410                     	;# 
   790  0411                     	;# 
   791  0416                     	;# 
   792  0416                     	;# 
   793  0417                     	;# 
   794  0418                     	;# 
   795  0418                     	;# 
   796  0419                     	;# 
   797  041A                     	;# 
   798  041A                     	;# 
   799  041B                     	;# 
   800  041C                     	;# 
   801  041C                     	;# 
   802  041D                     	;# 
   803  041E                     	;# 
   804  041F                     	;# 
   805  048C                     	;# 
   806  048C                     	;# 
   807  048D                     	;# 
   808  048E                     	;# 
   809  048F                     	;# 
   810  048F                     	;# 
   811  0490                     	;# 
   812  0491                     	;# 
   813  0492                     	;# 
   814  0492                     	;# 
   815  0493                     	;# 
   816  0494                     	;# 
   817  0495                     	;# 
   818  0495                     	;# 
   819  0496                     	;# 
   820  0497                     	;# 
   821  0498                     	;# 
   822  0499                     	;# 
   823  049A                     	;# 
   824  049B                     	;# 
   825  049C                     	;# 
   826  049D                     	;# 
   827  050C                     	;# 
   828  050C                     	;# 
   829  050D                     	;# 
   830  050E                     	;# 
   831  050F                     	;# 
   832  050F                     	;# 
   833  0510                     	;# 
   834  0511                     	;# 
   835  0512                     	;# 
   836  0512                     	;# 
   837  0513                     	;# 
   838  0514                     	;# 
   839  0515                     	;# 
   840  0515                     	;# 
   841  0516                     	;# 
   842  0517                     	;# 
   843  0518                     	;# 
   844  0519                     	;# 
   845  051A                     	;# 
   846  051B                     	;# 
   847  051C                     	;# 
   848  051D                     	;# 
   849  058C                     	;# 
   850  058C                     	;# 
   851  058D                     	;# 
   852  058E                     	;# 
   853  058F                     	;# 
   854  058F                     	;# 
   855  0590                     	;# 
   856  0591                     	;# 
   857  0592                     	;# 
   858  0593                     	;# 
   859  060C                     	;# 
   860  060D                     	;# 
   861  060E                     	;# 
   862  060F                     	;# 
   863  0610                     	;# 
   864  0611                     	;# 
   865  0612                     	;# 
   866  0613                     	;# 
   867  0614                     	;# 
   868  0616                     	;# 
   869  0617                     	;# 
   870  0618                     	;# 
   871  0619                     	;# 
   872  061A                     	;# 
   873  061B                     	;# 
   874  061C                     	;# 
   875  061D                     	;# 
   876  061E                     	;# 
   877  068C                     	;# 
   878  068D                     	;# 
   879  068E                     	;# 
   880  068F                     	;# 
   881  0690                     	;# 
   882  0691                     	;# 
   883  0692                     	;# 
   884  0693                     	;# 
   885  0694                     	;# 
   886  070C                     	;# 
   887  070D                     	;# 
   888  070E                     	;# 
   889  070F                     	;# 
   890  0710                     	;# 
   891  0711                     	;# 
   892  0712                     	;# 
   893  0713                     	;# 
   894  0714                     	;# 
   895  0716                     	;# 
   896  0717                     	;# 
   897  0718                     	;# 
   898  0719                     	;# 
   899  071A                     	;# 
   900  071B                     	;# 
   901  071C                     	;# 
   902  071D                     	;# 
   903  071E                     	;# 
   904  0796                     	;# 
   905  0797                     	;# 
   906  0798                     	;# 
   907  0799                     	;# 
   908  079A                     	;# 
   909  079B                     	;# 
   910  080C                     	;# 
   911  080D                     	;# 
   912  080E                     	;# 
   913  080F                     	;# 
   914  0810                     	;# 
   915  0811                     	;# 
   916  0812                     	;# 
   917  0813                     	;# 
   918  0814                     	;# 
   919  081A                     	;# 
   920  081B                     	;# 
   921  081C                     	;# 
   922  081D                     	;# 
   923  081E                     	;# 
   924  081F                     	;# 
   925  088C                     	;# 
   926  088D                     	;# 
   927  088E                     	;# 
   928  088F                     	;# 
   929  0890                     	;# 
   930  0891                     	;# 
   931  0892                     	;# 
   932  0893                     	;# 
   933  0895                     	;# 
   934  0896                     	;# 
   935  0897                     	;# 
   936  0898                     	;# 
   937  0899                     	;# 
   938  089A                     	;# 
   939  089B                     	;# 
   940  090C                     	;# 
   941  090E                     	;# 
   942  090F                     	;# 
   943  091F                     	;# 
   944  091F                     	;# 
   945  098F                     	;# 
   946  098F                     	;# 
   947  0990                     	;# 
   948  0991                     	;# 
   949  0992                     	;# 
   950  0993                     	;# 
   951  0994                     	;# 
   952  0995                     	;# 
   953  0996                     	;# 
   954  0997                     	;# 
   955  0E0F                     	;# 
   956  0E10                     	;# 
   957  0E11                     	;# 
   958  0E12                     	;# 
   959  0E13                     	;# 
   960  0E14                     	;# 
   961  0E15                     	;# 
   962  0E16                     	;# 
   963  0E17                     	;# 
   964  0E18                     	;# 
   965  0E19                     	;# 
   966  0E1A                     	;# 
   967  0E1B                     	;# 
   968  0E1C                     	;# 
   969  0E1D                     	;# 
   970  0E1E                     	;# 
   971  0E1F                     	;# 
   972  0E20                     	;# 
   973  0E21                     	;# 
   974  0E22                     	;# 
   975  0E23                     	;# 
   976  0E24                     	;# 
   977  0E25                     	;# 
   978  0E26                     	;# 
   979  0E27                     	;# 
   980  0E28                     	;# 
   981  0E29                     	;# 
   982  0E2A                     	;# 
   983  0E2B                     	;# 
   984  0E2C                     	;# 
   985  0E2D                     	;# 
   986  0E2E                     	;# 
   987  0E2F                     	;# 
   988  0E30                     	;# 
   989  0E31                     	;# 
   990  0E32                     	;# 
   991  0E33                     	;# 
   992  0E34                     	;# 
   993  0E35                     	;# 
   994  0E36                     	;# 
   995  0E37                     	;# 
   996  0E8F                     	;# 
   997  0E90                     	;# 
   998  0E91                     	;# 
   999  0E92                     	;# 
  1000  0E93                     	;# 
  1001  0E94                     	;# 
  1002  0E95                     	;# 
  1003  0E96                     	;# 
  1004  0E97                     	;# 
  1005  0E9C                     	;# 
  1006  0E9D                     	;# 
  1007  0E9E                     	;# 
  1008  0EA1                     	;# 
  1009  0EA2                     	;# 
  1010  0EA3                     	;# 
  1011  0EA4                     	;# 
  1012  0EA5                     	;# 
  1013  0EA9                     	;# 
  1014  0EAA                     	;# 
  1015  0EAB                     	;# 
  1016  0EAC                     	;# 
  1017  0EB1                     	;# 
  1018  0EB2                     	;# 
  1019  0EB3                     	;# 
  1020  0EB8                     	;# 
  1021  0EB9                     	;# 
  1022  0EBA                     	;# 
  1023  0EBB                     	;# 
  1024  0EBC                     	;# 
  1025  0EBD                     	;# 
  1026  0EBE                     	;# 
  1027  0EC3                     	;# 
  1028  0EC5                     	;# 
  1029  0EC6                     	;# 
  1030  0EC7                     	;# 
  1031  0EC8                     	;# 
  1032  0EC9                     	;# 
  1033  0ECA                     	;# 
  1034  0ECB                     	;# 
  1035  0ECC                     	;# 
  1036  0F10                     	;# 
  1037  0F11                     	;# 
  1038  0F12                     	;# 
  1039  0F13                     	;# 
  1040  0F14                     	;# 
  1041  0F15                     	;# 
  1042  0F16                     	;# 
  1043  0F17                     	;# 
  1044  0F18                     	;# 
  1045  0F19                     	;# 
  1046  0F1A                     	;# 
  1047  0F1B                     	;# 
  1048  0F1C                     	;# 
  1049  0F1D                     	;# 
  1050  0F1E                     	;# 
  1051  0F1F                     	;# 
  1052  0F20                     	;# 
  1053  0F21                     	;# 
  1054  0F22                     	;# 
  1055  0F23                     	;# 
  1056  0F24                     	;# 
  1057  0F25                     	;# 
  1058  0F26                     	;# 
  1059  0F27                     	;# 
  1060  0F38                     	;# 
  1061  0F39                     	;# 
  1062  0F3A                     	;# 
  1063  0F3B                     	;# 
  1064  0F3C                     	;# 
  1065  0F3D                     	;# 
  1066  0F3E                     	;# 
  1067  0F3F                     	;# 
  1068  0F40                     	;# 
  1069  0F41                     	;# 
  1070  0F43                     	;# 
  1071  0F44                     	;# 
  1072  0F45                     	;# 
  1073  0F46                     	;# 
  1074  0F47                     	;# 
  1075  0F48                     	;# 
  1076  0F49                     	;# 
  1077  0F4A                     	;# 
  1078  0F4B                     	;# 
  1079  0F4C                     	;# 
  1080  0F4E                     	;# 
  1081  0F4F                     	;# 
  1082  0F50                     	;# 
  1083  0F51                     	;# 
  1084  0F52                     	;# 
  1085  0F53                     	;# 
  1086  0F54                     	;# 
  1087  0F55                     	;# 
  1088  0F56                     	;# 
  1089  0F57                     	;# 
  1090  0F65                     	;# 
  1091  0F68                     	;# 
  1092  0F69                     	;# 
  1093  0F6A                     	;# 
  1094  0F6B                     	;# 
  1095  0FE4                     	;# 
  1096  0FE5                     	;# 
  1097  0FE6                     	;# 
  1098  0FE7                     	;# 
  1099  0FE8                     	;# 
  1100  0FE9                     	;# 
  1101  0FEA                     	;# 
  1102  0FEB                     	;# 
  1103  0FED                     	;# 
  1104  0FEE                     	;# 
  1105  0FEF                     	;# 
  1106  0000                     	;# 
  1107  0001                     	;# 
  1108  0002                     	;# 
  1109  0003                     	;# 
  1110  0004                     	;# 
  1111  0005                     	;# 
  1112  0006                     	;# 
  1113  0007                     	;# 
  1114  0008                     	;# 
  1115  0009                     	;# 
  1116  000A                     	;# 
  1117  000B                     	;# 
  1118  000C                     	;# 
  1119  000D                     	;# 
  1120  000E                     	;# 
  1121  0010                     	;# 
  1122  0011                     	;# 
  1123  0012                     	;# 
  1124  0013                     	;# 
  1125  0016                     	;# 
  1126  0017                     	;# 
  1127  0018                     	;# 
  1128  001C                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001D                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  008C                     	;# 
  1135  008C                     	;# 
  1136  008D                     	;# 
  1137  008E                     	;# 
  1138  008E                     	;# 
  1139  008F                     	;# 
  1140  0090                     	;# 
  1141  0090                     	;# 
  1142  0091                     	;# 
  1143  0093                     	;# 
  1144  0094                     	;# 
  1145  0095                     	;# 
  1146  0096                     	;# 
  1147  0097                     	;# 
  1148  0098                     	;# 
  1149  0099                     	;# 
  1150  009A                     	;# 
  1151  009B                     	;# 
  1152  009C                     	;# 
  1153  009D                     	;# 
  1154  009E                     	;# 
  1155  010C                     	;# 
  1156  010D                     	;# 
  1157  010E                     	;# 
  1158  010E                     	;# 
  1159  010F                     	;# 
  1160  0110                     	;# 
  1161  0110                     	;# 
  1162  0111                     	;# 
  1163  0112                     	;# 
  1164  0112                     	;# 
  1165  0113                     	;# 
  1166  0114                     	;# 
  1167  0114                     	;# 
  1168  0115                     	;# 
  1169  0116                     	;# 
  1170  0116                     	;# 
  1171  0117                     	;# 
  1172  0119                     	;# 
  1173  0119                     	;# 
  1174  0119                     	;# 
  1175  011A                     	;# 
  1176  011A                     	;# 
  1177  011A                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011B                     	;# 
  1183  011C                     	;# 
  1184  011C                     	;# 
  1185  011C                     	;# 
  1186  011D                     	;# 
  1187  011D                     	;# 
  1188  011D                     	;# 
  1189  011E                     	;# 
  1190  011E                     	;# 
  1191  011E                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  011F                     	;# 
  1197  018C                     	;# 
  1198  018D                     	;# 
  1199  018E                     	;# 
  1200  018F                     	;# 
  1201  0190                     	;# 
  1202  0191                     	;# 
  1203  0192                     	;# 
  1204  0196                     	;# 
  1205  0197                     	;# 
  1206  0198                     	;# 
  1207  0199                     	;# 
  1208  019A                     	;# 
  1209  019B                     	;# 
  1210  019C                     	;# 
  1211  020C                     	;# 
  1212  020C                     	;# 
  1213  020D                     	;# 
  1214  020E                     	;# 
  1215  020F                     	;# 
  1216  020F                     	;# 
  1217  0210                     	;# 
  1218  0210                     	;# 
  1219  0211                     	;# 
  1220  0211                     	;# 
  1221  0212                     	;# 
  1222  0212                     	;# 
  1223  0213                     	;# 
  1224  0214                     	;# 
  1225  0215                     	;# 
  1226  0215                     	;# 
  1227  0216                     	;# 
  1228  0216                     	;# 
  1229  0217                     	;# 
  1230  0217                     	;# 
  1231  0218                     	;# 
  1232  0218                     	;# 
  1233  0219                     	;# 
  1234  021A                     	;# 
  1235  021B                     	;# 
  1236  021B                     	;# 
  1237  021C                     	;# 
  1238  021C                     	;# 
  1239  021D                     	;# 
  1240  021D                     	;# 
  1241  021E                     	;# 
  1242  021F                     	;# 
  1243  028C                     	;# 
  1244  028C                     	;# 
  1245  028D                     	;# 
  1246  028D                     	;# 
  1247  028E                     	;# 
  1248  028F                     	;# 
  1249  0290                     	;# 
  1250  0290                     	;# 
  1251  0291                     	;# 
  1252  0292                     	;# 
  1253  0292                     	;# 
  1254  0293                     	;# 
  1255  0293                     	;# 
  1256  0294                     	;# 
  1257  0295                     	;# 
  1258  0296                     	;# 
  1259  0296                     	;# 
  1260  0297                     	;# 
  1261  0298                     	;# 
  1262  0298                     	;# 
  1263  0299                     	;# 
  1264  0299                     	;# 
  1265  029A                     	;# 
  1266  029B                     	;# 
  1267  029C                     	;# 
  1268  029C                     	;# 
  1269  029D                     	;# 
  1270  030C                     	;# 
  1271  030C                     	;# 
  1272  030D                     	;# 
  1273  030E                     	;# 
  1274  030F                     	;# 
  1275  0310                     	;# 
  1276  0310                     	;# 
  1277  0311                     	;# 
  1278  0312                     	;# 
  1279  0313                     	;# 
  1280  0314                     	;# 
  1281  0314                     	;# 
  1282  0315                     	;# 
  1283  0316                     	;# 
  1284  0317                     	;# 
  1285  0318                     	;# 
  1286  0318                     	;# 
  1287  0319                     	;# 
  1288  031A                     	;# 
  1289  031B                     	;# 
  1290  031C                     	;# 
  1291  031C                     	;# 
  1292  031D                     	;# 
  1293  031E                     	;# 
  1294  031F                     	;# 
  1295  038C                     	;# 
  1296  038C                     	;# 
  1297  038D                     	;# 
  1298  038E                     	;# 
  1299  0390                     	;# 
  1300  0390                     	;# 
  1301  0391                     	;# 
  1302  0392                     	;# 
  1303  040C                     	;# 
  1304  040D                     	;# 
  1305  040E                     	;# 
  1306  040F                     	;# 
  1307  0410                     	;# 
  1308  0411                     	;# 
  1309  0416                     	;# 
  1310  0416                     	;# 
  1311  0417                     	;# 
  1312  0418                     	;# 
  1313  0418                     	;# 
  1314  0419                     	;# 
  1315  041A                     	;# 
  1316  041A                     	;# 
  1317  041B                     	;# 
  1318  041C                     	;# 
  1319  041C                     	;# 
  1320  041D                     	;# 
  1321  041E                     	;# 
  1322  041F                     	;# 
  1323  048C                     	;# 
  1324  048C                     	;# 
  1325  048D                     	;# 
  1326  048E                     	;# 
  1327  048F                     	;# 
  1328  048F                     	;# 
  1329  0490                     	;# 
  1330  0491                     	;# 
  1331  0492                     	;# 
  1332  0492                     	;# 
  1333  0493                     	;# 
  1334  0494                     	;# 
  1335  0495                     	;# 
  1336  0495                     	;# 
  1337  0496                     	;# 
  1338  0497                     	;# 
  1339  0498                     	;# 
  1340  0499                     	;# 
  1341  049A                     	;# 
  1342  049B                     	;# 
  1343  049C                     	;# 
  1344  049D                     	;# 
  1345  050C                     	;# 
  1346  050C                     	;# 
  1347  050D                     	;# 
  1348  050E                     	;# 
  1349  050F                     	;# 
  1350  050F                     	;# 
  1351  0510                     	;# 
  1352  0511                     	;# 
  1353  0512                     	;# 
  1354  0512                     	;# 
  1355  0513                     	;# 
  1356  0514                     	;# 
  1357  0515                     	;# 
  1358  0515                     	;# 
  1359  0516                     	;# 
  1360  0517                     	;# 
  1361  0518                     	;# 
  1362  0519                     	;# 
  1363  051A                     	;# 
  1364  051B                     	;# 
  1365  051C                     	;# 
  1366  051D                     	;# 
  1367  058C                     	;# 
  1368  058C                     	;# 
  1369  058D                     	;# 
  1370  058E                     	;# 
  1371  058F                     	;# 
  1372  058F                     	;# 
  1373  0590                     	;# 
  1374  0591                     	;# 
  1375  0592                     	;# 
  1376  0593                     	;# 
  1377  060C                     	;# 
  1378  060D                     	;# 
  1379  060E                     	;# 
  1380  060F                     	;# 
  1381  0610                     	;# 
  1382  0611                     	;# 
  1383  0612                     	;# 
  1384  0613                     	;# 
  1385  0614                     	;# 
  1386  0616                     	;# 
  1387  0617                     	;# 
  1388  0618                     	;# 
  1389  0619                     	;# 
  1390  061A                     	;# 
  1391  061B                     	;# 
  1392  061C                     	;# 
  1393  061D                     	;# 
  1394  061E                     	;# 
  1395  068C                     	;# 
  1396  068D                     	;# 
  1397  068E                     	;# 
  1398  068F                     	;# 
  1399  0690                     	;# 
  1400  0691                     	;# 
  1401  0692                     	;# 
  1402  0693                     	;# 
  1403  0694                     	;# 
  1404  070C                     	;# 
  1405  070D                     	;# 
  1406  070E                     	;# 
  1407  070F                     	;# 
  1408  0710                     	;# 
  1409  0711                     	;# 
  1410  0712                     	;# 
  1411  0713                     	;# 
  1412  0714                     	;# 
  1413  0716                     	;# 
  1414  0717                     	;# 
  1415  0718                     	;# 
  1416  0719                     	;# 
  1417  071A                     	;# 
  1418  071B                     	;# 
  1419  071C                     	;# 
  1420  071D                     	;# 
  1421  071E                     	;# 
  1422  0796                     	;# 
  1423  0797                     	;# 
  1424  0798                     	;# 
  1425  0799                     	;# 
  1426  079A                     	;# 
  1427  079B                     	;# 
  1428  080C                     	;# 
  1429  080D                     	;# 
  1430  080E                     	;# 
  1431  080F                     	;# 
  1432  0810                     	;# 
  1433  0811                     	;# 
  1434  0812                     	;# 
  1435  0813                     	;# 
  1436  0814                     	;# 
  1437  081A                     	;# 
  1438  081B                     	;# 
  1439  081C                     	;# 
  1440  081D                     	;# 
  1441  081E                     	;# 
  1442  081F                     	;# 
  1443  088C                     	;# 
  1444  088D                     	;# 
  1445  088E                     	;# 
  1446  088F                     	;# 
  1447  0890                     	;# 
  1448  0891                     	;# 
  1449  0892                     	;# 
  1450  0893                     	;# 
  1451  0895                     	;# 
  1452  0896                     	;# 
  1453  0897                     	;# 
  1454  0898                     	;# 
  1455  0899                     	;# 
  1456  089A                     	;# 
  1457  089B                     	;# 
  1458  090C                     	;# 
  1459  090E                     	;# 
  1460  090F                     	;# 
  1461  091F                     	;# 
  1462  091F                     	;# 
  1463  098F                     	;# 
  1464  098F                     	;# 
  1465  0990                     	;# 
  1466  0991                     	;# 
  1467  0992                     	;# 
  1468  0993                     	;# 
  1469  0994                     	;# 
  1470  0995                     	;# 
  1471  0996                     	;# 
  1472  0997                     	;# 
  1473  0E0F                     	;# 
  1474  0E10                     	;# 
  1475  0E11                     	;# 
  1476  0E12                     	;# 
  1477  0E13                     	;# 
  1478  0E14                     	;# 
  1479  0E15                     	;# 
  1480  0E16                     	;# 
  1481  0E17                     	;# 
  1482  0E18                     	;# 
  1483  0E19                     	;# 
  1484  0E1A                     	;# 
  1485  0E1B                     	;# 
  1486  0E1C                     	;# 
  1487  0E1D                     	;# 
  1488  0E1E                     	;# 
  1489  0E1F                     	;# 
  1490  0E20                     	;# 
  1491  0E21                     	;# 
  1492  0E22                     	;# 
  1493  0E23                     	;# 
  1494  0E24                     	;# 
  1495  0E25                     	;# 
  1496  0E26                     	;# 
  1497  0E27                     	;# 
  1498  0E28                     	;# 
  1499  0E29                     	;# 
  1500  0E2A                     	;# 
  1501  0E2B                     	;# 
  1502  0E2C                     	;# 
  1503  0E2D                     	;# 
  1504  0E2E                     	;# 
  1505  0E2F                     	;# 
  1506  0E30                     	;# 
  1507  0E31                     	;# 
  1508  0E32                     	;# 
  1509  0E33                     	;# 
  1510  0E34                     	;# 
  1511  0E35                     	;# 
  1512  0E36                     	;# 
  1513  0E37                     	;# 
  1514  0E8F                     	;# 
  1515  0E90                     	;# 
  1516  0E91                     	;# 
  1517  0E92                     	;# 
  1518  0E93                     	;# 
  1519  0E94                     	;# 
  1520  0E95                     	;# 
  1521  0E96                     	;# 
  1522  0E97                     	;# 
  1523  0E9C                     	;# 
  1524  0E9D                     	;# 
  1525  0E9E                     	;# 
  1526  0EA1                     	;# 
  1527  0EA2                     	;# 
  1528  0EA3                     	;# 
  1529  0EA4                     	;# 
  1530  0EA5                     	;# 
  1531  0EA9                     	;# 
  1532  0EAA                     	;# 
  1533  0EAB                     	;# 
  1534  0EAC                     	;# 
  1535  0EB1                     	;# 
  1536  0EB2                     	;# 
  1537  0EB3                     	;# 
  1538  0EB8                     	;# 
  1539  0EB9                     	;# 
  1540  0EBA                     	;# 
  1541  0EBB                     	;# 
  1542  0EBC                     	;# 
  1543  0EBD                     	;# 
  1544  0EBE                     	;# 
  1545  0EC3                     	;# 
  1546  0EC5                     	;# 
  1547  0EC6                     	;# 
  1548  0EC7                     	;# 
  1549  0EC8                     	;# 
  1550  0EC9                     	;# 
  1551  0ECA                     	;# 
  1552  0ECB                     	;# 
  1553  0ECC                     	;# 
  1554  0F10                     	;# 
  1555  0F11                     	;# 
  1556  0F12                     	;# 
  1557  0F13                     	;# 
  1558  0F14                     	;# 
  1559  0F15                     	;# 
  1560  0F16                     	;# 
  1561  0F17                     	;# 
  1562  0F18                     	;# 
  1563  0F19                     	;# 
  1564  0F1A                     	;# 
  1565  0F1B                     	;# 
  1566  0F1C                     	;# 
  1567  0F1D                     	;# 
  1568  0F1E                     	;# 
  1569  0F1F                     	;# 
  1570  0F20                     	;# 
  1571  0F21                     	;# 
  1572  0F22                     	;# 
  1573  0F23                     	;# 
  1574  0F24                     	;# 
  1575  0F25                     	;# 
  1576  0F26                     	;# 
  1577  0F27                     	;# 
  1578  0F38                     	;# 
  1579  0F39                     	;# 
  1580  0F3A                     	;# 
  1581  0F3B                     	;# 
  1582  0F3C                     	;# 
  1583  0F3D                     	;# 
  1584  0F3E                     	;# 
  1585  0F3F                     	;# 
  1586  0F40                     	;# 
  1587  0F41                     	;# 
  1588  0F43                     	;# 
  1589  0F44                     	;# 
  1590  0F45                     	;# 
  1591  0F46                     	;# 
  1592  0F47                     	;# 
  1593  0F48                     	;# 
  1594  0F49                     	;# 
  1595  0F4A                     	;# 
  1596  0F4B                     	;# 
  1597  0F4C                     	;# 
  1598  0F4E                     	;# 
  1599  0F4F                     	;# 
  1600  0F50                     	;# 
  1601  0F51                     	;# 
  1602  0F52                     	;# 
  1603  0F53                     	;# 
  1604  0F54                     	;# 
  1605  0F55                     	;# 
  1606  0F56                     	;# 
  1607  0F57                     	;# 
  1608  0F65                     	;# 
  1609  0F68                     	;# 
  1610  0F69                     	;# 
  1611  0F6A                     	;# 
  1612  0F6B                     	;# 
  1613  0FE4                     	;# 
  1614  0FE5                     	;# 
  1615  0FE6                     	;# 
  1616  0FE7                     	;# 
  1617  0FE8                     	;# 
  1618  0FE9                     	;# 
  1619  0FEA                     	;# 
  1620  0FEB                     	;# 
  1621  0FED                     	;# 
  1622  0FEE                     	;# 
  1623  0FEF                     	;# 
  1624  0000                     	;# 
  1625  0001                     	;# 
  1626  0002                     	;# 
  1627  0003                     	;# 
  1628  0004                     	;# 
  1629  0005                     	;# 
  1630  0006                     	;# 
  1631  0007                     	;# 
  1632  0008                     	;# 
  1633  0009                     	;# 
  1634  000A                     	;# 
  1635  000B                     	;# 
  1636  000C                     	;# 
  1637  000D                     	;# 
  1638  000E                     	;# 
  1639  0010                     	;# 
  1640  0011                     	;# 
  1641  0012                     	;# 
  1642  0013                     	;# 
  1643  0016                     	;# 
  1644  0017                     	;# 
  1645  0018                     	;# 
  1646  001C                     	;# 
  1647  001C                     	;# 
  1648  001D                     	;# 
  1649  001D                     	;# 
  1650  001E                     	;# 
  1651  001F                     	;# 
  1652  008C                     	;# 
  1653  008C                     	;# 
  1654  008D                     	;# 
  1655  008E                     	;# 
  1656  008E                     	;# 
  1657  008F                     	;# 
  1658  0090                     	;# 
  1659  0090                     	;# 
  1660  0091                     	;# 
  1661  0093                     	;# 
  1662  0094                     	;# 
  1663  0095                     	;# 
  1664  0096                     	;# 
  1665  0097                     	;# 
  1666  0098                     	;# 
  1667  0099                     	;# 
  1668  009A                     	;# 
  1669  009B                     	;# 
  1670  009C                     	;# 
  1671  009D                     	;# 
  1672  009E                     	;# 
  1673  010C                     	;# 
  1674  010D                     	;# 
  1675  010E                     	;# 
  1676  010E                     	;# 
  1677  010F                     	;# 
  1678  0110                     	;# 
  1679  0110                     	;# 
  1680  0111                     	;# 
  1681  0112                     	;# 
  1682  0112                     	;# 
  1683  0113                     	;# 
  1684  0114                     	;# 
  1685  0114                     	;# 
  1686  0115                     	;# 
  1687  0116                     	;# 
  1688  0116                     	;# 
  1689  0117                     	;# 
  1690  0119                     	;# 
  1691  0119                     	;# 
  1692  0119                     	;# 
  1693  011A                     	;# 
  1694  011A                     	;# 
  1695  011A                     	;# 
  1696  011B                     	;# 
  1697  011B                     	;# 
  1698  011B                     	;# 
  1699  011B                     	;# 
  1700  011B                     	;# 
  1701  011C                     	;# 
  1702  011C                     	;# 
  1703  011C                     	;# 
  1704  011D                     	;# 
  1705  011D                     	;# 
  1706  011D                     	;# 
  1707  011E                     	;# 
  1708  011E                     	;# 
  1709  011E                     	;# 
  1710  011F                     	;# 
  1711  011F                     	;# 
  1712  011F                     	;# 
  1713  011F                     	;# 
  1714  011F                     	;# 
  1715  018C                     	;# 
  1716  018D                     	;# 
  1717  018E                     	;# 
  1718  018F                     	;# 
  1719  0190                     	;# 
  1720  0191                     	;# 
  1721  0192                     	;# 
  1722  0196                     	;# 
  1723  0197                     	;# 
  1724  0198                     	;# 
  1725  0199                     	;# 
  1726  019A                     	;# 
  1727  019B                     	;# 
  1728  019C                     	;# 
  1729  020C                     	;# 
  1730  020C                     	;# 
  1731  020D                     	;# 
  1732  020E                     	;# 
  1733  020F                     	;# 
  1734  020F                     	;# 
  1735  0210                     	;# 
  1736  0210                     	;# 
  1737  0211                     	;# 
  1738  0211                     	;# 
  1739  0212                     	;# 
  1740  0212                     	;# 
  1741  0213                     	;# 
  1742  0214                     	;# 
  1743  0215                     	;# 
  1744  0215                     	;# 
  1745  0216                     	;# 
  1746  0216                     	;# 
  1747  0217                     	;# 
  1748  0217                     	;# 
  1749  0218                     	;# 
  1750  0218                     	;# 
  1751  0219                     	;# 
  1752  021A                     	;# 
  1753  021B                     	;# 
  1754  021B                     	;# 
  1755  021C                     	;# 
  1756  021C                     	;# 
  1757  021D                     	;# 
  1758  021D                     	;# 
  1759  021E                     	;# 
  1760  021F                     	;# 
  1761  028C                     	;# 
  1762  028C                     	;# 
  1763  028D                     	;# 
  1764  028D                     	;# 
  1765  028E                     	;# 
  1766  028F                     	;# 
  1767  0290                     	;# 
  1768  0290                     	;# 
  1769  0291                     	;# 
  1770  0292                     	;# 
  1771  0292                     	;# 
  1772  0293                     	;# 
  1773  0293                     	;# 
  1774  0294                     	;# 
  1775  0295                     	;# 
  1776  0296                     	;# 
  1777  0296                     	;# 
  1778  0297                     	;# 
  1779  0298                     	;# 
  1780  0298                     	;# 
  1781  0299                     	;# 
  1782  0299                     	;# 
  1783  029A                     	;# 
  1784  029B                     	;# 
  1785  029C                     	;# 
  1786  029C                     	;# 
  1787  029D                     	;# 
  1788  030C                     	;# 
  1789  030C                     	;# 
  1790  030D                     	;# 
  1791  030E                     	;# 
  1792  030F                     	;# 
  1793  0310                     	;# 
  1794  0310                     	;# 
  1795  0311                     	;# 
  1796  0312                     	;# 
  1797  0313                     	;# 
  1798  0314                     	;# 
  1799  0314                     	;# 
  1800  0315                     	;# 
  1801  0316                     	;# 
  1802  0317                     	;# 
  1803  0318                     	;# 
  1804  0318                     	;# 
  1805  0319                     	;# 
  1806  031A                     	;# 
  1807  031B                     	;# 
  1808  031C                     	;# 
  1809  031C                     	;# 
  1810  031D                     	;# 
  1811  031E                     	;# 
  1812  031F                     	;# 
  1813  038C                     	;# 
  1814  038C                     	;# 
  1815  038D                     	;# 
  1816  038E                     	;# 
  1817  0390                     	;# 
  1818  0390                     	;# 
  1819  0391                     	;# 
  1820  0392                     	;# 
  1821  040C                     	;# 
  1822  040D                     	;# 
  1823  040E                     	;# 
  1824  040F                     	;# 
  1825  0410                     	;# 
  1826  0411                     	;# 
  1827  0416                     	;# 
  1828  0416                     	;# 
  1829  0417                     	;# 
  1830  0418                     	;# 
  1831  0418                     	;# 
  1832  0419                     	;# 
  1833  041A                     	;# 
  1834  041A                     	;# 
  1835  041B                     	;# 
  1836  041C                     	;# 
  1837  041C                     	;# 
  1838  041D                     	;# 
  1839  041E                     	;# 
  1840  041F                     	;# 
  1841  048C                     	;# 
  1842  048C                     	;# 
  1843  048D                     	;# 
  1844  048E                     	;# 
  1845  048F                     	;# 
  1846  048F                     	;# 
  1847  0490                     	;# 
  1848  0491                     	;# 
  1849  0492                     	;# 
  1850  0492                     	;# 
  1851  0493                     	;# 
  1852  0494                     	;# 
  1853  0495                     	;# 
  1854  0495                     	;# 
  1855  0496                     	;# 
  1856  0497                     	;# 
  1857  0498                     	;# 
  1858  0499                     	;# 
  1859  049A                     	;# 
  1860  049B                     	;# 
  1861  049C                     	;# 
  1862  049D                     	;# 
  1863  050C                     	;# 
  1864  050C                     	;# 
  1865  050D                     	;# 
  1866  050E                     	;# 
  1867  050F                     	;# 
  1868  050F                     	;# 
  1869  0510                     	;# 
  1870  0511                     	;# 
  1871  0512                     	;# 
  1872  0512                     	;# 
  1873  0513                     	;# 
  1874  0514                     	;# 
  1875  0515                     	;# 
  1876  0515                     	;# 
  1877  0516                     	;# 
  1878  0517                     	;# 
  1879  0518                     	;# 
  1880  0519                     	;# 
  1881  051A                     	;# 
  1882  051B                     	;# 
  1883  051C                     	;# 
  1884  051D                     	;# 
  1885  058C                     	;# 
  1886  058C                     	;# 
  1887  058D                     	;# 
  1888  058E                     	;# 
  1889  058F                     	;# 
  1890  058F                     	;# 
  1891  0590                     	;# 
  1892  0591                     	;# 
  1893  0592                     	;# 
  1894  0593                     	;# 
  1895  060C                     	;# 
  1896  060D                     	;# 
  1897  060E                     	;# 
  1898  060F                     	;# 
  1899  0610                     	;# 
  1900  0611                     	;# 
  1901  0612                     	;# 
  1902  0613                     	;# 
  1903  0614                     	;# 
  1904  0616                     	;# 
  1905  0617                     	;# 
  1906  0618                     	;# 
  1907  0619                     	;# 
  1908  061A                     	;# 
  1909  061B                     	;# 
  1910  061C                     	;# 
  1911  061D                     	;# 
  1912  061E                     	;# 
  1913  068C                     	;# 
  1914  068D                     	;# 
  1915  068E                     	;# 
  1916  068F                     	;# 
  1917  0690                     	;# 
  1918  0691                     	;# 
  1919  0692                     	;# 
  1920  0693                     	;# 
  1921  0694                     	;# 
  1922  070C                     	;# 
  1923  070D                     	;# 
  1924  070E                     	;# 
  1925  070F                     	;# 
  1926  0710                     	;# 
  1927  0711                     	;# 
  1928  0712                     	;# 
  1929  0713                     	;# 
  1930  0714                     	;# 
  1931  0716                     	;# 
  1932  0717                     	;# 
  1933  0718                     	;# 
  1934  0719                     	;# 
  1935  071A                     	;# 
  1936  071B                     	;# 
  1937  071C                     	;# 
  1938  071D                     	;# 
  1939  071E                     	;# 
  1940  0796                     	;# 
  1941  0797                     	;# 
  1942  0798                     	;# 
  1943  0799                     	;# 
  1944  079A                     	;# 
  1945  079B                     	;# 
  1946  080C                     	;# 
  1947  080D                     	;# 
  1948  080E                     	;# 
  1949  080F                     	;# 
  1950  0810                     	;# 
  1951  0811                     	;# 
  1952  0812                     	;# 
  1953  0813                     	;# 
  1954  0814                     	;# 
  1955  081A                     	;# 
  1956  081B                     	;# 
  1957  081C                     	;# 
  1958  081D                     	;# 
  1959  081E                     	;# 
  1960  081F                     	;# 
  1961  088C                     	;# 
  1962  088D                     	;# 
  1963  088E                     	;# 
  1964  088F                     	;# 
  1965  0890                     	;# 
  1966  0891                     	;# 
  1967  0892                     	;# 
  1968  0893                     	;# 
  1969  0895                     	;# 
  1970  0896                     	;# 
  1971  0897                     	;# 
  1972  0898                     	;# 
  1973  0899                     	;# 
  1974  089A                     	;# 
  1975  089B                     	;# 
  1976  090C                     	;# 
  1977  090E                     	;# 
  1978  090F                     	;# 
  1979  091F                     	;# 
  1980  091F                     	;# 
  1981  098F                     	;# 
  1982  098F                     	;# 
  1983  0990                     	;# 
  1984  0991                     	;# 
  1985  0992                     	;# 
  1986  0993                     	;# 
  1987  0994                     	;# 
  1988  0995                     	;# 
  1989  0996                     	;# 
  1990  0997                     	;# 
  1991  0E0F                     	;# 
  1992  0E10                     	;# 
  1993  0E11                     	;# 
  1994  0E12                     	;# 
  1995  0E13                     	;# 
  1996  0E14                     	;# 
  1997  0E15                     	;# 
  1998  0E16                     	;# 
  1999  0E17                     	;# 
  2000  0E18                     	;# 
  2001  0E19                     	;# 
  2002  0E1A                     	;# 
  2003  0E1B                     	;# 
  2004  0E1C                     	;# 
  2005  0E1D                     	;# 
  2006  0E1E                     	;# 
  2007  0E1F                     	;# 
  2008  0E20                     	;# 
  2009  0E21                     	;# 
  2010  0E22                     	;# 
  2011  0E23                     	;# 
  2012  0E24                     	;# 
  2013  0E25                     	;# 
  2014  0E26                     	;# 
  2015  0E27                     	;# 
  2016  0E28                     	;# 
  2017  0E29                     	;# 
  2018  0E2A                     	;# 
  2019  0E2B                     	;# 
  2020  0E2C                     	;# 
  2021  0E2D                     	;# 
  2022  0E2E                     	;# 
  2023  0E2F                     	;# 
  2024  0E30                     	;# 
  2025  0E31                     	;# 
  2026  0E32                     	;# 
  2027  0E33                     	;# 
  2028  0E34                     	;# 
  2029  0E35                     	;# 
  2030  0E36                     	;# 
  2031  0E37                     	;# 
  2032  0E8F                     	;# 
  2033  0E90                     	;# 
  2034  0E91                     	;# 
  2035  0E92                     	;# 
  2036  0E93                     	;# 
  2037  0E94                     	;# 
  2038  0E95                     	;# 
  2039  0E96                     	;# 
  2040  0E97                     	;# 
  2041  0E9C                     	;# 
  2042  0E9D                     	;# 
  2043  0E9E                     	;# 
  2044  0EA1                     	;# 
  2045  0EA2                     	;# 
  2046  0EA3                     	;# 
  2047  0EA4                     	;# 
  2048  0EA5                     	;# 
  2049  0EA9                     	;# 
  2050  0EAA                     	;# 
  2051  0EAB                     	;# 
  2052  0EAC                     	;# 
  2053  0EB1                     	;# 
  2054  0EB2                     	;# 
  2055  0EB3                     	;# 
  2056  0EB8                     	;# 
  2057  0EB9                     	;# 
  2058  0EBA                     	;# 
  2059  0EBB                     	;# 
  2060  0EBC                     	;# 
  2061  0EBD                     	;# 
  2062  0EBE                     	;# 
  2063  0EC3                     	;# 
  2064  0EC5                     	;# 
  2065  0EC6                     	;# 
  2066  0EC7                     	;# 
  2067  0EC8                     	;# 
  2068  0EC9                     	;# 
  2069  0ECA                     	;# 
  2070  0ECB                     	;# 
  2071  0ECC                     	;# 
  2072  0F10                     	;# 
  2073  0F11                     	;# 
  2074  0F12                     	;# 
  2075  0F13                     	;# 
  2076  0F14                     	;# 
  2077  0F15                     	;# 
  2078  0F16                     	;# 
  2079  0F17                     	;# 
  2080  0F18                     	;# 
  2081  0F19                     	;# 
  2082  0F1A                     	;# 
  2083  0F1B                     	;# 
  2084  0F1C                     	;# 
  2085  0F1D                     	;# 
  2086  0F1E                     	;# 
  2087  0F1F                     	;# 
  2088  0F20                     	;# 
  2089  0F21                     	;# 
  2090  0F22                     	;# 
  2091  0F23                     	;# 
  2092  0F24                     	;# 
  2093  0F25                     	;# 
  2094  0F26                     	;# 
  2095  0F27                     	;# 
  2096  0F38                     	;# 
  2097  0F39                     	;# 
  2098  0F3A                     	;# 
  2099  0F3B                     	;# 
  2100  0F3C                     	;# 
  2101  0F3D                     	;# 
  2102  0F3E                     	;# 
  2103  0F3F                     	;# 
  2104  0F40                     	;# 
  2105  0F41                     	;# 
  2106  0F43                     	;# 
  2107  0F44                     	;# 
  2108  0F45                     	;# 
  2109  0F46                     	;# 
  2110  0F47                     	;# 
  2111  0F48                     	;# 
  2112  0F49                     	;# 
  2113  0F4A                     	;# 
  2114  0F4B                     	;# 
  2115  0F4C                     	;# 
  2116  0F4E                     	;# 
  2117  0F4F                     	;# 
  2118  0F50                     	;# 
  2119  0F51                     	;# 
  2120  0F52                     	;# 
  2121  0F53                     	;# 
  2122  0F54                     	;# 
  2123  0F55                     	;# 
  2124  0F56                     	;# 
  2125  0F57                     	;# 
  2126  0F65                     	;# 
  2127  0F68                     	;# 
  2128  0F69                     	;# 
  2129  0F6A                     	;# 
  2130  0F6B                     	;# 
  2131  0FE4                     	;# 
  2132  0FE5                     	;# 
  2133  0FE6                     	;# 
  2134  0FE7                     	;# 
  2135  0FE8                     	;# 
  2136  0FE9                     	;# 
  2137  0FEA                     	;# 
  2138  0FEB                     	;# 
  2139  0FED                     	;# 
  2140  0FEE                     	;# 
  2141  0FEF                     	;# 
  2142                           
  2143                           	psect	idataBANK1
  2144  07E7                     __pidataBANK1:	
  2145                           
  2146                           ;initializer for _char_lookup
  2147  07E7  34BE               	retlw	190
  2148  07E8  3482               	retlw	130
  2149  07E9  3437               	retlw	55
  2150  07EA  34A7               	retlw	167
  2151  07EB  348B               	retlw	139
  2152  07EC  34AD               	retlw	173
  2153  07ED  34BD               	retlw	189
  2154  07EE  3486               	retlw	134
  2155  07EF  34BF               	retlw	191
  2156  07F0  34AF               	retlw	175
  2157  0018                     _LATC	set	24
  2158  0017                     _LATBbits	set	23
  2159  000B                     _INTCONbits	set	11
  2160  000D                     _PORTBbits	set	13
  2161  0016                     _LATAbits	set	22
  2162  0012                     _TRISBbits	set	18
  2163  0013                     _TRISCbits	set	19
  2164  0011                     _TRISAbits	set	17
  2165  000C                     _PORTAbits	set	12
  2166  020E                     _T1CONbits	set	526
  2167  0211                     _T1CLKbits	set	529
  2168  028D                     _PR2	set	653
  2169  028E                     _T2CONbits	set	654
  2170  0290                     _T2CLKCONbits	set	656
  2171  0310                     _CCPR2L	set	784
  2172  0311                     _CCPR2H	set	785
  2173  030C                     _CCPR1L	set	780
  2174  030D                     _CCPR1H	set	781
  2175  0313                     _CCP2CAPbits	set	787
  2176  0312                     _CCP2CONbits	set	786
  2177  030F                     _CCP1CAPbits	set	783
  2178  030E                     _CCP1CONbits	set	782
  2179  071C                     _PIE6bits	set	1820
  2180  071A                     _PIE4bits	set	1818
  2181  0712                     _PIR6bits	set	1810
  2182  0710                     _PIR4bits	set	1808
  2183  0EA2                     _CCP2PPS	set	3746
  2184  0EA1                     _CCP1PPS	set	3745
  2185  0E8F                     _PPSLOCKbits	set	3727
  2186  0E8F                     _PPSLOCK	set	3727
  2187  0F43                     _ANSELBbits	set	3907
  2188  0F38                     _ANSELAbits	set	3896
  2189                           
  2190                           ; #config settings
  2191  0000                     
  2192                           	psect	cinit
  2193  0021                     start_initialization:	
  2194  0021                     __initialization:	
  2195                           
  2196                           ; Initialize objects allocated to BANK1
  2197  0021  30E7               	movlw	low __pidataBANK1
  2198  0022  0084               	movwf	4
  2199  0023  3087               	movlw	(high __pidataBANK1)| (0+128)
  2200  0024  0085               	movwf	5
  2201  0025  30A0               	movlw	low __pdataBANK1
  2202  0026  0086               	movwf	6
  2203  0027  3000               	movlw	high __pdataBANK1
  2204  0028  0087               	movwf	7
  2205  0029  300A               	movlw	10
  2206  002A  3187  27F1  3180   	fcall	init_ram
  2207                           
  2208                           ; Clear objects allocated to COMMON
  2209  002D  01F9               	clrf	__pbssCOMMON& (0+127)
  2210                           
  2211                           ; Clear objects allocated to BANK0
  2212  002E  3058               	movlw	low __pbssBANK0
  2213  002F  0084               	movwf	4
  2214  0030  3000               	movlw	high __pbssBANK0
  2215  0031  0085               	movwf	5
  2216  0032  3017               	movlw	23
  2217  0033  3187  27F7         	fcall	clear_ram0
  2218                           
  2219                           ; Clear objects allocated to BANK1
  2220  0035  0021               	movlb	1	; select bank1
  2221  0036  01AA               	clrf	__pbssBANK1& (0+127)
  2222  0037  01AB               	clrf	(__pbssBANK1+1)& (0+127)
  2223  0038  01AC               	clrf	(__pbssBANK1+2)& (0+127)
  2224  0039  01AD               	clrf	(__pbssBANK1+3)& (0+127)
  2225  003A                     end_of_initialization:	
  2226                           ;End of C runtime variable initialization code
  2227                           
  2228  003A                     __end_of__initialization:	
  2229  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2230  003B  0020               	movlb	0
  2231  003C  318E  2E73         	ljmp	_main	;jump to C main() function
  2232                           
  2233                           	psect	bssCOMMON
  2234  0079                     __pbssCOMMON:	
  2235  0079                     _rollover_cnt:	
  2236  0079                     	ds	1
  2237                           
  2238                           	psect	bssBANK0
  2239  0058                     __pbssBANK0:	
  2240  0058                     _os:	
  2241  0058                     	ds	18
  2242  006A                     _characters:	
  2243  006A                     	ds	4
  2244  006E                     _segment:	
  2245  006E                     	ds	1
  2246                           
  2247                           	psect	bssBANK1
  2248  00AA                     __pbssBANK1:	
  2249  00AA                     _time:	
  2250  00AA                     	ds	4
  2251                           
  2252                           	psect	dataBANK1
  2253  00A0                     __pdataBANK1:	
  2254  00A0                     _char_lookup:	
  2255  00A0                     	ds	10
  2256                           
  2257                           	psect	inittext
  2258  07F1                     init_ram:	
  2259  07F1  00FE               	movwf	126
  2260  07F2                     initloop:	
  2261  07F2  0012               	moviw fsr0++
  2262  07F3  001E               	movwi fsr1++
  2263  07F4  0BFE               	decfsz	126,f
  2264  07F5  2FF2               	goto	initloop
  2265  07F6  3400               	retlw	0
  2266                           
  2267                           	psect	clrtext
  2268  07F7                     clear_ram0:	
  2269                           ;	Called with FSR0 containing the base address, and
  2270                           ;	WREG with the size to clear
  2271                           
  2272  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  2273  07F8                     clrloop0:	
  2274  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  2275  07F9  3101               	addfsr 0,1
  2276  07FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2277  07FB  2FF8               	goto	clrloop0	;have we reached the end yet?
  2278  07FC  3400               	retlw	0	;all done for this memory range, return
  2279                           
  2280                           	psect	cstackCOMMON
  2281  0070                     __pcstackCOMMON:	
  2282  0070                     ?__system_init:	
  2283  0070                     ?_display_startup:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?__handle_relays:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?__calculate_speed:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_timer_1_isr:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ??_timer_1_isr:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_capture_A_isr:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ??_capture_A_isr:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_capture_B_isr:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ??_capture_B_isr:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_display_isr:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ??_display_isr:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_display_init:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_encoder_init:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_main:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?__isr:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328                           
  2329                           ; 1 bytes @ 0x0
  2330  0070                     	ds	4
  2331  0074                     ??_display_startup:	
  2332  0074                     ??__handle_relays:	
  2333                           ; 1 bytes @ 0x4
  2334                           
  2335  0074                     ??_display_init:	
  2336                           ; 1 bytes @ 0x4
  2337                           
  2338  0074                     ??_encoder_init:	
  2339                           ; 1 bytes @ 0x4
  2340                           
  2341  0074                     ??__isr:	
  2342                           ; 1 bytes @ 0x4
  2343                           
  2344  0074                     ?__Umul8_16:	
  2345                           ; 1 bytes @ 0x4
  2346                           
  2347  0074                     ?___lwdiv:	
  2348                           ; 2 bytes @ 0x4
  2349                           
  2350  0074                     ?___lwmod:	
  2351                           ; 2 bytes @ 0x4
  2352                           
  2353  0074                     ?___fltol:	
  2354                           ; 2 bytes @ 0x4
  2355                           
  2356  0074                     ?___xxtofl:	
  2357                           ; 4 bytes @ 0x4
  2358                           
  2359  0074                     __Umul8_16@multiplicand:	
  2360                           ; 4 bytes @ 0x4
  2361                           
  2362  0074                     ___lwdiv@divisor:	
  2363                           ; 1 bytes @ 0x4
  2364                           
  2365  0074                     ___lwmod@divisor:	
  2366                           ; 2 bytes @ 0x4
  2367                           
  2368  0074                     ___fltol@f1:	
  2369                           ; 2 bytes @ 0x4
  2370                           
  2371  0074                     ___xxtofl@val:	
  2372                           ; 4 bytes @ 0x4
  2373                           
  2374                           
  2375                           ; 4 bytes @ 0x4
  2376  0074                     	ds	1
  2377  0075                     ??__system_init:	
  2378                           
  2379                           ; 1 bytes @ 0x5
  2380  0075                     	ds	1
  2381  0076                     ??__Umul8_16:	
  2382  0076                     ___lwdiv@dividend:	
  2383                           ; 1 bytes @ 0x6
  2384                           
  2385  0076                     ___lwmod@dividend:	
  2386                           ; 2 bytes @ 0x6
  2387                           
  2388                           
  2389                           ; 2 bytes @ 0x6
  2390  0076                     	ds	2
  2391  0078                     ??___lwdiv:	
  2392  0078                     ??___lwmod:	
  2393                           ; 1 bytes @ 0x8
  2394                           
  2395                           
  2396                           ; 1 bytes @ 0x8
  2397  0078                     	ds	1
  2398  0079                     ??_main:	
  2399                           
  2400                           	psect	cstackBANK0
  2401  0020                     __pcstackBANK0:	
  2402                           ; 1 bytes @ 0x9
  2403                           
  2404  0020                     ??___fltol:	
  2405  0020                     ??___xxtofl:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0020                     ___lwmod@counter:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0020                     display_startup@cntr:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0020                     ___lwdiv@quotient:	
  2415                           ; 2 bytes @ 0x0
  2416                           
  2417  0020                     __Umul8_16@product:	
  2418                           ; 2 bytes @ 0x0
  2419                           
  2420                           
  2421                           ; 2 bytes @ 0x0
  2422  0020                     	ds	2
  2423  0022                     ___lwdiv@counter:	
  2424  0022                     __Umul8_16@word_mpld:	
  2425                           ; 1 bytes @ 0x2
  2426                           
  2427  0022                     display_startup@tmp:	
  2428                           ; 2 bytes @ 0x2
  2429                           
  2430                           
  2431                           ; 12 bytes @ 0x2
  2432  0022                     	ds	1
  2433  0023                     ?_display_set:	
  2434  0023                     display_set@value:	
  2435                           ; 1 bytes @ 0x3
  2436                           
  2437                           
  2438                           ; 2 bytes @ 0x3
  2439  0023                     	ds	1
  2440  0024                     ___xxtofl@sign:	
  2441  0024                     __Umul8_16@multiplier:	
  2442                           ; 1 bytes @ 0x4
  2443                           
  2444                           
  2445                           ; 1 bytes @ 0x4
  2446  0024                     	ds	1
  2447  0025                     ?___flmul:	
  2448  0025                     display_set@decimal_flags:	
  2449                           ; 4 bytes @ 0x5
  2450                           
  2451  0025                     ___fltol@sign1:	
  2452                           ; 1 bytes @ 0x5
  2453                           
  2454  0025                     ___xxtofl@exp:	
  2455                           ; 1 bytes @ 0x5
  2456                           
  2457  0025                     ___flmul@b:	
  2458                           ; 1 bytes @ 0x5
  2459                           
  2460                           
  2461                           ; 4 bytes @ 0x5
  2462  0025                     	ds	1
  2463  0026                     ??_display_set:	
  2464  0026                     ___fltol@exp1:	
  2465                           ; 1 bytes @ 0x6
  2466                           
  2467  0026                     ___xxtofl@arg:	
  2468                           ; 1 bytes @ 0x6
  2469                           
  2470                           
  2471                           ; 4 bytes @ 0x6
  2472  0026                     	ds	2
  2473  0028                     display_set@temp_chars:	
  2474                           
  2475                           ; 4 bytes @ 0x8
  2476  0028                     	ds	1
  2477  0029                     ___flmul@a:	
  2478                           
  2479                           ; 4 bytes @ 0x9
  2480  0029                     	ds	1
  2481  002A                     ?___fldiv:	
  2482  002A                     ___fldiv@a:	
  2483                           ; 4 bytes @ 0xA
  2484                           
  2485                           
  2486                           ; 4 bytes @ 0xA
  2487  002A                     	ds	2
  2488  002C                     display_set@abs_value:	
  2489                           
  2490                           ; 2 bytes @ 0xC
  2491  002C                     	ds	1
  2492  002D                     ??___flmul:	
  2493                           
  2494                           ; 1 bytes @ 0xD
  2495  002D                     	ds	1
  2496  002E                     display_startup@last_value:	
  2497  002E                     ___fldiv@b:	
  2498                           ; 1 bytes @ 0xE
  2499                           
  2500                           
  2501                           ; 4 bytes @ 0xE
  2502  002E                     	ds	1
  2503  002F                     display_startup@position:	
  2504                           
  2505                           ; 1 bytes @ 0xF
  2506  002F                     	ds	3
  2507  0032                     ??___fldiv:	
  2508  0032                     ___flmul@sign:	
  2509                           ; 1 bytes @ 0x12
  2510                           
  2511                           
  2512                           ; 1 bytes @ 0x12
  2513  0032                     	ds	1
  2514  0033                     ___flmul@grs:	
  2515                           
  2516                           ; 4 bytes @ 0x13
  2517  0033                     	ds	4
  2518  0037                     ___flmul@aexp:	
  2519  0037                     ___fldiv@rem:	
  2520                           ; 1 bytes @ 0x17
  2521                           
  2522                           
  2523                           ; 4 bytes @ 0x17
  2524  0037                     	ds	1
  2525  0038                     ___flmul@bexp:	
  2526                           
  2527                           ; 1 bytes @ 0x18
  2528  0038                     	ds	1
  2529  0039                     ___flmul@prod:	
  2530                           
  2531                           ; 4 bytes @ 0x19
  2532  0039                     	ds	2
  2533  003B                     ___fldiv@sign:	
  2534                           
  2535                           ; 1 bytes @ 0x1B
  2536  003B                     	ds	1
  2537  003C                     ___fldiv@new_exp:	
  2538                           
  2539                           ; 2 bytes @ 0x1C
  2540  003C                     	ds	1
  2541  003D                     ___flmul@temp:	
  2542                           
  2543                           ; 2 bytes @ 0x1D
  2544  003D                     	ds	1
  2545  003E                     ___fldiv@grs:	
  2546                           
  2547                           ; 4 bytes @ 0x1E
  2548  003E                     	ds	4
  2549  0042                     ___fldiv@bexp:	
  2550                           
  2551                           ; 1 bytes @ 0x22
  2552  0042                     	ds	1
  2553  0043                     ___fldiv@aexp:	
  2554                           
  2555                           ; 1 bytes @ 0x23
  2556  0043                     	ds	1
  2557  0044                     ??__calculate_speed:	
  2558                           
  2559                           ; 1 bytes @ 0x24
  2560  0044                     	ds	8
  2561  004C                     __calculate_speed@distance:	
  2562                           
  2563                           ; 4 bytes @ 0x2C
  2564  004C                     	ds	4
  2565  0050                     __calculate_speed@time_difference:	
  2566                           
  2567                           ; 4 bytes @ 0x30
  2568  0050                     	ds	4
  2569  0054                     __calculate_speed@speed:	
  2570                           
  2571                           ; 4 bytes @ 0x34
  2572  0054                     	ds	4
  2573                           
  2574                           	psect	maintext
  2575  0E73                     __pmaintext:	
  2576 ;;
  2577 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2578 ;;
  2579 ;; *************** function _main *****************
  2580 ;; Defined at:
  2581 ;;		line 27 in file "main.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : B1F/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;Total ram usage:        0 bytes
  2600 ;; Hardware stack levels required when called:    5
  2601 ;; This function calls:
  2602 ;;		__calculate_speed
  2603 ;;		__handle_relays
  2604 ;;		__system_init
  2605 ;;		_display_set
  2606 ;;		_display_startup
  2607 ;; This function is called by:
  2608 ;;		Startup code after reset
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _main
  2614  0E73                     _main:	
  2615                           
  2616                           ;main.c: 29:     _system_init();
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2620  0E73  318F  276E  318E   	fcall	__system_init
  2621                           
  2622                           ;main.c: 31:     display_startup();
  2623  0E76  3186  26E2  318E   	fcall	_display_startup
  2624  0E79                     l2348:	
  2625                           ;main.c: 33:     while(1)
  2626                           
  2627                           
  2628                           ;main.c: 34:     {;main.c: 35:         _handle_relays();
  2629  0E79  3187  2741  318E   	fcall	__handle_relays
  2630                           
  2631                           ;main.c: 37:         if(os.ready)
  2632  0E7C  0020               	movlb	0	; select bank0
  2633  0E7D  085F               	movf	_os+7,w	;volatile
  2634  0E7E  1903               	btfsc	3,2
  2635  0E7F  2E79               	goto	l2348
  2636                           
  2637                           ;main.c: 38:         {;main.c: 39:             _calculate_speed();
  2638  0E80  3184  24B9  318E   	fcall	__calculate_speed
  2639                           
  2640                           ;main.c: 40:             os.ready = 0;
  2641  0E83  0020               	movlb	0	; select bank0
  2642  0E84  01DF               	clrf	_os+7	;volatile
  2643                           
  2644                           ;main.c: 43:             if(PORTAbits.RA3)
  2645  0E85  1D8C               	btfss	12,3	;volatile
  2646  0E86  2E91               	goto	l2360
  2647                           
  2648                           ;main.c: 44:             {;main.c: 45:                 display_set(os.speed, 0b00000001)
      +                          ;
  2649  0E87  0869               	movf	_os+17,w	;volatile
  2650  0E88  00A4               	movwf	display_set@value+1
  2651  0E89  0868               	movf	_os+16,w	;volatile
  2652  0E8A  00A3               	movwf	display_set@value
  2653  0E8B  01A5               	clrf	display_set@decimal_flags
  2654  0E8C  0AA5               	incf	display_set@decimal_flags,f
  2655  0E8D  3183  23FD  318E   	fcall	_display_set
  2656                           
  2657                           ;main.c: 46:             }
  2658  0E90  2E79               	goto	l2348
  2659  0E91                     l2360:	
  2660                           ;main.c: 47:             else
  2661                           
  2662                           
  2663                           ;main.c: 48:             {;main.c: 49:                 display_set(os.speed, 0x00);
  2664  0E91  0020               	movlb	0	; select bank0
  2665  0E92  0869               	movf	_os+17,w	;volatile
  2666  0E93  00A4               	movwf	display_set@value+1
  2667  0E94  0868               	movf	_os+16,w	;volatile
  2668  0E95  00A3               	movwf	display_set@value
  2669  0E96  01A5               	clrf	display_set@decimal_flags
  2670  0E97  3183  23FD  318E   	fcall	_display_set
  2671                           
  2672                           ;main.c: 52:     }
  2673                           
  2674                           ;main.c: 51:         }
  2675                           
  2676                           ;main.c: 50:             }
  2677  0E9A  2E79               	goto	l2348
  2678  0E9B                     __end_of_main:	
  2679                           
  2680                           	psect	text1
  2681  06E2                     __ptext1:	
  2682 ;; *************** function _display_startup *****************
  2683 ;; Defined at:
  2684 ;;		line 157 in file "display.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  tmp            12    2[BANK0 ] unsigned char [12]
  2689 ;;  cntr            2    0[BANK0 ] unsigned short 
  2690 ;;  position        1   15[BANK0 ] unsigned char 
  2691 ;;  last_value      1   14[BANK0 ] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;Total ram usage:       17 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    2
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_main
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _display_startup
  2717  06E2                     _display_startup:	
  2718                           
  2719                           ;display.c: 159:     uint8_t last_value;;display.c: 160:     uint8_t position;;display.c
      +                          : 161:     uint16_t cntr;;display.c: 163:     char tmp[12];;display.c: 164:     tmp[0] =
      +                           0x00;
  2720                           
  2721                           ;incstack = 0
  2722                           ; Regs used in _display_startup: [wreg+fsr1l+fsr1h+status,2+status,0]
  2723  06E2  0020               	movlb	0	; select bank0
  2724  06E3  01A2               	clrf	display_startup@tmp
  2725                           
  2726                           ;display.c: 165:     tmp[1] = 0x00;
  2727  06E4  01A3               	clrf	display_startup@tmp+1
  2728                           
  2729                           ;display.c: 166:     tmp[2] = 0x00;
  2730  06E5  01A4               	clrf	display_startup@tmp+2
  2731                           
  2732                           ;display.c: 167:     tmp[3] = (0b00000010 | 0b00001000 | 0b00010000 | 0b10000000 | 0b000
      +                          00001);
  2733  06E6  309B               	movlw	155
  2734  06E7  00F4               	movwf	??_display_startup
  2735  06E8  0874               	movf	??_display_startup,w
  2736  06E9  00A5               	movwf	display_startup@tmp+3
  2737                           
  2738                           ;display.c: 168:     tmp[4] = (0b00000100 | 0b00001000 | 0b00010000 | 0b00100000 | 0b000
      +                          00001);
  2739  06EA  303D               	movlw	61
  2740  06EB  00F4               	movwf	??_display_startup
  2741  06EC  0874               	movf	??_display_startup,w
  2742  06ED  00A6               	movwf	display_startup@tmp+4
  2743                           
  2744                           ;display.c: 169:     tmp[5] = (0b00001000 | 0b00010000 | 0b00100000);
  2745  06EE  3038               	movlw	56
  2746  06EF  00F4               	movwf	??_display_startup
  2747  06F0  0874               	movf	??_display_startup,w
  2748  06F1  00A7               	movwf	display_startup@tmp+5
  2749                           
  2750                           ;display.c: 170:     tmp[6] = (0b00001000 | 0b00010000 | 0b00100000);
  2751  06F2  3038               	movlw	56
  2752  06F3  00F4               	movwf	??_display_startup
  2753  06F4  0874               	movf	??_display_startup,w
  2754  06F5  00A8               	movwf	display_startup@tmp+6
  2755                           
  2756                           ;display.c: 171:     tmp[7] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 | 0b001
      +                          00000 | 0b10000000);
  2757  06F6  30BE               	movlw	190
  2758  06F7  00F4               	movwf	??_display_startup
  2759  06F8  0874               	movf	??_display_startup,w
  2760  06F9  00A9               	movwf	display_startup@tmp+7
  2761                           
  2762                           ;display.c: 172:     tmp[8] = 0x00;
  2763  06FA  01AA               	clrf	display_startup@tmp+8
  2764                           
  2765                           ;display.c: 173:     tmp[9] = 0x00;
  2766  06FB  01AB               	clrf	display_startup@tmp+9
  2767                           
  2768                           ;display.c: 174:     tmp[10] = 0x00;
  2769  06FC  01AC               	clrf	display_startup@tmp+10
  2770                           
  2771                           ;display.c: 175:     tmp[11] = 0x00;
  2772  06FD  01AD               	clrf	display_startup@tmp+11
  2773                           
  2774                           ;display.c: 177:     for(position=0; position<9; ++position)
  2775  06FE  01AF               	clrf	display_startup@position
  2776  06FF                     L2:	
  2777  06FF  3009               	movlw	9
  2778  0700  022F               	subwf	display_startup@position,w
  2779  0701  1803               	btfsc	3,0
  2780  0702  0008               	return
  2781                           
  2782                           ;display.c: 178:     {;display.c: 179:         characters[0] = tmp[position+0];
  2783  0703  082F               	movf	display_startup@position,w
  2784  0704  3E22               	addlw	(low (display_startup@tmp| 0))& (0+255)
  2785  0705  0086               	movwf	6
  2786  0706  0187               	clrf	7
  2787  0707  0801               	movf	1,w
  2788  0708  00F4               	movwf	??_display_startup
  2789  0709  0874               	movf	??_display_startup,w
  2790  070A  00EA               	movwf	_characters
  2791                           
  2792                           ;display.c: 180:         characters[1] = tmp[position+1];
  2793  070B  082F               	movf	display_startup@position,w
  2794  070C  3E01               	addlw	1
  2795  070D  3E22               	addlw	(low (display_startup@tmp| 0))& (0+255)
  2796  070E  0086               	movwf	6
  2797  070F  0187               	clrf	7
  2798  0710  0801               	movf	1,w
  2799  0711  00F4               	movwf	??_display_startup
  2800  0712  0874               	movf	??_display_startup,w
  2801  0713  00EB               	movwf	_characters+1
  2802                           
  2803                           ;display.c: 181:         characters[2] = tmp[position+2];
  2804  0714  082F               	movf	display_startup@position,w
  2805  0715  3E02               	addlw	2
  2806  0716  3E22               	addlw	(low (display_startup@tmp| 0))& (0+255)
  2807  0717  0086               	movwf	6
  2808  0718  0187               	clrf	7
  2809  0719  0801               	movf	1,w
  2810  071A  00F4               	movwf	??_display_startup
  2811  071B  0874               	movf	??_display_startup,w
  2812  071C  00EC               	movwf	_characters+2
  2813                           
  2814                           ;display.c: 182:         characters[3] = tmp[position+3];
  2815  071D  082F               	movf	display_startup@position,w
  2816  071E  3E03               	addlw	3
  2817  071F  3E22               	addlw	(low (display_startup@tmp| 0))& (0+255)
  2818  0720  0086               	movwf	6
  2819  0721  0187               	clrf	7
  2820  0722  0801               	movf	1,w
  2821  0723  00F4               	movwf	??_display_startup
  2822  0724  0874               	movf	??_display_startup,w
  2823  0725  00ED               	movwf	_characters+3
  2824                           
  2825                           ;display.c: 184:         cntr = 0;
  2826  0726  01A0               	clrf	display_startup@cntr
  2827  0727  01A1               	clrf	display_startup@cntr+1
  2828  0728                     L1:	
  2829                           
  2830                           ;display.c: 191:                 last_value = segment;
  2831  0728  086E               	movf	_segment,w	;volatile
  2832  0729  00F4               	movwf	??_display_startup
  2833  072A  0874               	movf	??_display_startup,w
  2834  072B  00AE               	movwf	display_startup@last_value
  2835  072C                     l151:	
  2836                           ;display.c: 193:         }
  2837                           
  2838                           ;display.c: 192:             }
  2839                           
  2840                           
  2841                           ;display.c: 186:         while(cntr<200)
  2842  072C  3000               	movlw	0
  2843  072D  0221               	subwf	display_startup@cntr+1,w
  2844  072E  30C8               	movlw	200
  2845  072F  1903               	skipnz
  2846  0730  0220               	subwf	display_startup@cntr,w
  2847  0731  1803               	btfsc	3,0
  2848  0732  2F3C               	goto	l2028
  2849                           
  2850                           ;display.c: 187:         {;display.c: 188:             if(segment!=last_value)
  2851                           
  2852                           ;display.c: 186:         while(cntr<200)
  2853                           
  2854                           ;display.c: 185:         last_value = segment;
  2855  0733  086E               	movf	_segment,w	;volatile
  2856  0734  062E               	xorwf	display_startup@last_value,w
  2857  0735  1903               	skipnz
  2858  0736  2F2C               	goto	l151
  2859                           
  2860                           ;display.c: 189:             {;display.c: 190:                 ++cntr;
  2861  0737  3001               	movlw	1
  2862  0738  07A0               	addwf	display_startup@cntr,f
  2863  0739  3000               	movlw	0
  2864  073A  3DA1               	addwfc	display_startup@cntr+1,f
  2865  073B  2F28               	goto	L1
  2866  073C                     l2028:	
  2867                           
  2868                           ;display.c: 194:     }
  2869  073C  3001               	movlw	1
  2870  073D  00F4               	movwf	??_display_startup
  2871  073E  0874               	movf	??_display_startup,w
  2872  073F  07AF               	addwf	display_startup@position,f
  2873  0740  2EFF               	goto	L2
  2874  0741                     __end_of_display_startup:	
  2875                           
  2876                           	psect	text2
  2877  03FD                     __ptext2:	
  2878 ;; *************** function _display_set *****************
  2879 ;; Defined at:
  2880 ;;		line 63 in file "display.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  value           2    3[BANK0 ] short 
  2883 ;;  decimal_flag    1    5[BANK0 ] unsigned char 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  temp_chars      4    8[BANK0 ] unsigned char [4]
  2886 ;;  abs_value       2   12[BANK0 ] unsigned short 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2896 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2897 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2899 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;Total ram usage:       11 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    3
  2903 ;; This function calls:
  2904 ;;		___lwdiv
  2905 ;;		___lwmod
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function _display_set
  2913  03FD                     _display_set:	
  2914                           
  2915                           ;display.c: 63: void display_set(int16_t value, uint8_t decimal_flags);display.c: 64: {;
      +                          display.c: 65:     uint16_t abs_value;;display.c: 66:     uint8_t temp_chars[4];;display
      +                          .c: 68:     if(value<0)
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in _display_set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2919  03FD  0020               	movlb	0	; select bank0
  2920  03FE  1FA4               	btfss	display_set@value+1,7
  2921  03FF  2C0C               	goto	l2302
  2922                           
  2923                           ;display.c: 69:     {;display.c: 70:         abs_value = -value;
  2924  0400  0923               	comf	display_set@value,w
  2925  0401  00A6               	movwf	??_display_set
  2926  0402  0924               	comf	display_set@value+1,w
  2927  0403  00A7               	movwf	??_display_set+1
  2928  0404  0AA6               	incf	??_display_set,f
  2929  0405  1903               	skipnz
  2930  0406  0AA7               	incf	??_display_set+1,f
  2931  0407  0826               	movf	??_display_set,w
  2932  0408  00AC               	movwf	display_set@abs_value
  2933  0409  0827               	movf	??_display_set+1,w
  2934  040A  00AD               	movwf	display_set@abs_value+1
  2935                           
  2936                           ;display.c: 71:     }
  2937  040B  2C10               	goto	l2304
  2938  040C                     l2302:	
  2939                           ;display.c: 72:     else
  2940                           
  2941                           
  2942                           ;display.c: 73:     {;display.c: 74:         abs_value = value;
  2943  040C  0824               	movf	display_set@value+1,w
  2944  040D  00AD               	movwf	display_set@abs_value+1
  2945  040E  0823               	movf	display_set@value,w
  2946  040F  00AC               	movwf	display_set@abs_value
  2947  0410                     l2304:	
  2948                           ;display.c: 75:     }
  2949                           
  2950                           
  2951                           ;display.c: 78:     temp_chars[3] = 0x00;
  2952  0410  01AB               	clrf	display_set@temp_chars+3
  2953                           
  2954                           ;display.c: 79:     temp_chars[2] = 0x00;
  2955  0411  01AA               	clrf	display_set@temp_chars+2
  2956                           
  2957                           ;display.c: 80:     temp_chars[1] = 0x00;
  2958  0412  01A9               	clrf	display_set@temp_chars+1
  2959                           
  2960                           ;display.c: 81:     temp_chars[0] = 0x00;
  2961  0413  01A8               	clrf	display_set@temp_chars
  2962                           
  2963                           ;display.c: 84:     temp_chars[3] = char_lookup[abs_value%10];
  2964  0414  300A               	movlw	10
  2965  0415  00F4               	movwf	___lwmod@divisor
  2966  0416  3000               	movlw	0
  2967  0417  00F5               	movwf	___lwmod@divisor+1
  2968  0418  082D               	movf	display_set@abs_value+1,w
  2969  0419  00F7               	movwf	___lwmod@dividend+1
  2970  041A  082C               	movf	display_set@abs_value,w
  2971  041B  00F6               	movwf	___lwmod@dividend
  2972  041C  318E  269B  3183   	fcall	___lwmod
  2973  041F  0874               	movf	?___lwmod,w
  2974  0420  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  2975  0421  0086               	movwf	6
  2976  0422  0187               	clrf	7
  2977  0423  0801               	movf	1,w
  2978  0424  0020               	movlb	0	; select bank0
  2979  0425  00A6               	movwf	??_display_set
  2980  0426  0826               	movf	??_display_set,w
  2981  0427  00AB               	movwf	display_set@temp_chars+3
  2982                           
  2983                           ;display.c: 85:     abs_value /= 10;
  2984  0428  300A               	movlw	10
  2985  0429  00F4               	movwf	___lwdiv@divisor
  2986  042A  3000               	movlw	0
  2987  042B  00F5               	movwf	___lwdiv@divisor+1
  2988  042C  082D               	movf	display_set@abs_value+1,w
  2989  042D  00F7               	movwf	___lwdiv@dividend+1
  2990  042E  082C               	movf	display_set@abs_value,w
  2991  042F  00F6               	movwf	___lwdiv@dividend
  2992  0430  318E  26FB  3183   	fcall	___lwdiv
  2993  0433  0875               	movf	?___lwdiv+1,w
  2994  0434  0020               	movlb	0	; select bank0
  2995  0435  00AD               	movwf	display_set@abs_value+1
  2996  0436  0874               	movf	?___lwdiv,w
  2997  0437  00AC               	movwf	display_set@abs_value
  2998                           
  2999                           ;display.c: 86:     if(abs_value)
  3000  0438  082C               	movf	display_set@abs_value,w
  3001  0439  042D               	iorwf	display_set@abs_value+1,w
  3002  043A  1903               	btfsc	3,2
  3003  043B  2C9F               	goto	l2332
  3004                           
  3005                           ;display.c: 87:     {;display.c: 88:         temp_chars[2] = char_lookup[abs_value%10];
  3006  043C  300A               	movlw	10
  3007  043D  00F4               	movwf	___lwmod@divisor
  3008  043E  3000               	movlw	0
  3009  043F  00F5               	movwf	___lwmod@divisor+1
  3010  0440  082D               	movf	display_set@abs_value+1,w
  3011  0441  00F7               	movwf	___lwmod@dividend+1
  3012  0442  082C               	movf	display_set@abs_value,w
  3013  0443  00F6               	movwf	___lwmod@dividend
  3014  0444  318E  269B  3183   	fcall	___lwmod
  3015  0447  0874               	movf	?___lwmod,w
  3016  0448  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  3017  0449  0086               	movwf	6
  3018  044A  0187               	clrf	7
  3019  044B  0801               	movf	1,w
  3020  044C  0020               	movlb	0	; select bank0
  3021  044D  00A6               	movwf	??_display_set
  3022  044E  0826               	movf	??_display_set,w
  3023  044F  00AA               	movwf	display_set@temp_chars+2
  3024                           
  3025                           ;display.c: 89:         abs_value /= 10;
  3026  0450  300A               	movlw	10
  3027  0451  00F4               	movwf	___lwdiv@divisor
  3028  0452  3000               	movlw	0
  3029  0453  00F5               	movwf	___lwdiv@divisor+1
  3030  0454  082D               	movf	display_set@abs_value+1,w
  3031  0455  00F7               	movwf	___lwdiv@dividend+1
  3032  0456  082C               	movf	display_set@abs_value,w
  3033  0457  00F6               	movwf	___lwdiv@dividend
  3034  0458  318E  26FB  3183   	fcall	___lwdiv
  3035  045B  0875               	movf	?___lwdiv+1,w
  3036  045C  0020               	movlb	0	; select bank0
  3037  045D  00AD               	movwf	display_set@abs_value+1
  3038  045E  0874               	movf	?___lwdiv,w
  3039  045F  00AC               	movwf	display_set@abs_value
  3040                           
  3041                           ;display.c: 90:         if(abs_value)
  3042  0460  082C               	movf	display_set@abs_value,w
  3043  0461  042D               	iorwf	display_set@abs_value+1,w
  3044  0462  1903               	btfsc	3,2
  3045  0463  2C9F               	goto	l2332
  3046                           
  3047                           ;display.c: 91:         {;display.c: 92:             temp_chars[1] = char_lookup[abs_val
      +                          ue%10];
  3048  0464  300A               	movlw	10
  3049  0465  00F4               	movwf	___lwmod@divisor
  3050  0466  3000               	movlw	0
  3051  0467  00F5               	movwf	___lwmod@divisor+1
  3052  0468  082D               	movf	display_set@abs_value+1,w
  3053  0469  00F7               	movwf	___lwmod@dividend+1
  3054  046A  082C               	movf	display_set@abs_value,w
  3055  046B  00F6               	movwf	___lwmod@dividend
  3056  046C  318E  269B  3183   	fcall	___lwmod
  3057  046F  0874               	movf	?___lwmod,w
  3058  0470  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  3059  0471  0086               	movwf	6
  3060  0472  0187               	clrf	7
  3061  0473  0801               	movf	1,w
  3062  0474  0020               	movlb	0	; select bank0
  3063  0475  00A6               	movwf	??_display_set
  3064  0476  0826               	movf	??_display_set,w
  3065  0477  00A9               	movwf	display_set@temp_chars+1
  3066                           
  3067                           ;display.c: 93:             abs_value /= 10;
  3068  0478  300A               	movlw	10
  3069  0479  00F4               	movwf	___lwdiv@divisor
  3070  047A  3000               	movlw	0
  3071  047B  00F5               	movwf	___lwdiv@divisor+1
  3072  047C  082D               	movf	display_set@abs_value+1,w
  3073  047D  00F7               	movwf	___lwdiv@dividend+1
  3074  047E  082C               	movf	display_set@abs_value,w
  3075  047F  00F6               	movwf	___lwdiv@dividend
  3076  0480  318E  26FB  3183   	fcall	___lwdiv
  3077  0483  0875               	movf	?___lwdiv+1,w
  3078  0484  0020               	movlb	0	; select bank0
  3079  0485  00AD               	movwf	display_set@abs_value+1
  3080  0486  0874               	movf	?___lwdiv,w
  3081  0487  00AC               	movwf	display_set@abs_value
  3082                           
  3083                           ;display.c: 94:             if(abs_value)
  3084  0488  082C               	movf	display_set@abs_value,w
  3085  0489  042D               	iorwf	display_set@abs_value+1,w
  3086  048A  1903               	btfsc	3,2
  3087  048B  2C9F               	goto	l2332
  3088                           
  3089                           ;display.c: 95:             {;display.c: 96:                 temp_chars[0] = char_lookup
      +                          [abs_value%10];
  3090  048C  300A               	movlw	10
  3091  048D  00F4               	movwf	___lwmod@divisor
  3092  048E  3000               	movlw	0
  3093  048F  00F5               	movwf	___lwmod@divisor+1
  3094  0490  082D               	movf	display_set@abs_value+1,w
  3095  0491  00F7               	movwf	___lwmod@dividend+1
  3096  0492  082C               	movf	display_set@abs_value,w
  3097  0493  00F6               	movwf	___lwmod@dividend
  3098  0494  318E  269B         	fcall	___lwmod
  3099  0496  0874               	movf	?___lwmod,w
  3100  0497  3EA0               	addlw	(low (_char_lookup| 0))& (0+255)
  3101  0498  0086               	movwf	6
  3102  0499  0187               	clrf	7
  3103  049A  0801               	movf	1,w
  3104  049B  0020               	movlb	0	; select bank0
  3105  049C  00A6               	movwf	??_display_set
  3106  049D  0826               	movf	??_display_set,w
  3107  049E  00A8               	movwf	display_set@temp_chars
  3108  049F                     l2332:	
  3109                           ;display.c: 99:     }
  3110                           
  3111                           ;display.c: 98:         }
  3112                           
  3113                           ;display.c: 97:             }
  3114                           
  3115                           
  3116                           ;display.c: 102:     if(value<0 || (decimal_flags&0b00001000))
  3117  049F  1FA4               	btfss	display_set@value+1,7
  3118  04A0  19A5               	btfsc	display_set@decimal_flags,3
  3119                           
  3120                           ;display.c: 103:     {;display.c: 104:         temp_chars[3] |= 0b01000000;
  3121  04A1  172B               	bsf	display_set@temp_chars+3,6
  3122                           
  3123                           ;display.c: 106:     if(decimal_flags & 0b00000100)
  3124                           
  3125                           ;display.c: 105:     }
  3126  04A2  1925               	btfsc	display_set@decimal_flags,2
  3127                           
  3128                           ;display.c: 107:     {;display.c: 108:         temp_chars[2] |= 0b01000000;
  3129  04A3  172A               	bsf	display_set@temp_chars+2,6
  3130                           
  3131                           ;display.c: 110:     if(decimal_flags & 0b00000010)
  3132                           
  3133                           ;display.c: 109:     }
  3134  04A4  18A5               	btfsc	display_set@decimal_flags,1
  3135                           
  3136                           ;display.c: 111:     {;display.c: 112:         temp_chars[1] |= 0b01000000;
  3137  04A5  1729               	bsf	display_set@temp_chars+1,6
  3138                           
  3139                           ;display.c: 114:     if(decimal_flags & 0b00000001)
  3140                           
  3141                           ;display.c: 113:     }
  3142  04A6  1825               	btfsc	display_set@decimal_flags,0
  3143                           
  3144                           ;display.c: 115:     {;display.c: 116:         temp_chars[0] |= 0b01000000;
  3145  04A7  1728               	bsf	display_set@temp_chars,6
  3146                           
  3147                           ;display.c: 120:     characters[0] = temp_chars[0];
  3148                           
  3149                           ;display.c: 117:     }
  3150  04A8  0828               	movf	display_set@temp_chars,w
  3151  04A9  00A6               	movwf	??_display_set
  3152  04AA  0826               	movf	??_display_set,w
  3153  04AB  00EA               	movwf	_characters
  3154                           
  3155                           ;display.c: 121:     characters[1] = temp_chars[1];
  3156  04AC  0829               	movf	display_set@temp_chars+1,w
  3157  04AD  00A6               	movwf	??_display_set
  3158  04AE  0826               	movf	??_display_set,w
  3159  04AF  00EB               	movwf	_characters+1
  3160                           
  3161                           ;display.c: 122:     characters[2] = temp_chars[2];
  3162  04B0  082A               	movf	display_set@temp_chars+2,w
  3163  04B1  00A6               	movwf	??_display_set
  3164  04B2  0826               	movf	??_display_set,w
  3165  04B3  00EC               	movwf	_characters+2
  3166                           
  3167                           ;display.c: 123:     characters[3] = temp_chars[3];
  3168  04B4  082B               	movf	display_set@temp_chars+3,w
  3169  04B5  00A6               	movwf	??_display_set
  3170  04B6  0826               	movf	??_display_set,w
  3171  04B7  00ED               	movwf	_characters+3
  3172  04B8  0008               	return
  3173  04B9                     __end_of_display_set:	
  3174                           
  3175                           	psect	text3
  3176  0E9B                     __ptext3:	
  3177 ;; *************** function ___lwmod *****************
  3178 ;; Defined at:
  3179 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  divisor         2    4[COMMON] unsigned int 
  3182 ;;  dividend        2    6[COMMON] unsigned int 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  counter         1    0[BANK0 ] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  2    4[COMMON] unsigned int 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;Total ram usage:        6 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    2
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_display_set
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function ___lwmod
  3210  0E9B                     ___lwmod:	
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3214  0E9B  0874               	movf	___lwmod@divisor,w
  3215  0E9C  0475               	iorwf	___lwmod@divisor+1,w
  3216  0E9D  1903               	btfsc	3,2
  3217  0E9E  2EC3               	goto	l2276
  3218  0E9F  0020               	movlb	0	; select bank0
  3219  0EA0  01A0               	clrf	___lwmod@counter
  3220  0EA1  0AA0               	incf	___lwmod@counter,f
  3221  0EA2                     l2266:	
  3222  0EA2  1BF5               	btfsc	___lwmod@divisor+1,7
  3223  0EA3  2EAE               	goto	l2268
  3224  0EA4  3001               	movlw	1
  3225  0EA5                     u2865:	
  3226  0EA5  35F4               	lslf	___lwmod@divisor,f
  3227  0EA6  0DF5               	rlf	___lwmod@divisor+1,f
  3228  0EA7  0B89               	decfsz	9,f
  3229  0EA8  2EA5               	goto	u2865
  3230  0EA9  3001               	movlw	1
  3231  0EAA  00F8               	movwf	??___lwmod
  3232  0EAB  0878               	movf	??___lwmod,w
  3233  0EAC  07A0               	addwf	___lwmod@counter,f
  3234  0EAD  2EA2               	goto	l2266
  3235  0EAE                     l2268:	
  3236  0EAE  0875               	movf	___lwmod@divisor+1,w
  3237  0EAF  0277               	subwf	___lwmod@dividend+1,w
  3238  0EB0  1D03               	skipz
  3239  0EB1  2EB4               	goto	u2885
  3240  0EB2  0874               	movf	___lwmod@divisor,w
  3241  0EB3  0276               	subwf	___lwmod@dividend,w
  3242  0EB4                     u2885:	
  3243  0EB4  1C03               	skipc
  3244  0EB5  2EBA               	goto	l2272
  3245  0EB6  0874               	movf	___lwmod@divisor,w
  3246  0EB7  02F6               	subwf	___lwmod@dividend,f
  3247  0EB8  0875               	movf	___lwmod@divisor+1,w
  3248  0EB9  3BF7               	subwfb	___lwmod@dividend+1,f
  3249  0EBA                     l2272:	
  3250  0EBA  3001               	movlw	1
  3251  0EBB                     u2895:	
  3252  0EBB  36F5               	lsrf	___lwmod@divisor+1,f
  3253  0EBC  0CF4               	rrf	___lwmod@divisor,f
  3254  0EBD  0B89               	decfsz	9,f
  3255  0EBE  2EBB               	goto	u2895
  3256  0EBF  3001               	movlw	1
  3257  0EC0  02A0               	subwf	___lwmod@counter,f
  3258  0EC1  1D03               	btfss	3,2
  3259  0EC2  2EAE               	goto	l2268
  3260  0EC3                     l2276:	
  3261  0EC3  0877               	movf	___lwmod@dividend+1,w
  3262  0EC4  00F5               	movwf	?___lwmod+1
  3263  0EC5  0876               	movf	___lwmod@dividend,w
  3264  0EC6  00F4               	movwf	?___lwmod
  3265  0EC7  0008               	return
  3266  0EC8                     __end_of___lwmod:	
  3267                           
  3268                           	psect	text4
  3269  0EFB                     __ptext4:	
  3270 ;; *************** function ___lwdiv *****************
  3271 ;; Defined at:
  3272 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  divisor         2    4[COMMON] unsigned int 
  3275 ;;  dividend        2    6[COMMON] unsigned int 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  quotient        2    0[BANK0 ] unsigned int 
  3278 ;;  counter         1    2[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2    4[COMMON] unsigned int 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3291 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;Total ram usage:        8 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    2
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_display_set
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function ___lwdiv
  3304  0EFB                     ___lwdiv:	
  3305                           
  3306                           ;incstack = 0
  3307                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3308  0EFB  0020               	movlb	0	; select bank0
  3309  0EFC  01A0               	clrf	___lwdiv@quotient
  3310  0EFD  01A1               	clrf	___lwdiv@quotient+1
  3311  0EFE  0874               	movf	___lwdiv@divisor,w
  3312  0EFF  0475               	iorwf	___lwdiv@divisor+1,w
  3313  0F00  1903               	btfsc	3,2
  3314  0F01  2F2B               	goto	l1632
  3315  0F02  01A2               	clrf	___lwdiv@counter
  3316  0F03  0AA2               	incf	___lwdiv@counter,f
  3317  0F04                     l1620:	
  3318  0F04  1BF5               	btfsc	___lwdiv@divisor+1,7
  3319  0F05  2F10               	goto	l1622
  3320  0F06  3001               	movlw	1
  3321  0F07                     u1595:	
  3322  0F07  35F4               	lslf	___lwdiv@divisor,f
  3323  0F08  0DF5               	rlf	___lwdiv@divisor+1,f
  3324  0F09  0B89               	decfsz	9,f
  3325  0F0A  2F07               	goto	u1595
  3326  0F0B  3001               	movlw	1
  3327  0F0C  00F8               	movwf	??___lwdiv
  3328  0F0D  0878               	movf	??___lwdiv,w
  3329  0F0E  07A2               	addwf	___lwdiv@counter,f
  3330  0F0F  2F04               	goto	l1620
  3331  0F10                     l1622:	
  3332  0F10  3001               	movlw	1
  3333  0F11                     u1615:	
  3334  0F11  35A0               	lslf	___lwdiv@quotient,f
  3335  0F12  0DA1               	rlf	___lwdiv@quotient+1,f
  3336  0F13  0B89               	decfsz	9,f
  3337  0F14  2F11               	goto	u1615
  3338  0F15  0875               	movf	___lwdiv@divisor+1,w
  3339  0F16  0277               	subwf	___lwdiv@dividend+1,w
  3340  0F17  1D03               	skipz
  3341  0F18  2F1B               	goto	u1625
  3342  0F19  0874               	movf	___lwdiv@divisor,w
  3343  0F1A  0276               	subwf	___lwdiv@dividend,w
  3344  0F1B                     u1625:	
  3345  0F1B  1C03               	skipc
  3346  0F1C  2F22               	goto	l1628
  3347  0F1D  0874               	movf	___lwdiv@divisor,w
  3348  0F1E  02F6               	subwf	___lwdiv@dividend,f
  3349  0F1F  0875               	movf	___lwdiv@divisor+1,w
  3350  0F20  3BF7               	subwfb	___lwdiv@dividend+1,f
  3351  0F21  1420               	bsf	___lwdiv@quotient,0
  3352  0F22                     l1628:	
  3353  0F22  3001               	movlw	1
  3354  0F23                     u1635:	
  3355  0F23  36F5               	lsrf	___lwdiv@divisor+1,f
  3356  0F24  0CF4               	rrf	___lwdiv@divisor,f
  3357  0F25  0B89               	decfsz	9,f
  3358  0F26  2F23               	goto	u1635
  3359  0F27  3001               	movlw	1
  3360  0F28  02A2               	subwf	___lwdiv@counter,f
  3361  0F29  1D03               	btfss	3,2
  3362  0F2A  2F10               	goto	l1622
  3363  0F2B                     l1632:	
  3364  0F2B  0821               	movf	___lwdiv@quotient+1,w
  3365  0F2C  00F5               	movwf	?___lwdiv+1
  3366  0F2D  0820               	movf	___lwdiv@quotient,w
  3367  0F2E  00F4               	movwf	?___lwdiv
  3368  0F2F  0008               	return
  3369  0F30                     __end_of___lwdiv:	
  3370                           
  3371                           	psect	text5
  3372  0F6E                     __ptext5:	
  3373 ;; *************** function __system_init *****************
  3374 ;; Defined at:
  3375 ;;		line 84 in file "main.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, pclath, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    3
  3396 ;; This function calls:
  3397 ;;		_display_init
  3398 ;;		_encoder_init
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function __system_init
  3406  0F6E                     __system_init:	
  3407                           
  3408                           ;main.c: 86:     TRISAbits.TRISA1 = 0;
  3409                           
  3410                           ;incstack = 0
  3411                           ; Regs used in __system_init: [wreg+status,2+status,0+pclath+cstack]
  3412  0F6E  0020               	movlb	0	; select bank0
  3413  0F6F  1091               	bcf	17,1	;volatile
  3414                           
  3415                           ;main.c: 87:     TRISAbits.TRISA2 = 0;
  3416  0F70  1111               	bcf	17,2	;volatile
  3417                           
  3418                           ;main.c: 88:     TRISAbits.TRISA0 = 0;
  3419  0F71  1011               	bcf	17,0	;volatile
  3420                           
  3421                           ;main.c: 90:     TRISAbits.TRISA3 = 1;
  3422  0F72  1591               	bsf	17,3	;volatile
  3423                           
  3424                           ;main.c: 91:     ANSELAbits.ANSA3 = 0;
  3425  0F73  003E               	movlb	30	; select bank30
  3426  0F74  11B8               	bcf	56,3	;volatile
  3427                           
  3428                           ;main.c: 92:     TRISAbits.TRISA4 = 1;
  3429  0F75  0020               	movlb	0	; select bank0
  3430  0F76  1611               	bsf	17,4	;volatile
  3431                           
  3432                           ;main.c: 93:     ANSELAbits.ANSA4 = 0;
  3433  0F77  003E               	movlb	30	; select bank30
  3434  0F78  1238               	bcf	56,4	;volatile
  3435                           
  3436                           ;main.c: 94:     TRISAbits.TRISA5 = 1;
  3437  0F79  0020               	movlb	0	; select bank0
  3438  0F7A  1691               	bsf	17,5	;volatile
  3439                           
  3440                           ;main.c: 95:     ANSELAbits.ANSA5 = 0;
  3441  0F7B  003E               	movlb	30	; select bank30
  3442  0F7C  12B8               	bcf	56,5	;volatile
  3443                           
  3444                           ;main.c: 97:     TRISCbits.TRISC2 = 0;
  3445  0F7D  0020               	movlb	0	; select bank0
  3446  0F7E  1113               	bcf	19,2	;volatile
  3447                           
  3448                           ;main.c: 98:     TRISCbits.TRISC1 = 0;
  3449  0F7F  1093               	bcf	19,1	;volatile
  3450                           
  3451                           ;main.c: 99:     TRISCbits.TRISC7 = 0;
  3452  0F80  1393               	bcf	19,7	;volatile
  3453                           
  3454                           ;main.c: 100:     TRISCbits.TRISC5 = 0;
  3455  0F81  1293               	bcf	19,5	;volatile
  3456                           
  3457                           ;main.c: 101:     TRISCbits.TRISC4 = 0;
  3458  0F82  1213               	bcf	19,4	;volatile
  3459                           
  3460                           ;main.c: 102:     TRISCbits.TRISC3 = 0;
  3461  0F83  1193               	bcf	19,3	;volatile
  3462                           
  3463                           ;main.c: 103:     TRISCbits.TRISC0 = 0;
  3464  0F84  1013               	bcf	19,0	;volatile
  3465                           
  3466                           ;main.c: 104:     TRISCbits.TRISC6 = 0;
  3467  0F85  1313               	bcf	19,6	;volatile
  3468                           
  3469                           ;main.c: 105:     TRISBbits.TRISB7 = 0;
  3470  0F86  1392               	bcf	18,7	;volatile
  3471                           
  3472                           ;main.c: 106:     TRISBbits.TRISB6 = 0;
  3473  0F87  1312               	bcf	18,6	;volatile
  3474                           
  3475                           ;main.c: 107:     TRISBbits.TRISB5 = 0;
  3476  0F88  1292               	bcf	18,5	;volatile
  3477                           
  3478                           ;main.c: 108:     TRISBbits.TRISB4 = 0;
  3479  0F89  1212               	bcf	18,4	;volatile
  3480                           
  3481                           ;main.c: 110:     TRISBbits.TRISB0 = 1;
  3482  0F8A  1412               	bsf	18,0	;volatile
  3483                           
  3484                           ;main.c: 111:     ANSELBbits.ANSB0 = 0;
  3485  0F8B  003E               	movlb	30	; select bank30
  3486  0F8C  1043               	bcf	67,0	;volatile
  3487                           
  3488                           ;main.c: 112:     TRISBbits.TRISB3 = 1;
  3489  0F8D  0020               	movlb	0	; select bank0
  3490  0F8E  1592               	bsf	18,3	;volatile
  3491                           
  3492                           ;main.c: 113:     ANSELBbits.ANSB3 = 0;
  3493  0F8F  003E               	movlb	30	; select bank30
  3494  0F90  11C3               	bcf	67,3	;volatile
  3495                           
  3496                           ;main.c: 115:     TRISBbits.TRISB2 = 1;
  3497  0F91  0020               	movlb	0	; select bank0
  3498  0F92  1512               	bsf	18,2	;volatile
  3499                           
  3500                           ;main.c: 116:     ANSELBbits.ANSB2 = 0;
  3501  0F93  003E               	movlb	30	; select bank30
  3502  0F94  1143               	bcf	67,2	;volatile
  3503                           
  3504                           ;main.c: 117:     TRISBbits.TRISB1 = 1;
  3505  0F95  0020               	movlb	0	; select bank0
  3506  0F96  1492               	bsf	18,1	;volatile
  3507                           
  3508                           ;main.c: 118:     ANSELBbits.ANSB1 = 0;
  3509  0F97  003E               	movlb	30	; select bank30
  3510  0F98  10C3               	bcf	67,1	;volatile
  3511                           
  3512                           ;main.c: 120:     {PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0;};
  3513  0F99  3055               	movlw	85
  3514  0F9A  003D               	movlb	29	; select bank29
  3515  0F9B  008F               	movwf	15	;volsfr
  3516  0F9C  30AA               	movlw	170
  3517  0F9D  008F               	movwf	15	;volsfr
  3518  0F9E  100F               	bcf	15,0	;volsfr
  3519                           
  3520                           ;main.c: 121:     CCP1PPS = 0x0A;
  3521  0F9F  300A               	movlw	10
  3522  0FA0  00A1               	movwf	33	;volatile
  3523                           
  3524                           ;main.c: 122:     CCP2PPS = 0x09;
  3525  0FA1  3009               	movlw	9
  3526  0FA2  00A2               	movwf	34	;volatile
  3527                           
  3528                           ;main.c: 123:     {PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 1;};
  3529  0FA3  3055               	movlw	85
  3530  0FA4  008F               	movwf	15	;volsfr
  3531  0FA5  30AA               	movlw	170
  3532  0FA6  008F               	movwf	15	;volsfr
  3533  0FA7  140F               	bsf	15,0	;volsfr
  3534                           
  3535                           ;main.c: 125:     display_init();
  3536  0FA8  318E  264F  318F   	fcall	_display_init
  3537                           
  3538                           ;main.c: 126:     encoder_init();
  3539  0FAB  318F  2730         	fcall	_encoder_init
  3540  0FAD  0008               	return
  3541  0FAE                     __end_of__system_init:	
  3542                           
  3543                           	psect	text6
  3544  0F30                     __ptext6:	
  3545 ;; *************** function _encoder_init *****************
  3546 ;; Defined at:
  3547 ;;		line 8 in file "encoder.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		__system_init
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _encoder_init
  3577  0F30                     _encoder_init:	
  3578                           
  3579                           ;encoder.c: 10:     rollover_cnt = 0;
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _encoder_init: [wreg+status,2+status,0]
  3583  0F30  01F9               	clrf	_rollover_cnt
  3584                           
  3585                           ;encoder.c: 12:     os.encoder = 0;
  3586  0F31  0020               	movlb	0	; select bank0
  3587  0F32  01D8               	clrf	_os	;volatile
  3588  0F33  01D9               	clrf	_os+1	;volatile
  3589                           
  3590                           ;encoder.c: 13:     os.encoder_last = 0;
  3591  0F34  01DA               	clrf	_os+2	;volatile
  3592  0F35  01DB               	clrf	_os+3	;volatile
  3593                           
  3594                           ;encoder.c: 14:     os.encoder_difference = 0;
  3595  0F36  01DC               	clrf	_os+4	;volatile
  3596  0F37  01DD               	clrf	_os+5	;volatile
  3597                           
  3598                           ;encoder.c: 15:     os.capture = 0;
  3599  0F38  01DE               	clrf	_os+6	;volatile
  3600                           
  3601                           ;encoder.c: 16:     os.ready = 0;
  3602  0F39  01DF               	clrf	_os+7	;volatile
  3603                           
  3604                           ;encoder.c: 17:     os.time_sum_last = 0;
  3605  0F3A  3000               	movlw	0
  3606  0F3B  00E3               	movwf	_os+11	;volatile
  3607  0F3C  3000               	movlw	0
  3608  0F3D  00E2               	movwf	_os+10	;volatile
  3609  0F3E  3000               	movlw	0
  3610  0F3F  00E1               	movwf	_os+9	;volatile
  3611  0F40  3000               	movlw	0
  3612  0F41  00E0               	movwf	_os+8	;volatile
  3613                           
  3614                           ;encoder.c: 18:     os.time_sum = 0;
  3615  0F42  3000               	movlw	0
  3616  0F43  00E7               	movwf	_os+15	;volatile
  3617  0F44  3000               	movlw	0
  3618  0F45  00E6               	movwf	_os+14	;volatile
  3619  0F46  3000               	movlw	0
  3620  0F47  00E5               	movwf	_os+13	;volatile
  3621  0F48  3000               	movlw	0
  3622  0F49  00E4               	movwf	_os+12	;volatile
  3623                           
  3624                           ;encoder.c: 19:     os.speed = 0;
  3625  0F4A  01E8               	clrf	_os+16	;volatile
  3626  0F4B  01E9               	clrf	_os+17	;volatile
  3627                           
  3628                           ;encoder.c: 22:     T1CLKbits.CS = 0b0001;
  3629  0F4C  0024               	movlb	4	; select bank4
  3630  0F4D  0811               	movf	17,w	;volatile
  3631  0F4E  39F0               	andlw	-16
  3632  0F4F  3801               	iorlw	1
  3633  0F50  0091               	movwf	17	;volatile
  3634                           
  3635                           ;encoder.c: 23:     T1CONbits.CKPS = 0b00;
  3636  0F51  30CF               	movlw	-49
  3637  0F52  058E               	andwf	14,f	;volatile
  3638                           
  3639                           ;encoder.c: 24:     T1CONbits.RD16 = 1;
  3640  0F53  148E               	bsf	14,1	;volatile
  3641                           
  3642                           ;encoder.c: 25:     T1CONbits.ON = 1;
  3643  0F54  140E               	bsf	14,0	;volatile
  3644                           
  3645                           ;encoder.c: 28:     INTCONbits.GIE = 1;
  3646  0F55  178B               	bsf	11,7	;volatile
  3647                           
  3648                           ;encoder.c: 29:     INTCONbits.PEIE = 1;
  3649  0F56  170B               	bsf	11,6	;volatile
  3650                           
  3651                           ;encoder.c: 30:     PIE4bits.TMR1IE = 1;
  3652  0F57  002E               	movlb	14	; select bank14
  3653  0F58  141A               	bsf	26,0	;volatile
  3654                           
  3655                           ;encoder.c: 33:     CCP1CONbits.MODE = 0b0011;
  3656  0F59  0026               	movlb	6	; select bank6
  3657  0F5A  080E               	movf	14,w	;volatile
  3658  0F5B  39F0               	andlw	-16
  3659  0F5C  3803               	iorlw	3
  3660  0F5D  008E               	movwf	14	;volatile
  3661                           
  3662                           ;encoder.c: 34:     CCP1CAPbits.CTS = 0b000;
  3663  0F5E  018F               	clrf	15	;volatile
  3664                           
  3665                           ;encoder.c: 35:     CCP1CONbits.EN = 1;
  3666  0F5F  178E               	bsf	14,7	;volatile
  3667                           
  3668                           ;encoder.c: 38:     CCP2CONbits.MODE = 0b0011;
  3669  0F60  0812               	movf	18,w	;volatile
  3670  0F61  39F0               	andlw	-16
  3671  0F62  3803               	iorlw	3
  3672  0F63  0092               	movwf	18	;volatile
  3673                           
  3674                           ;encoder.c: 39:     CCP2CAPbits.CTS = 0b000;
  3675  0F64  0193               	clrf	19	;volatile
  3676                           
  3677                           ;encoder.c: 40:     CCP2CONbits.EN = 1;
  3678  0F65  1792               	bsf	18,7	;volatile
  3679                           
  3680                           ;encoder.c: 43:     INTCONbits.GIE = 1;
  3681  0F66  178B               	bsf	11,7	;volatile
  3682                           
  3683                           ;encoder.c: 44:     INTCONbits.PEIE = 1;
  3684  0F67  170B               	bsf	11,6	;volatile
  3685                           
  3686                           ;encoder.c: 45:     PIR6bits.CCP1IF = 0;
  3687  0F68  002E               	movlb	14	; select bank14
  3688  0F69  1012               	bcf	18,0	;volatile
  3689                           
  3690                           ;encoder.c: 46:     PIE6bits.CCP1IE = 1;
  3691  0F6A  141C               	bsf	28,0	;volatile
  3692                           
  3693                           ;encoder.c: 47:     PIR6bits.CCP2IF = 0;
  3694  0F6B  1092               	bcf	18,1	;volatile
  3695                           
  3696                           ;encoder.c: 48:     PIE6bits.CCP2IE = 1;
  3697  0F6C  149C               	bsf	28,1	;volatile
  3698  0F6D  0008               	return
  3699  0F6E                     __end_of_encoder_init:	
  3700                           
  3701                           	psect	text7
  3702  0E4F                     __ptext7:	
  3703 ;; *************** function _display_init *****************
  3704 ;; Defined at:
  3705 ;;		line 37 in file "display.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;Total ram usage:        1 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    2
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		__system_init
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _display_init
  3735  0E4F                     _display_init:	
  3736                           
  3737                           ;display.c: 40:     segment = 0;
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _display_init: [wreg+status,2+status,0]
  3741  0E4F  0020               	movlb	0	; select bank0
  3742  0E50  01EE               	clrf	_segment	;volatile
  3743                           
  3744                           ;display.c: 43:     characters[0] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 |
      +                           0b00100000 | 0b10000000);
  3745  0E51  30BE               	movlw	190
  3746  0E52  00F4               	movwf	??_display_init
  3747  0E53  0874               	movf	??_display_init,w
  3748  0E54  00EA               	movwf	_characters
  3749                           
  3750                           ;display.c: 44:     characters[1] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 |
      +                           0b00100000 | 0b10000000);
  3751  0E55  30BE               	movlw	190
  3752  0E56  00F4               	movwf	??_display_init
  3753  0E57  0874               	movf	??_display_init,w
  3754  0E58  00EB               	movwf	_characters+1
  3755                           
  3756                           ;display.c: 45:     characters[2] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 |
      +                           0b00100000 | 0b10000000);
  3757  0E59  30BE               	movlw	190
  3758  0E5A  00F4               	movwf	??_display_init
  3759  0E5B  0874               	movf	??_display_init,w
  3760  0E5C  00EC               	movwf	_characters+2
  3761                           
  3762                           ;display.c: 46:     characters[3] = (0b00000100 | 0b00000010 | 0b00001000 | 0b00010000 |
      +                           0b00100000 | 0b10000000);
  3763  0E5D  30BE               	movlw	190
  3764  0E5E  00F4               	movwf	??_display_init
  3765  0E5F  0874               	movf	??_display_init,w
  3766  0E60  00ED               	movwf	_characters+3
  3767                           
  3768                           ;display.c: 49:     T2CLKCONbits.CS = 0b0001;
  3769  0E61  0025               	movlb	5	; select bank5
  3770  0E62  0810               	movf	16,w	;volatile
  3771  0E63  39F0               	andlw	-16
  3772  0E64  3801               	iorlw	1
  3773  0E65  0090               	movwf	16	;volatile
  3774                           
  3775                           ;display.c: 50:     T2CONbits.CKPS = 0b111;
  3776  0E66  3070               	movlw	112
  3777  0E67  048E               	iorwf	14,f	;volatile
  3778                           
  3779                           ;display.c: 51:     PR2 = 125;
  3780  0E68  307D               	movlw	125
  3781  0E69  008D               	movwf	13	;volatile
  3782                           
  3783                           ;display.c: 52:     T2CONbits.OUTPS = 0b0000;
  3784  0E6A  30F0               	movlw	-16
  3785  0E6B  058E               	andwf	14,f	;volatile
  3786                           
  3787                           ;display.c: 55:     INTCONbits.GIE = 1;
  3788  0E6C  178B               	bsf	11,7	;volatile
  3789                           
  3790                           ;display.c: 56:     INTCONbits.PEIE = 1;
  3791  0E6D  170B               	bsf	11,6	;volatile
  3792                           
  3793                           ;display.c: 57:     PIE4bits.TMR2IE = 1;
  3794  0E6E  002E               	movlb	14	; select bank14
  3795  0E6F  149A               	bsf	26,1	;volatile
  3796                           
  3797                           ;display.c: 60:     T2CONbits.ON = 1;
  3798  0E70  0025               	movlb	5	; select bank5
  3799  0E71  178E               	bsf	14,7	;volatile
  3800  0E72  0008               	return
  3801  0E73                     __end_of_display_init:	
  3802                           
  3803                           	psect	text8
  3804  0741                     __ptext8:	
  3805 ;; *************** function __handle_relays *****************
  3806 ;; Defined at:
  3807 ;;		line 130 in file "main.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3825 ;;Total ram usage:        1 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    2
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function __handle_relays
  3837  0741                     __handle_relays:	
  3838                           
  3839                           ;main.c: 132:     if(PORTAbits.RA3)
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in __handle_relays: [wreg]
  3843  0741  0020               	movlb	0	; select bank0
  3844  0742  1D8C               	btfss	12,3	;volatile
  3845  0743  2F6D               	goto	l78
  3846                           
  3847                           ;main.c: 133:     {;main.c: 136:         LATAbits.LATA0 = 1;
  3848  0744  1416               	bsf	22,0	;volatile
  3849                           
  3850                           ;main.c: 137:         if(PORTAbits.RA4)
  3851  0745  1E0C               	btfss	12,4	;volatile
  3852  0746  2F6A               	goto	l79
  3853                           
  3854                           ;main.c: 138:         {;main.c: 140:             if(PORTAbits.RA5 && (os.speed<30))
  3855  0747  1E8C               	btfss	12,5	;volatile
  3856  0748  2F58               	goto	l80
  3857  0749  0869               	movf	_os+17,w	;volatile
  3858  074A  3A80               	xorlw	128
  3859  074B  00F4               	movwf	??__handle_relays
  3860  074C  3080               	movlw	128
  3861  074D  0274               	subwf	??__handle_relays,w
  3862  074E  1D03               	skipz
  3863  074F  2F52               	goto	u1035
  3864  0750  301E               	movlw	30
  3865  0751  0268               	subwf	_os+16,w	;volatile
  3866  0752                     u1035:	
  3867  0752  1803               	skipnc
  3868  0753  2F58               	goto	l80
  3869                           
  3870                           ;main.c: 141:             {;main.c: 142:                 LATAbits.LATA1 = 0;
  3871  0754  0020               	movlb	0	; select bank0
  3872  0755  1096               	bcf	22,1	;volatile
  3873                           
  3874                           ;main.c: 143:                 LATAbits.LATA2 = 1;
  3875  0756  1516               	bsf	22,2	;volatile
  3876                           
  3877                           ;main.c: 144:             }
  3878  0757  0008               	return
  3879  0758                     l80:	
  3880                           ;main.c: 145:             else if((!PORTAbits.RA5) && (os.speed>-30))
  3881                           
  3882  0758  0020               	movlb	0	; select bank0
  3883  0759  1A8C               	btfsc	12,5	;volatile
  3884  075A  0008               	return
  3885  075B  0869               	movf	_os+17,w	;volatile
  3886  075C  3A80               	xorlw	128
  3887  075D  00F4               	movwf	??__handle_relays
  3888  075E  307F               	movlw	127
  3889  075F  0274               	subwf	??__handle_relays,w
  3890  0760  1D03               	skipz
  3891  0761  2F64               	goto	u1055
  3892  0762  30E3               	movlw	227
  3893  0763  0268               	subwf	_os+16,w	;volatile
  3894  0764                     u1055:	
  3895  0764  1C03               	skipc
  3896  0765  0008               	return
  3897                           
  3898                           ;main.c: 146:             {;main.c: 147:                 LATAbits.LATA2 = 0;
  3899  0766  0020               	movlb	0	; select bank0
  3900  0767  1116               	bcf	22,2	;volatile
  3901                           
  3902                           ;main.c: 148:                 LATAbits.LATA1 = 1;
  3903  0768  1496               	bsf	22,1	;volatile
  3904                           
  3905                           ;main.c: 150:         }
  3906                           
  3907                           ;main.c: 149:             }
  3908  0769  0008               	return
  3909  076A                     l79:	
  3910                           ;main.c: 151:         else
  3911                           
  3912                           
  3913                           ;main.c: 152:         {;main.c: 154:             LATAbits.LATA1 = 0;
  3914  076A  1096               	bcf	22,1	;volatile
  3915                           
  3916                           ;main.c: 155:             LATAbits.LATA2 = 0;
  3917  076B  1116               	bcf	22,2	;volatile
  3918                           
  3919                           ;main.c: 157:     }
  3920                           
  3921                           ;main.c: 156:         }
  3922  076C  0008               	return
  3923  076D                     l78:	
  3924                           ;main.c: 158:     else
  3925                           
  3926                           
  3927                           ;main.c: 159:     {;main.c: 162:         LATAbits.LATA0 = 0;
  3928  076D  1016               	bcf	22,0	;volatile
  3929                           
  3930                           ;main.c: 163:         if(PORTBbits.RB0 && (os.speed>-30))
  3931  076E  1C0D               	btfss	13,0	;volatile
  3932  076F  2F7F               	goto	l85
  3933  0770  0869               	movf	_os+17,w	;volatile
  3934  0771  3A80               	xorlw	128
  3935  0772  00F4               	movwf	??__handle_relays
  3936  0773  307F               	movlw	127
  3937  0774  0274               	subwf	??__handle_relays,w
  3938  0775  1D03               	skipz
  3939  0776  2F79               	goto	u1075
  3940  0777  30E3               	movlw	227
  3941  0778  0268               	subwf	_os+16,w	;volatile
  3942  0779                     u1075:	
  3943  0779  1C03               	skipc
  3944  077A  2F7F               	goto	l85
  3945                           
  3946                           ;main.c: 164:         {;main.c: 165:             LATAbits.LATA2 = 0;
  3947  077B  0020               	movlb	0	; select bank0
  3948  077C  1116               	bcf	22,2	;volatile
  3949                           
  3950                           ;main.c: 166:             LATAbits.LATA1 = 1;
  3951  077D  1496               	bsf	22,1	;volatile
  3952                           
  3953                           ;main.c: 167:         }
  3954  077E  0008               	return
  3955  077F                     l85:	
  3956                           ;main.c: 168:         else if(PORTBbits.RB3 && (os.speed<30))
  3957                           
  3958  077F  0020               	movlb	0	; select bank0
  3959  0780  1D8D               	btfss	13,3	;volatile
  3960  0781  2F91               	goto	l87
  3961  0782  0869               	movf	_os+17,w	;volatile
  3962  0783  3A80               	xorlw	128
  3963  0784  00F4               	movwf	??__handle_relays
  3964  0785  3080               	movlw	128
  3965  0786  0274               	subwf	??__handle_relays,w
  3966  0787  1D03               	skipz
  3967  0788  2F8B               	goto	u1095
  3968  0789  301E               	movlw	30
  3969  078A  0268               	subwf	_os+16,w	;volatile
  3970  078B                     u1095:	
  3971  078B  1803               	skipnc
  3972  078C  2F91               	goto	l87
  3973                           
  3974                           ;main.c: 169:         {;main.c: 170:             LATAbits.LATA1 = 0;
  3975  078D  0020               	movlb	0	; select bank0
  3976  078E  1096               	bcf	22,1	;volatile
  3977                           
  3978                           ;main.c: 171:             LATAbits.LATA2 = 1;
  3979  078F  1516               	bsf	22,2	;volatile
  3980                           
  3981                           ;main.c: 172:         }
  3982  0790  0008               	return
  3983  0791                     l87:	
  3984                           ;main.c: 173:         else
  3985                           
  3986                           
  3987                           ;main.c: 174:         {;main.c: 175:             LATAbits.LATA1 = 0;
  3988  0791  0020               	movlb	0	; select bank0
  3989  0792  1096               	bcf	22,1	;volatile
  3990                           
  3991                           ;main.c: 176:             LATAbits.LATA2 = 0;
  3992  0793  1116               	bcf	22,2	;volatile
  3993                           
  3994                           ;main.c: 177:         }
  3995  0794  0008               	return
  3996  0795                     __end_of__handle_relays:	
  3997                           ;main.c: 178:     }
  3998                           
  3999                           
  4000                           	psect	text9
  4001  04B9                     __ptext9:	
  4002 ;; *************** function __calculate_speed *****************
  4003 ;; Defined at:
  4004 ;;		line 181 in file "main.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  speed           4   52[BANK0 ] float 
  4009 ;;  time_differe    4   48[BANK0 ] unsigned long 
  4010 ;;  distance        4   44[BANK0 ] long 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;Total ram usage:       20 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    4
  4027 ;; This function calls:
  4028 ;;		___fldiv
  4029 ;;		___flmul
  4030 ;;		___fltol
  4031 ;;		___xxtofl
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function __calculate_speed
  4039  04B9                     __calculate_speed:	
  4040                           
  4041                           ;main.c: 183:     int32_t distance;;main.c: 184:     uint32_t time_difference;;main.c: 1
      +                          85:     float speed;;main.c: 187:     if((os.time_sum_last==0) || (os.time_sum==0))
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in __calculate_speed: [wreg+status,2+status,0+pclath+cstack]
  4045  04B9  0020               	movlb	0	; select bank0
  4046  04BA  0863               	movf	_os+11,w	;volatile
  4047  04BB  0462               	iorwf	_os+10,w	;volatile
  4048  04BC  0461               	iorwf	_os+9,w	;volatile
  4049  04BD  0460               	iorwf	_os+8,w	;volatile
  4050  04BE  1903               	skipnz
  4051  04BF  2CC6               	goto	l2284
  4052  04C0  0867               	movf	_os+15,w	;volatile
  4053  04C1  0466               	iorwf	_os+14,w	;volatile
  4054  04C2  0465               	iorwf	_os+13,w	;volatile
  4055  04C3  0464               	iorwf	_os+12,w	;volatile
  4056  04C4  1D03               	skipz
  4057  04C5  2CCE               	goto	l2286
  4058  04C6                     l2284:	
  4059                           
  4060                           ;main.c: 188:     {;main.c: 190:         time_difference = 67108864;
  4061  04C6  3004               	movlw	4
  4062  04C7  00D3               	movwf	__calculate_speed@time_difference+3
  4063  04C8  3000               	movlw	0
  4064  04C9  00D2               	movwf	__calculate_speed@time_difference+2
  4065  04CA  3000               	movlw	0
  4066  04CB  00D1               	movwf	__calculate_speed@time_difference+1
  4067  04CC  3000               	movlw	0
  4068  04CD  2CF4               	goto	L3
  4069  04CE                     l2286:	
  4070                           ;main.c: 192:     else
  4071                           
  4072                           ;main.c: 191:     }
  4073                           
  4074                           
  4075                           ;main.c: 193:     {;main.c: 195:         time_difference = os.time_sum - os.time_sum_las
      +                          t;
  4076  04CE  0864               	movf	_os+12,w	;volatile
  4077  04CF  00C4               	movwf	??__calculate_speed
  4078  04D0  0865               	movf	_os+13,w	;volatile
  4079  04D1  00C5               	movwf	??__calculate_speed+1
  4080  04D2  0866               	movf	_os+14,w	;volatile
  4081  04D3  00C6               	movwf	??__calculate_speed+2
  4082  04D4  0867               	movf	_os+15,w	;volatile
  4083  04D5  00C7               	movwf	??__calculate_speed+3
  4084  04D6  0960               	comf	_os+8,w	;volatile
  4085  04D7  00C8               	movwf	??__calculate_speed+4
  4086  04D8  0961               	comf	_os+9,w	;volatile
  4087  04D9  00C9               	movwf	??__calculate_speed+5
  4088  04DA  0962               	comf	_os+10,w	;volatile
  4089  04DB  00CA               	movwf	??__calculate_speed+6
  4090  04DC  0963               	comf	_os+11,w	;volatile
  4091  04DD  00CB               	movwf	??__calculate_speed+7
  4092  04DE  0AC8               	incf	??__calculate_speed+4,f
  4093  04DF  1903               	skipnz
  4094  04E0  0AC9               	incf	??__calculate_speed+5,f
  4095  04E1  1903               	skipnz
  4096  04E2  0ACA               	incf	??__calculate_speed+6,f
  4097  04E3  1903               	skipnz
  4098  04E4  0ACB               	incf	??__calculate_speed+7,f
  4099  04E5  0848               	movf	??__calculate_speed+4,w
  4100  04E6  07C4               	addwf	??__calculate_speed,f
  4101  04E7  0849               	movf	??__calculate_speed+5,w
  4102  04E8  3DC5               	addwfc	??__calculate_speed+1,f
  4103  04E9  084A               	movf	??__calculate_speed+6,w
  4104  04EA  3DC6               	addwfc	??__calculate_speed+2,f
  4105  04EB  084B               	movf	??__calculate_speed+7,w
  4106  04EC  3DC7               	addwfc	??__calculate_speed+3,f
  4107  04ED  0847               	movf	??__calculate_speed+3,w
  4108  04EE  00D3               	movwf	__calculate_speed@time_difference+3
  4109  04EF  0846               	movf	??__calculate_speed+2,w
  4110  04F0  00D2               	movwf	__calculate_speed@time_difference+2
  4111  04F1  0845               	movf	??__calculate_speed+1,w
  4112  04F2  00D1               	movwf	__calculate_speed@time_difference+1
  4113  04F3  0844               	movf	??__calculate_speed,w
  4114  04F4                     L3:	
  4115  04F4  00D0               	movwf	__calculate_speed@time_difference
  4116                           
  4117                           ;main.c: 198:     distance = (uint32_t) os.encoder_difference;
  4118                           
  4119                           ;main.c: 196:     }
  4120  04F5  085C               	movf	_os+4,w	;volatile
  4121  04F6  00CC               	movwf	__calculate_speed@distance
  4122  04F7  085D               	movf	_os+5,w	;volatile
  4123  04F8  00CD               	movwf	__calculate_speed@distance+1
  4124  04F9  0D89               	rlf	9,f
  4125  04FA  3B89               	subwfb	9,f
  4126  04FB  0989               	comf	9,f
  4127  04FC  00CE               	movwf	__calculate_speed@distance+2
  4128  04FD  00CF               	movwf	__calculate_speed@distance+3
  4129                           
  4130                           ;main.c: 200:     speed = (float) distance;
  4131  04FE  084F               	movf	__calculate_speed@distance+3,w
  4132  04FF  00F7               	movwf	___xxtofl@val+3
  4133  0500  084E               	movf	__calculate_speed@distance+2,w
  4134  0501  00F6               	movwf	___xxtofl@val+2
  4135  0502  084D               	movf	__calculate_speed@distance+1,w
  4136  0503  00F5               	movwf	___xxtofl@val+1
  4137  0504  084C               	movf	__calculate_speed@distance,w
  4138  0505  00F4               	movwf	___xxtofl@val
  4139  0506  3001               	movlw	1
  4140  0507  3185  2568  3184   	fcall	___xxtofl
  4141  050A  0877               	movf	?___xxtofl+3,w
  4142  050B  0020               	movlb	0	; select bank0
  4143  050C  00D7               	movwf	__calculate_speed@speed+3
  4144  050D  0876               	movf	?___xxtofl+2,w
  4145  050E  00D6               	movwf	__calculate_speed@speed+2
  4146  050F  0875               	movf	?___xxtofl+1,w
  4147  0510  00D5               	movwf	__calculate_speed@speed+1
  4148  0511  0874               	movf	?___xxtofl,w
  4149  0512  00D4               	movwf	__calculate_speed@speed
  4150                           
  4151                           ;main.c: 201:     speed /= time_difference;
  4152  0513  0853               	movf	__calculate_speed@time_difference+3,w
  4153  0514  00F7               	movwf	___xxtofl@val+3
  4154  0515  0852               	movf	__calculate_speed@time_difference+2,w
  4155  0516  00F6               	movwf	___xxtofl@val+2
  4156  0517  0851               	movf	__calculate_speed@time_difference+1,w
  4157  0518  00F5               	movwf	___xxtofl@val+1
  4158  0519  0850               	movf	__calculate_speed@time_difference,w
  4159  051A  00F4               	movwf	___xxtofl@val
  4160  051B  3000               	movlw	0
  4161  051C  3185  2568  3184   	fcall	___xxtofl
  4162  051F  0877               	movf	?___xxtofl+3,w
  4163  0520  0020               	movlb	0	; select bank0
  4164  0521  00AD               	movwf	___fldiv@a+3
  4165  0522  0876               	movf	?___xxtofl+2,w
  4166  0523  00AC               	movwf	___fldiv@a+2
  4167  0524  0875               	movf	?___xxtofl+1,w
  4168  0525  00AB               	movwf	___fldiv@a+1
  4169  0526  0874               	movf	?___xxtofl,w
  4170  0527  00AA               	movwf	___fldiv@a
  4171  0528  0857               	movf	__calculate_speed@speed+3,w
  4172  0529  00B1               	movwf	___fldiv@b+3
  4173  052A  0856               	movf	__calculate_speed@speed+2,w
  4174  052B  00B0               	movwf	___fldiv@b+2
  4175  052C  0855               	movf	__calculate_speed@speed+1,w
  4176  052D  00AF               	movwf	___fldiv@b+1
  4177  052E  0854               	movf	__calculate_speed@speed,w
  4178  052F  00AE               	movwf	___fldiv@b
  4179  0530  3182  226A  3184   	fcall	___fldiv
  4180  0533  0020               	movlb	0	; select bank0
  4181  0534  082D               	movf	?___fldiv+3,w
  4182  0535  00D7               	movwf	__calculate_speed@speed+3
  4183  0536  082C               	movf	?___fldiv+2,w
  4184  0537  00D6               	movwf	__calculate_speed@speed+2
  4185  0538  082B               	movf	?___fldiv+1,w
  4186  0539  00D5               	movwf	__calculate_speed@speed+1
  4187  053A  082A               	movf	?___fldiv,w
  4188  053B  00D4               	movwf	__calculate_speed@speed
  4189                           
  4190                           ;main.c: 205:     speed *= 60000000;
  4191  053C  304C               	movlw	76
  4192  053D  00A8               	movwf	___flmul@b+3
  4193  053E  3064               	movlw	100
  4194  053F  00A7               	movwf	___flmul@b+2
  4195  0540  30E1               	movlw	225
  4196  0541  00A6               	movwf	___flmul@b+1
  4197  0542  30C0               	movlw	192
  4198  0543  00A5               	movwf	___flmul@b
  4199  0544  0857               	movf	__calculate_speed@speed+3,w
  4200  0545  00AC               	movwf	___flmul@a+3
  4201  0546  0856               	movf	__calculate_speed@speed+2,w
  4202  0547  00AB               	movwf	___flmul@a+2
  4203  0548  0855               	movf	__calculate_speed@speed+1,w
  4204  0549  00AA               	movwf	___flmul@a+1
  4205  054A  0854               	movf	__calculate_speed@speed,w
  4206  054B  00A9               	movwf	___flmul@a
  4207  054C  3180  203E  3184   	fcall	___flmul
  4208  054F  0020               	movlb	0	; select bank0
  4209  0550  0828               	movf	?___flmul+3,w
  4210  0551  00D7               	movwf	__calculate_speed@speed+3
  4211  0552  0827               	movf	?___flmul+2,w
  4212  0553  00D6               	movwf	__calculate_speed@speed+2
  4213  0554  0826               	movf	?___flmul+1,w
  4214  0555  00D5               	movwf	__calculate_speed@speed+1
  4215  0556  0825               	movf	?___flmul,w
  4216  0557  00D4               	movwf	__calculate_speed@speed
  4217                           
  4218                           ;main.c: 206:     os.speed = (int16_t) speed;
  4219  0558  0857               	movf	__calculate_speed@speed+3,w
  4220  0559  00F7               	movwf	___fltol@f1+3
  4221  055A  0856               	movf	__calculate_speed@speed+2,w
  4222  055B  00F6               	movwf	___fltol@f1+2
  4223  055C  0855               	movf	__calculate_speed@speed+1,w
  4224  055D  00F5               	movwf	___fltol@f1+1
  4225  055E  0854               	movf	__calculate_speed@speed,w
  4226  055F  00F4               	movwf	___fltol@f1
  4227  0560  3185  25FE         	fcall	___fltol
  4228  0562  0875               	movf	?___fltol+1,w
  4229  0563  0020               	movlb	0	; select bank0
  4230  0564  00E9               	movwf	_os+17	;volatile
  4231  0565  0874               	movf	?___fltol,w
  4232  0566  00E8               	movwf	_os+16	;volatile
  4233  0567  0008               	return
  4234  0568                     __end_of__calculate_speed:	
  4235                           
  4236                           	psect	text10
  4237  0568                     __ptext10:	
  4238 ;; *************** function ___xxtofl *****************
  4239 ;; Defined at:
  4240 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  sign            1    wreg     unsigned char 
  4243 ;;  val             4    4[COMMON] long 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  sign            1    4[BANK0 ] unsigned char 
  4246 ;;  arg             4    6[BANK0 ] unsigned long 
  4247 ;;  exp             1    5[BANK0 ] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  4    4[COMMON] unsigned char 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;Total ram usage:       14 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    2
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		__calculate_speed
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function ___xxtofl
  4273  0568                     ___xxtofl:	
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4277                           ;___xxtofl@sign stored from wreg
  4278  0568  0020               	movlb	0	; select bank0
  4279  0569  00A4               	movwf	___xxtofl@sign
  4280  056A  0824               	movf	___xxtofl@sign,w
  4281  056B  1D03               	btfss	3,2
  4282  056C  1FF7               	btfss	___xxtofl@val+3,7
  4283  056D  2D7E               	goto	l1944
  4284  056E  0974               	comf	___xxtofl@val,w
  4285  056F  00A6               	movwf	___xxtofl@arg
  4286  0570  0975               	comf	___xxtofl@val+1,w
  4287  0571  00A7               	movwf	___xxtofl@arg+1
  4288  0572  0976               	comf	___xxtofl@val+2,w
  4289  0573  00A8               	movwf	___xxtofl@arg+2
  4290  0574  0977               	comf	___xxtofl@val+3,w
  4291  0575  00A9               	movwf	___xxtofl@arg+3
  4292  0576  0AA6               	incf	___xxtofl@arg,f
  4293  0577  1903               	skipnz
  4294  0578  0AA7               	incf	___xxtofl@arg+1,f
  4295  0579  1903               	skipnz
  4296  057A  0AA8               	incf	___xxtofl@arg+2,f
  4297  057B  1903               	skipnz
  4298  057C  0AA9               	incf	___xxtofl@arg+3,f
  4299  057D  2D86               	goto	l729
  4300  057E                     l1944:	
  4301  057E  0877               	movf	___xxtofl@val+3,w
  4302  057F  00A9               	movwf	___xxtofl@arg+3
  4303  0580  0876               	movf	___xxtofl@val+2,w
  4304  0581  00A8               	movwf	___xxtofl@arg+2
  4305  0582  0875               	movf	___xxtofl@val+1,w
  4306  0583  00A7               	movwf	___xxtofl@arg+1
  4307  0584  0874               	movf	___xxtofl@val,w
  4308  0585  00A6               	movwf	___xxtofl@arg
  4309  0586                     l729:	
  4310  0586  0877               	movf	___xxtofl@val+3,w
  4311  0587  0476               	iorwf	___xxtofl@val+2,w
  4312  0588  0475               	iorwf	___xxtofl@val+1,w
  4313  0589  0474               	iorwf	___xxtofl@val,w
  4314  058A  1D03               	skipz
  4315  058B  2D95               	goto	l1950
  4316  058C  3000               	movlw	0
  4317  058D  00F7               	movwf	?___xxtofl+3
  4318  058E  3000               	movlw	0
  4319  058F  00F6               	movwf	?___xxtofl+2
  4320  0590  3000               	movlw	0
  4321  0591  00F5               	movwf	?___xxtofl+1
  4322  0592  3000               	movlw	0
  4323  0593  00F4               	movwf	?___xxtofl
  4324  0594  0008               	return
  4325  0595                     l1950:	
  4326  0595  3096               	movlw	150
  4327  0596  00A0               	movwf	??___xxtofl
  4328  0597  0820               	movf	??___xxtofl,w
  4329  0598  00A5               	movwf	___xxtofl@exp
  4330  0599                     l1954:	
  4331  0599  30FE               	movlw	254
  4332  059A  0529               	andwf	___xxtofl@arg+3,w
  4333  059B  1903               	btfsc	3,2
  4334  059C  2DBC               	goto	l735
  4335  059D  3001               	movlw	1
  4336  059E  00A0               	movwf	??___xxtofl
  4337  059F  0820               	movf	??___xxtofl,w
  4338  05A0  07A5               	addwf	___xxtofl@exp,f
  4339  05A1  3001               	movlw	1
  4340  05A2                     u2295:	
  4341  05A2  36A9               	lsrf	___xxtofl@arg+3,f
  4342  05A3  0CA8               	rrf	___xxtofl@arg+2,f
  4343  05A4  0CA7               	rrf	___xxtofl@arg+1,f
  4344  05A5  0CA6               	rrf	___xxtofl@arg,f
  4345  05A6  0B89               	decfsz	9,f
  4346  05A7  2DA2               	goto	u2295
  4347  05A8  2D99               	goto	l1954
  4348  05A9                     l1956:	
  4349  05A9  3001               	movlw	1
  4350  05AA  00A0               	movwf	??___xxtofl
  4351  05AB  0820               	movf	??___xxtofl,w
  4352  05AC  07A5               	addwf	___xxtofl@exp,f
  4353  05AD  3001               	movlw	1
  4354  05AE  07A6               	addwf	___xxtofl@arg,f
  4355  05AF  3000               	movlw	0
  4356  05B0  3DA7               	addwfc	___xxtofl@arg+1,f
  4357  05B1  3000               	movlw	0
  4358  05B2  3DA8               	addwfc	___xxtofl@arg+2,f
  4359  05B3  3000               	movlw	0
  4360  05B4  3DA9               	addwfc	___xxtofl@arg+3,f
  4361  05B5  3001               	movlw	1
  4362  05B6                     u2315:	
  4363  05B6  36A9               	lsrf	___xxtofl@arg+3,f
  4364  05B7  0CA8               	rrf	___xxtofl@arg+2,f
  4365  05B8  0CA7               	rrf	___xxtofl@arg+1,f
  4366  05B9  0CA6               	rrf	___xxtofl@arg,f
  4367  05BA  0B89               	decfsz	9,f
  4368  05BB  2DB6               	goto	u2315
  4369  05BC                     l735:	
  4370  05BC  30FF               	movlw	255
  4371  05BD  0529               	andwf	___xxtofl@arg+3,w
  4372  05BE  1903               	btfsc	3,2
  4373  05BF  2DCA               	goto	l1964
  4374  05C0  2DA9               	goto	l1956
  4375  05C1                     l1962:	
  4376  05C1  3001               	movlw	1
  4377  05C2  02A5               	subwf	___xxtofl@exp,f
  4378  05C3  3001               	movlw	1
  4379  05C4                     u2335:	
  4380  05C4  35A6               	lslf	___xxtofl@arg,f
  4381  05C5  0DA7               	rlf	___xxtofl@arg+1,f
  4382  05C6  0DA8               	rlf	___xxtofl@arg+2,f
  4383  05C7  0DA9               	rlf	___xxtofl@arg+3,f
  4384  05C8  0B89               	decfsz	9,f
  4385  05C9  2DC4               	goto	u2335
  4386  05CA                     l1964:	
  4387  05CA  1BA8               	btfsc	___xxtofl@arg+2,7
  4388  05CB  2DD0               	goto	l742
  4389  05CC  3002               	movlw	2
  4390  05CD  0225               	subwf	___xxtofl@exp,w
  4391  05CE  1803               	skipnc
  4392  05CF  2DC1               	goto	l1962
  4393  05D0                     l742:	
  4394  05D0  1825               	btfsc	___xxtofl@exp,0
  4395  05D1  2DDA               	goto	l743
  4396  05D2  30FF               	movlw	255
  4397  05D3  05A6               	andwf	___xxtofl@arg,f
  4398  05D4  30FF               	movlw	255
  4399  05D5  05A7               	andwf	___xxtofl@arg+1,f
  4400  05D6  307F               	movlw	127
  4401  05D7  05A8               	andwf	___xxtofl@arg+2,f
  4402  05D8  30FF               	movlw	255
  4403  05D9  05A9               	andwf	___xxtofl@arg+3,f
  4404  05DA                     l743:	
  4405  05DA  1003               	clrc
  4406  05DB  0CA5               	rrf	___xxtofl@exp,f
  4407  05DC  0825               	movf	___xxtofl@exp,w
  4408  05DD  00A0               	movwf	??___xxtofl
  4409  05DE  01A1               	clrf	??___xxtofl+1
  4410  05DF  01A2               	clrf	??___xxtofl+2
  4411  05E0  01A3               	clrf	??___xxtofl+3
  4412  05E1  3018               	movlw	24
  4413  05E2                     u2375:	
  4414  05E2  35A0               	lslf	??___xxtofl,f
  4415  05E3  0DA1               	rlf	??___xxtofl+1,f
  4416  05E4  0DA2               	rlf	??___xxtofl+2,f
  4417  05E5  0DA3               	rlf	??___xxtofl+3,f
  4418  05E6  0B89               	decfsz	9,f
  4419  05E7  2DE2               	goto	u2375
  4420  05E8  0820               	movf	??___xxtofl,w
  4421  05E9  04A6               	iorwf	___xxtofl@arg,f
  4422  05EA  0821               	movf	??___xxtofl+1,w
  4423  05EB  04A7               	iorwf	___xxtofl@arg+1,f
  4424  05EC  0822               	movf	??___xxtofl+2,w
  4425  05ED  04A8               	iorwf	___xxtofl@arg+2,f
  4426  05EE  0823               	movf	??___xxtofl+3,w
  4427  05EF  04A9               	iorwf	___xxtofl@arg+3,f
  4428  05F0  0824               	movf	___xxtofl@sign,w
  4429  05F1  1D03               	btfss	3,2
  4430  05F2  1FF7               	btfss	___xxtofl@val+3,7
  4431  05F3  2DF5               	goto	l1978
  4432  05F4  17A9               	bsf	___xxtofl@arg+3,7
  4433  05F5                     l1978:	
  4434  05F5  0829               	movf	___xxtofl@arg+3,w
  4435  05F6  00F7               	movwf	?___xxtofl+3
  4436  05F7  0828               	movf	___xxtofl@arg+2,w
  4437  05F8  00F6               	movwf	?___xxtofl+2
  4438  05F9  0827               	movf	___xxtofl@arg+1,w
  4439  05FA  00F5               	movwf	?___xxtofl+1
  4440  05FB  0826               	movf	___xxtofl@arg,w
  4441  05FC  00F4               	movwf	?___xxtofl
  4442  05FD  0008               	return
  4443  05FE                     __end_of___xxtofl:	
  4444                           
  4445                           	psect	text11
  4446  05FE                     __ptext11:	
  4447 ;; *************** function ___fltol *****************
  4448 ;; Defined at:
  4449 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  f1              4    4[COMMON] unsigned char 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  exp1            1    6[BANK0 ] unsigned char 
  4454 ;;  sign1           1    5[BANK0 ] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  4    4[COMMON] long 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Totals:         4       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;Total ram usage:       11 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    2
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		__calculate_speed
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function ___fltol
  4480  05FE                     ___fltol:	
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4484  05FE  0874               	movf	___fltol@f1,w
  4485  05FF  0020               	movlb	0	; select bank0
  4486  0600  00A0               	movwf	??___fltol
  4487  0601  0875               	movf	___fltol@f1+1,w
  4488  0602  00A1               	movwf	??___fltol+1
  4489  0603  0876               	movf	___fltol@f1+2,w
  4490  0604  00A2               	movwf	??___fltol+2
  4491  0605  0877               	movf	___fltol@f1+3,w
  4492  0606  00A3               	movwf	??___fltol+3
  4493  0607  1003               	clrc
  4494  0608  0D22               	rlf	??___fltol+2,w
  4495  0609  0D23               	rlf	??___fltol+3,w
  4496  060A  00A4               	movwf	??___fltol+4
  4497  060B  0824               	movf	??___fltol+4,w
  4498  060C  00A6               	movwf	___fltol@exp1
  4499  060D  0826               	movf	___fltol@exp1,w
  4500  060E  1D03               	btfss	3,2
  4501  060F  2E19               	goto	l2228
  4502  0610  3000               	movlw	0
  4503  0611  00F7               	movwf	?___fltol+3
  4504  0612  3000               	movlw	0
  4505  0613  00F6               	movwf	?___fltol+2
  4506  0614  3000               	movlw	0
  4507  0615  00F5               	movwf	?___fltol+1
  4508  0616  3000               	movlw	0
  4509  0617  00F4               	movwf	?___fltol
  4510  0618  0008               	return
  4511  0619                     l2228:	
  4512  0619  0874               	movf	___fltol@f1,w
  4513  061A  00A0               	movwf	??___fltol
  4514  061B  0875               	movf	___fltol@f1+1,w
  4515  061C  00A1               	movwf	??___fltol+1
  4516  061D  0876               	movf	___fltol@f1+2,w
  4517  061E  00A2               	movwf	??___fltol+2
  4518  061F  0877               	movf	___fltol@f1+3,w
  4519  0620  00A3               	movwf	??___fltol+3
  4520  0621  301F               	movlw	31
  4521  0622                     u2765:	
  4522  0622  36A3               	lsrf	??___fltol+3,f
  4523  0623  0CA2               	rrf	??___fltol+2,f
  4524  0624  0CA1               	rrf	??___fltol+1,f
  4525  0625  0CA0               	rrf	??___fltol,f
  4526  0626  0B89               	decfsz	9,f
  4527  0627  2E22               	goto	u2765
  4528  0628  0820               	movf	??___fltol,w
  4529  0629  00A4               	movwf	??___fltol+4
  4530  062A  0824               	movf	??___fltol+4,w
  4531  062B  00A5               	movwf	___fltol@sign1
  4532  062C  17F6               	bsf	___fltol@f1+2,7
  4533  062D  30FF               	movlw	255
  4534  062E  05F4               	andwf	___fltol@f1,f
  4535  062F  30FF               	movlw	255
  4536  0630  05F5               	andwf	___fltol@f1+1,f
  4537  0631  30FF               	movlw	255
  4538  0632  05F6               	andwf	___fltol@f1+2,f
  4539  0633  3000               	movlw	0
  4540  0634  05F7               	andwf	___fltol@f1+3,f
  4541  0635  3096               	movlw	150
  4542  0636  02A6               	subwf	___fltol@exp1,f
  4543  0637  1FA6               	btfss	___fltol@exp1,7
  4544  0638  2E55               	goto	l2246
  4545  0639  0826               	movf	___fltol@exp1,w
  4546  063A  3A80               	xorlw	128
  4547  063B  3E97               	addlw	151
  4548  063C  1803               	skipnc
  4549  063D  2E47               	goto	l2244
  4550  063E  3000               	movlw	0
  4551  063F  00F7               	movwf	?___fltol+3
  4552  0640  3000               	movlw	0
  4553  0641  00F6               	movwf	?___fltol+2
  4554  0642  3000               	movlw	0
  4555  0643  00F5               	movwf	?___fltol+1
  4556  0644  3000               	movlw	0
  4557  0645  00F4               	movwf	?___fltol
  4558  0646  0008               	return
  4559  0647                     l2244:	
  4560  0647  3001               	movlw	1
  4561  0648                     u2795:	
  4562  0648  36F7               	lsrf	___fltol@f1+3,f
  4563  0649  0CF6               	rrf	___fltol@f1+2,f
  4564  064A  0CF5               	rrf	___fltol@f1+1,f
  4565  064B  0CF4               	rrf	___fltol@f1,f
  4566  064C  0B89               	decfsz	9,f
  4567  064D  2E48               	goto	u2795
  4568  064E  3001               	movlw	1
  4569  064F  00A0               	movwf	??___fltol
  4570  0650  0820               	movf	??___fltol,w
  4571  0651  07A6               	addwf	___fltol@exp1,f
  4572  0652  1903               	btfsc	3,2
  4573  0653  2E6E               	goto	l2254
  4574  0654  2E47               	goto	l2244
  4575  0655                     l2246:	
  4576  0655  3020               	movlw	32
  4577  0656  0226               	subwf	___fltol@exp1,w
  4578  0657  1C03               	skipc
  4579  0658  2E6B               	goto	l514
  4580  0659  3000               	movlw	0
  4581  065A  00F7               	movwf	?___fltol+3
  4582  065B  3000               	movlw	0
  4583  065C  00F6               	movwf	?___fltol+2
  4584  065D  3000               	movlw	0
  4585  065E  00F5               	movwf	?___fltol+1
  4586  065F  3000               	movlw	0
  4587  0660  00F4               	movwf	?___fltol
  4588  0661  0008               	return
  4589  0662                     l2252:	
  4590  0662  3001               	movlw	1
  4591  0663                     u2825:	
  4592  0663  35F4               	lslf	___fltol@f1,f
  4593  0664  0DF5               	rlf	___fltol@f1+1,f
  4594  0665  0DF6               	rlf	___fltol@f1+2,f
  4595  0666  0DF7               	rlf	___fltol@f1+3,f
  4596  0667  0B89               	decfsz	9,f
  4597  0668  2E63               	goto	u2825
  4598  0669  3001               	movlw	1
  4599  066A  02A6               	subwf	___fltol@exp1,f
  4600  066B                     l514:	
  4601  066B  0826               	movf	___fltol@exp1,w
  4602  066C  1D03               	btfss	3,2
  4603  066D  2E62               	goto	l2252
  4604  066E                     l2254:	
  4605  066E  0825               	movf	___fltol@sign1,w
  4606  066F  1903               	btfsc	3,2
  4607  0670  0008               	return
  4608  0671  09F4               	comf	___fltol@f1,f
  4609  0672  09F5               	comf	___fltol@f1+1,f
  4610  0673  09F6               	comf	___fltol@f1+2,f
  4611  0674  09F7               	comf	___fltol@f1+3,f
  4612  0675  0AF4               	incf	___fltol@f1,f
  4613  0676  1903               	skipnz
  4614  0677  0AF5               	incf	___fltol@f1+1,f
  4615  0678  1903               	skipnz
  4616  0679  0AF6               	incf	___fltol@f1+2,f
  4617  067A  1903               	skipnz
  4618  067B  0AF7               	incf	___fltol@f1+3,f
  4619  067C  0008               	return
  4620  067D                     __end_of___fltol:	
  4621                           
  4622                           	psect	text12
  4623  003E                     __ptext12:	
  4624 ;; *************** function ___flmul *****************
  4625 ;; Defined at:
  4626 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  b               4    5[BANK0 ] long 
  4629 ;;  a               4    9[BANK0 ] long 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  prod            4   25[BANK0 ] struct .
  4632 ;;  grs             4   19[BANK0 ] unsigned long 
  4633 ;;  temp            2   29[BANK0 ] struct .
  4634 ;;  bexp            1   24[BANK0 ] unsigned char 
  4635 ;;  aexp            1   23[BANK0 ] unsigned char 
  4636 ;;  sign            1   18[BANK0 ] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  4    5[BANK0 ] unsigned char 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4646 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;Total ram usage:       26 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    3
  4653 ;; This function calls:
  4654 ;;		__Umul8_16
  4655 ;; This function is called by:
  4656 ;;		__calculate_speed
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function ___flmul
  4662  003E                     ___flmul:	
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4666  003E  0020               	movlb	0	; select bank0
  4667  003F  0828               	movf	___flmul@b+3,w
  4668  0040  3980               	andlw	128
  4669  0041  00AD               	movwf	??___flmul
  4670  0042  082D               	movf	??___flmul,w
  4671  0043  00B2               	movwf	___flmul@sign
  4672  0044  3528               	lslf	___flmul@b+3,w
  4673  0045  00AD               	movwf	??___flmul
  4674  0046  082D               	movf	??___flmul,w
  4675  0047  00B8               	movwf	___flmul@bexp
  4676  0048  1BA7               	btfsc	___flmul@b+2,7
  4677  0049  1438               	bsf	___flmul@bexp,0
  4678  004A  0838               	movf	___flmul@bexp,w
  4679  004B  1903               	btfsc	3,2
  4680  004C  285A               	goto	l1814
  4681  004D  0A38               	incf	___flmul@bexp,w
  4682  004E  1D03               	btfss	3,2
  4683  004F  2858               	goto	l1812
  4684  0050  3000               	movlw	0
  4685  0051  00A8               	movwf	___flmul@b+3
  4686  0052  3000               	movlw	0
  4687  0053  00A7               	movwf	___flmul@b+2
  4688  0054  3000               	movlw	0
  4689  0055  00A6               	movwf	___flmul@b+1
  4690  0056  3000               	movlw	0
  4691  0057  00A5               	movwf	___flmul@b
  4692  0058                     l1812:	
  4693  0058  17A7               	bsf	___flmul@b+2,7
  4694  0059  2862               	goto	l1816
  4695  005A                     l1814:	
  4696  005A  3000               	movlw	0
  4697  005B  00A8               	movwf	___flmul@b+3
  4698  005C  3000               	movlw	0
  4699  005D  00A7               	movwf	___flmul@b+2
  4700  005E  3000               	movlw	0
  4701  005F  00A6               	movwf	___flmul@b+1
  4702  0060  3000               	movlw	0
  4703  0061  00A5               	movwf	___flmul@b
  4704  0062                     l1816:	
  4705  0062  082C               	movf	___flmul@a+3,w
  4706  0063  3980               	andlw	128
  4707  0064  00AD               	movwf	??___flmul
  4708  0065  082D               	movf	??___flmul,w
  4709  0066  06B2               	xorwf	___flmul@sign,f
  4710  0067  352C               	lslf	___flmul@a+3,w
  4711  0068  00AD               	movwf	??___flmul
  4712  0069  082D               	movf	??___flmul,w
  4713  006A  00B7               	movwf	___flmul@aexp
  4714  006B  1BAB               	btfsc	___flmul@a+2,7
  4715  006C  1437               	bsf	___flmul@aexp,0
  4716  006D  0837               	movf	___flmul@aexp,w
  4717  006E  1903               	btfsc	3,2
  4718  006F  287D               	goto	l1832
  4719  0070  0A37               	incf	___flmul@aexp,w
  4720  0071  1D03               	btfss	3,2
  4721  0072  287B               	goto	l1830
  4722  0073  3000               	movlw	0
  4723  0074  00AC               	movwf	___flmul@a+3
  4724  0075  3000               	movlw	0
  4725  0076  00AB               	movwf	___flmul@a+2
  4726  0077  3000               	movlw	0
  4727  0078  00AA               	movwf	___flmul@a+1
  4728  0079  3000               	movlw	0
  4729  007A  00A9               	movwf	___flmul@a
  4730  007B                     l1830:	
  4731  007B  17AB               	bsf	___flmul@a+2,7
  4732  007C  2885               	goto	l1834
  4733  007D                     l1832:	
  4734  007D  3000               	movlw	0
  4735  007E  00AC               	movwf	___flmul@a+3
  4736  007F  3000               	movlw	0
  4737  0080  00AB               	movwf	___flmul@a+2
  4738  0081  3000               	movlw	0
  4739  0082  00AA               	movwf	___flmul@a+1
  4740  0083  3000               	movlw	0
  4741  0084  00A9               	movwf	___flmul@a
  4742  0085                     l1834:	
  4743  0085  0837               	movf	___flmul@aexp,w
  4744  0086  1D03               	btfss	3,2
  4745  0087  0838               	movf	___flmul@bexp,w
  4746  0088  1D03               	btfss	3,2
  4747  0089  2893               	goto	l1842
  4748  008A  3000               	movlw	0
  4749  008B  00A8               	movwf	?___flmul+3
  4750  008C  3000               	movlw	0
  4751  008D  00A7               	movwf	?___flmul+2
  4752  008E  3000               	movlw	0
  4753  008F  00A6               	movwf	?___flmul+1
  4754  0090  3000               	movlw	0
  4755  0091  00A5               	movwf	?___flmul
  4756  0092  0008               	return
  4757  0093                     l1842:	
  4758  0093  0825               	movf	___flmul@b,w
  4759  0094  00AD               	movwf	??___flmul
  4760  0095  082D               	movf	??___flmul,w
  4761  0096  00F4               	movwf	__Umul8_16@multiplicand
  4762  0097  082B               	movf	___flmul@a+2,w
  4763  0098  318E  262F  3180   	fcall	__Umul8_16
  4764  009B  0875               	movf	?__Umul8_16+1,w
  4765  009C  0020               	movlb	0	; select bank0
  4766  009D  00BE               	movwf	___flmul@temp+1
  4767  009E  0874               	movf	?__Umul8_16,w
  4768  009F  00BD               	movwf	___flmul@temp
  4769  00A0  083D               	movf	___flmul@temp,w
  4770  00A1  00AD               	movwf	??___flmul
  4771  00A2  01AE               	clrf	??___flmul+1
  4772  00A3  01AF               	clrf	??___flmul+2
  4773  00A4  01B0               	clrf	??___flmul+3
  4774  00A5  0830               	movf	??___flmul+3,w
  4775  00A6  00B6               	movwf	___flmul@grs+3
  4776  00A7  082F               	movf	??___flmul+2,w
  4777  00A8  00B5               	movwf	___flmul@grs+2
  4778  00A9  082E               	movf	??___flmul+1,w
  4779  00AA  00B4               	movwf	___flmul@grs+1
  4780  00AB  082D               	movf	??___flmul,w
  4781  00AC  00B3               	movwf	___flmul@grs
  4782  00AD  083E               	movf	___flmul@temp+1,w
  4783  00AE  00AD               	movwf	??___flmul
  4784  00AF  01AE               	clrf	??___flmul+1
  4785  00B0  01AF               	clrf	??___flmul+2
  4786  00B1  01B0               	clrf	??___flmul+3
  4787  00B2  0830               	movf	??___flmul+3,w
  4788  00B3  00BC               	movwf	___flmul@prod+3
  4789  00B4  082F               	movf	??___flmul+2,w
  4790  00B5  00BB               	movwf	___flmul@prod+2
  4791  00B6  082E               	movf	??___flmul+1,w
  4792  00B7  00BA               	movwf	___flmul@prod+1
  4793  00B8  082D               	movf	??___flmul,w
  4794  00B9  00B9               	movwf	___flmul@prod
  4795  00BA  0826               	movf	___flmul@b+1,w
  4796  00BB  00AD               	movwf	??___flmul
  4797  00BC  082D               	movf	??___flmul,w
  4798  00BD  00F4               	movwf	__Umul8_16@multiplicand
  4799  00BE  082A               	movf	___flmul@a+1,w
  4800  00BF  318E  262F  3180   	fcall	__Umul8_16
  4801  00C2  0875               	movf	?__Umul8_16+1,w
  4802  00C3  0020               	movlb	0	; select bank0
  4803  00C4  00BE               	movwf	___flmul@temp+1
  4804  00C5  0874               	movf	?__Umul8_16,w
  4805  00C6  00BD               	movwf	___flmul@temp
  4806  00C7  083D               	movf	___flmul@temp,w
  4807  00C8  00AD               	movwf	??___flmul
  4808  00C9  01AE               	clrf	??___flmul+1
  4809  00CA  01AF               	clrf	??___flmul+2
  4810  00CB  01B0               	clrf	??___flmul+3
  4811  00CC  082D               	movf	??___flmul,w
  4812  00CD  07B3               	addwf	___flmul@grs,f
  4813  00CE  082E               	movf	??___flmul+1,w
  4814  00CF  3DB4               	addwfc	___flmul@grs+1,f
  4815  00D0  082F               	movf	??___flmul+2,w
  4816  00D1  3DB5               	addwfc	___flmul@grs+2,f
  4817  00D2  0830               	movf	??___flmul+3,w
  4818  00D3  3DB6               	addwfc	___flmul@grs+3,f
  4819  00D4  083E               	movf	___flmul@temp+1,w
  4820  00D5  00AD               	movwf	??___flmul
  4821  00D6  01AE               	clrf	??___flmul+1
  4822  00D7  01AF               	clrf	??___flmul+2
  4823  00D8  01B0               	clrf	??___flmul+3
  4824  00D9  082D               	movf	??___flmul,w
  4825  00DA  07B9               	addwf	___flmul@prod,f
  4826  00DB  082E               	movf	??___flmul+1,w
  4827  00DC  3DBA               	addwfc	___flmul@prod+1,f
  4828  00DD  082F               	movf	??___flmul+2,w
  4829  00DE  3DBB               	addwfc	___flmul@prod+2,f
  4830  00DF  0830               	movf	??___flmul+3,w
  4831  00E0  3DBC               	addwfc	___flmul@prod+3,f
  4832  00E1  0827               	movf	___flmul@b+2,w
  4833  00E2  00AD               	movwf	??___flmul
  4834  00E3  082D               	movf	??___flmul,w
  4835  00E4  00F4               	movwf	__Umul8_16@multiplicand
  4836  00E5  0829               	movf	___flmul@a,w
  4837  00E6  318E  262F  3180   	fcall	__Umul8_16
  4838  00E9  0875               	movf	?__Umul8_16+1,w
  4839  00EA  0020               	movlb	0	; select bank0
  4840  00EB  00BE               	movwf	___flmul@temp+1
  4841  00EC  0874               	movf	?__Umul8_16,w
  4842  00ED  00BD               	movwf	___flmul@temp
  4843  00EE  083D               	movf	___flmul@temp,w
  4844  00EF  00AD               	movwf	??___flmul
  4845  00F0  01AE               	clrf	??___flmul+1
  4846  00F1  01AF               	clrf	??___flmul+2
  4847  00F2  01B0               	clrf	??___flmul+3
  4848  00F3  082D               	movf	??___flmul,w
  4849  00F4  07B3               	addwf	___flmul@grs,f
  4850  00F5  082E               	movf	??___flmul+1,w
  4851  00F6  3DB4               	addwfc	___flmul@grs+1,f
  4852  00F7  082F               	movf	??___flmul+2,w
  4853  00F8  3DB5               	addwfc	___flmul@grs+2,f
  4854  00F9  0830               	movf	??___flmul+3,w
  4855  00FA  3DB6               	addwfc	___flmul@grs+3,f
  4856  00FB  083E               	movf	___flmul@temp+1,w
  4857  00FC  00AD               	movwf	??___flmul
  4858  00FD  01AE               	clrf	??___flmul+1
  4859  00FE  01AF               	clrf	??___flmul+2
  4860  00FF  01B0               	clrf	??___flmul+3
  4861  0100  082D               	movf	??___flmul,w
  4862  0101  07B9               	addwf	___flmul@prod,f
  4863  0102  082E               	movf	??___flmul+1,w
  4864  0103  3DBA               	addwfc	___flmul@prod+1,f
  4865  0104  082F               	movf	??___flmul+2,w
  4866  0105  3DBB               	addwfc	___flmul@prod+2,f
  4867  0106  0830               	movf	??___flmul+3,w
  4868  0107  3DBC               	addwfc	___flmul@prod+3,f
  4869  0108  3008               	movlw	8
  4870  0109                     u2085:	
  4871  0109  35B3               	lslf	___flmul@grs,f
  4872  010A  0DB4               	rlf	___flmul@grs+1,f
  4873  010B  0DB5               	rlf	___flmul@grs+2,f
  4874  010C  0DB6               	rlf	___flmul@grs+3,f
  4875  010D  0B89               	decfsz	9,f
  4876  010E  2909               	goto	u2085
  4877  010F  0826               	movf	___flmul@b+1,w
  4878  0110  00AD               	movwf	??___flmul
  4879  0111  082D               	movf	??___flmul,w
  4880  0112  00F4               	movwf	__Umul8_16@multiplicand
  4881  0113  0829               	movf	___flmul@a,w
  4882  0114  318E  262F  3180   	fcall	__Umul8_16
  4883  0117  0875               	movf	?__Umul8_16+1,w
  4884  0118  0020               	movlb	0	; select bank0
  4885  0119  00BE               	movwf	___flmul@temp+1
  4886  011A  0874               	movf	?__Umul8_16,w
  4887  011B  00BD               	movwf	___flmul@temp
  4888  011C  083D               	movf	___flmul@temp,w
  4889  011D  07B3               	addwf	___flmul@grs,f
  4890  011E  083E               	movf	___flmul@temp+1,w
  4891  011F  3DB4               	addwfc	___flmul@grs+1,f
  4892  0120  3000               	movlw	0
  4893  0121  3DB5               	addwfc	___flmul@grs+2,f
  4894  0122  3DB6               	addwfc	___flmul@grs+3,f
  4895  0123  0825               	movf	___flmul@b,w
  4896  0124  00AD               	movwf	??___flmul
  4897  0125  082D               	movf	??___flmul,w
  4898  0126  00F4               	movwf	__Umul8_16@multiplicand
  4899  0127  082A               	movf	___flmul@a+1,w
  4900  0128  318E  262F  3180   	fcall	__Umul8_16
  4901  012B  0875               	movf	?__Umul8_16+1,w
  4902  012C  0020               	movlb	0	; select bank0
  4903  012D  00BE               	movwf	___flmul@temp+1
  4904  012E  0874               	movf	?__Umul8_16,w
  4905  012F  00BD               	movwf	___flmul@temp
  4906  0130  083D               	movf	___flmul@temp,w
  4907  0131  07B3               	addwf	___flmul@grs,f
  4908  0132  083E               	movf	___flmul@temp+1,w
  4909  0133  3DB4               	addwfc	___flmul@grs+1,f
  4910  0134  3000               	movlw	0
  4911  0135  3DB5               	addwfc	___flmul@grs+2,f
  4912  0136  3DB6               	addwfc	___flmul@grs+3,f
  4913  0137  3008               	movlw	8
  4914  0138                     u2095:	
  4915  0138  35B3               	lslf	___flmul@grs,f
  4916  0139  0DB4               	rlf	___flmul@grs+1,f
  4917  013A  0DB5               	rlf	___flmul@grs+2,f
  4918  013B  0DB6               	rlf	___flmul@grs+3,f
  4919  013C  0B89               	decfsz	9,f
  4920  013D  2938               	goto	u2095
  4921  013E  0825               	movf	___flmul@b,w
  4922  013F  00AD               	movwf	??___flmul
  4923  0140  082D               	movf	??___flmul,w
  4924  0141  00F4               	movwf	__Umul8_16@multiplicand
  4925  0142  0829               	movf	___flmul@a,w
  4926  0143  318E  262F  3180   	fcall	__Umul8_16
  4927  0146  0875               	movf	?__Umul8_16+1,w
  4928  0147  0020               	movlb	0	; select bank0
  4929  0148  00BE               	movwf	___flmul@temp+1
  4930  0149  0874               	movf	?__Umul8_16,w
  4931  014A  00BD               	movwf	___flmul@temp
  4932  014B  083D               	movf	___flmul@temp,w
  4933  014C  07B3               	addwf	___flmul@grs,f
  4934  014D  083E               	movf	___flmul@temp+1,w
  4935  014E  3DB4               	addwfc	___flmul@grs+1,f
  4936  014F  3000               	movlw	0
  4937  0150  3DB5               	addwfc	___flmul@grs+2,f
  4938  0151  3DB6               	addwfc	___flmul@grs+3,f
  4939  0152  0826               	movf	___flmul@b+1,w
  4940  0153  00AD               	movwf	??___flmul
  4941  0154  082D               	movf	??___flmul,w
  4942  0155  00F4               	movwf	__Umul8_16@multiplicand
  4943  0156  082B               	movf	___flmul@a+2,w
  4944  0157  318E  262F  3180   	fcall	__Umul8_16
  4945  015A  0875               	movf	?__Umul8_16+1,w
  4946  015B  0020               	movlb	0	; select bank0
  4947  015C  00BE               	movwf	___flmul@temp+1
  4948  015D  0874               	movf	?__Umul8_16,w
  4949  015E  00BD               	movwf	___flmul@temp
  4950  015F  083D               	movf	___flmul@temp,w
  4951  0160  07B9               	addwf	___flmul@prod,f
  4952  0161  083E               	movf	___flmul@temp+1,w
  4953  0162  3DBA               	addwfc	___flmul@prod+1,f
  4954  0163  3000               	movlw	0
  4955  0164  3DBB               	addwfc	___flmul@prod+2,f
  4956  0165  3DBC               	addwfc	___flmul@prod+3,f
  4957  0166  0827               	movf	___flmul@b+2,w
  4958  0167  00AD               	movwf	??___flmul
  4959  0168  082D               	movf	??___flmul,w
  4960  0169  00F4               	movwf	__Umul8_16@multiplicand
  4961  016A  082A               	movf	___flmul@a+1,w
  4962  016B  318E  262F  3180   	fcall	__Umul8_16
  4963  016E  0875               	movf	?__Umul8_16+1,w
  4964  016F  0020               	movlb	0	; select bank0
  4965  0170  00BE               	movwf	___flmul@temp+1
  4966  0171  0874               	movf	?__Umul8_16,w
  4967  0172  00BD               	movwf	___flmul@temp
  4968  0173  083D               	movf	___flmul@temp,w
  4969  0174  07B9               	addwf	___flmul@prod,f
  4970  0175  083E               	movf	___flmul@temp+1,w
  4971  0176  3DBA               	addwfc	___flmul@prod+1,f
  4972  0177  3000               	movlw	0
  4973  0178  3DBB               	addwfc	___flmul@prod+2,f
  4974  0179  3DBC               	addwfc	___flmul@prod+3,f
  4975  017A  0827               	movf	___flmul@b+2,w
  4976  017B  00AD               	movwf	??___flmul
  4977  017C  082D               	movf	??___flmul,w
  4978  017D  00F4               	movwf	__Umul8_16@multiplicand
  4979  017E  082B               	movf	___flmul@a+2,w
  4980  017F  318E  262F  3180   	fcall	__Umul8_16
  4981  0182  0875               	movf	?__Umul8_16+1,w
  4982  0183  0020               	movlb	0	; select bank0
  4983  0184  00BE               	movwf	___flmul@temp+1
  4984  0185  0874               	movf	?__Umul8_16,w
  4985  0186  00BD               	movwf	___flmul@temp
  4986  0187  083D               	movf	___flmul@temp,w
  4987  0188  00AD               	movwf	??___flmul
  4988  0189  083E               	movf	___flmul@temp+1,w
  4989  018A  00AE               	movwf	??___flmul+1
  4990  018B  01AF               	clrf	??___flmul+2
  4991  018C  01B0               	clrf	??___flmul+3
  4992  018D  3008               	movlw	8
  4993  018E                     u2105:	
  4994  018E  35AD               	lslf	??___flmul,f
  4995  018F  0DAE               	rlf	??___flmul+1,f
  4996  0190  0DAF               	rlf	??___flmul+2,f
  4997  0191  0DB0               	rlf	??___flmul+3,f
  4998  0192  0B89               	decfsz	9,f
  4999  0193  298E               	goto	u2105
  5000  0194  082D               	movf	??___flmul,w
  5001  0195  07B9               	addwf	___flmul@prod,f
  5002  0196  082E               	movf	??___flmul+1,w
  5003  0197  3DBA               	addwfc	___flmul@prod+1,f
  5004  0198  082F               	movf	??___flmul+2,w
  5005  0199  3DBB               	addwfc	___flmul@prod+2,f
  5006  019A  0830               	movf	??___flmul+3,w
  5007  019B  3DBC               	addwfc	___flmul@prod+3,f
  5008  019C  0833               	movf	___flmul@grs,w
  5009  019D  00AD               	movwf	??___flmul
  5010  019E  0834               	movf	___flmul@grs+1,w
  5011  019F  00AE               	movwf	??___flmul+1
  5012  01A0  0835               	movf	___flmul@grs+2,w
  5013  01A1  00AF               	movwf	??___flmul+2
  5014  01A2  0836               	movf	___flmul@grs+3,w
  5015  01A3  00B0               	movwf	??___flmul+3
  5016  01A4  3018               	movlw	24
  5017  01A5                     u2115:	
  5018  01A5  36B0               	lsrf	??___flmul+3,f
  5019  01A6  0CAF               	rrf	??___flmul+2,f
  5020  01A7  0CAE               	rrf	??___flmul+1,f
  5021  01A8  0CAD               	rrf	??___flmul,f
  5022  01A9  0B89               	decfsz	9,f
  5023  01AA  29A5               	goto	u2115
  5024  01AB  082D               	movf	??___flmul,w
  5025  01AC  07B9               	addwf	___flmul@prod,f
  5026  01AD  082E               	movf	??___flmul+1,w
  5027  01AE  3DBA               	addwfc	___flmul@prod+1,f
  5028  01AF  082F               	movf	??___flmul+2,w
  5029  01B0  3DBB               	addwfc	___flmul@prod+2,f
  5030  01B1  0830               	movf	??___flmul+3,w
  5031  01B2  3DBC               	addwfc	___flmul@prod+3,f
  5032  01B3  3008               	movlw	8
  5033  01B4                     u2125:	
  5034  01B4  35B3               	lslf	___flmul@grs,f
  5035  01B5  0DB4               	rlf	___flmul@grs+1,f
  5036  01B6  0DB5               	rlf	___flmul@grs+2,f
  5037  01B7  0DB6               	rlf	___flmul@grs+3,f
  5038  01B8  0B89               	decfsz	9,f
  5039  01B9  29B4               	goto	u2125
  5040  01BA  0838               	movf	___flmul@bexp,w
  5041  01BB  0737               	addwf	___flmul@aexp,w
  5042  01BC  00AD               	movwf	??___flmul
  5043  01BD  01AE               	clrf	??___flmul+1
  5044  01BE  0DAE               	rlf	??___flmul+1,f
  5045  01BF  082D               	movf	??___flmul,w
  5046  01C0  3E82               	addlw	130
  5047  01C1  00BD               	movwf	___flmul@temp
  5048  01C2  30FF               	movlw	255
  5049  01C3  3D2E               	addwfc	??___flmul+1,w
  5050  01C4  00BE               	movwf	___flmul@temp+1
  5051  01C5                     l1894:	
  5052  01C5  1BBB               	btfsc	___flmul@prod+2,7
  5053  01C6  29DC               	goto	l1896
  5054  01C7  3001               	movlw	1
  5055  01C8                     u2135:	
  5056  01C8  35B9               	lslf	___flmul@prod,f
  5057  01C9  0DBA               	rlf	___flmul@prod+1,f
  5058  01CA  0DBB               	rlf	___flmul@prod+2,f
  5059  01CB  0DBC               	rlf	___flmul@prod+3,f
  5060  01CC  0B89               	decfsz	9,f
  5061  01CD  29C8               	goto	u2135
  5062  01CE  1BB6               	btfsc	___flmul@grs+3,7
  5063  01CF  1439               	bsf	___flmul@prod,0
  5064  01D0  3001               	movlw	1
  5065  01D1                     u2155:	
  5066  01D1  35B3               	lslf	___flmul@grs,f
  5067  01D2  0DB4               	rlf	___flmul@grs+1,f
  5068  01D3  0DB5               	rlf	___flmul@grs+2,f
  5069  01D4  0DB6               	rlf	___flmul@grs+3,f
  5070  01D5  0B89               	decfsz	9,f
  5071  01D6  29D1               	goto	u2155
  5072  01D7  30FF               	movlw	255
  5073  01D8  07BD               	addwf	___flmul@temp,f
  5074  01D9  30FF               	movlw	255
  5075  01DA  3DBE               	addwfc	___flmul@temp+1,f
  5076  01DB  29C5               	goto	l1894
  5077  01DC                     l1896:	
  5078  01DC  01B7               	clrf	___flmul@aexp
  5079  01DD  1FB6               	btfss	___flmul@grs+3,7
  5080  01DE  29F5               	goto	l1906
  5081  01DF  30FF               	movlw	255
  5082  01E0  0533               	andwf	___flmul@grs,w
  5083  01E1  00AD               	movwf	??___flmul
  5084  01E2  30FF               	movlw	255
  5085  01E3  0534               	andwf	___flmul@grs+1,w
  5086  01E4  00AE               	movwf	??___flmul+1
  5087  01E5  30FF               	movlw	255
  5088  01E6  0535               	andwf	___flmul@grs+2,w
  5089  01E7  00AF               	movwf	??___flmul+2
  5090  01E8  307F               	movlw	127
  5091  01E9  0536               	andwf	___flmul@grs+3,w
  5092  01EA  00B0               	movwf	??___flmul+3
  5093  01EB  0830               	movf	??___flmul+3,w
  5094  01EC  042F               	iorwf	??___flmul+2,w
  5095  01ED  042E               	iorwf	??___flmul+1,w
  5096  01EE  042D               	iorwf	??___flmul,w
  5097  01EF  1D03               	btfss	3,2
  5098  01F0  29F3               	goto	l1904
  5099  01F1  1C39               	btfss	___flmul@prod,0
  5100  01F2  29F5               	goto	l1906
  5101  01F3                     l1904:	
  5102  01F3  01B7               	clrf	___flmul@aexp
  5103  01F4  0AB7               	incf	___flmul@aexp,f
  5104  01F5                     l1906:	
  5105  01F5  0837               	movf	___flmul@aexp,w
  5106  01F6  1903               	btfsc	3,2
  5107  01F7  2A1E               	goto	l1916
  5108  01F8  3001               	movlw	1
  5109  01F9  07B9               	addwf	___flmul@prod,f
  5110  01FA  3000               	movlw	0
  5111  01FB  3DBA               	addwfc	___flmul@prod+1,f
  5112  01FC  3000               	movlw	0
  5113  01FD  3DBB               	addwfc	___flmul@prod+2,f
  5114  01FE  3000               	movlw	0
  5115  01FF  3DBC               	addwfc	___flmul@prod+3,f
  5116  0200  1C3C               	btfss	___flmul@prod+3,0
  5117  0201  2A1E               	goto	l1916
  5118  0202  0839               	movf	___flmul@prod,w
  5119  0203  00AD               	movwf	??___flmul
  5120  0204  083A               	movf	___flmul@prod+1,w
  5121  0205  00AE               	movwf	??___flmul+1
  5122  0206  083B               	movf	___flmul@prod+2,w
  5123  0207  00AF               	movwf	??___flmul+2
  5124  0208  083C               	movf	___flmul@prod+3,w
  5125  0209  00B0               	movwf	??___flmul+3
  5126  020A  3001               	movlw	1
  5127  020B  00B1               	movwf	??___flmul+4
  5128  020C                     u2225:	
  5129  020C  37B0               	asrf	??___flmul+3,f
  5130  020D  0CAF               	rrf	??___flmul+2,f
  5131  020E  0CAE               	rrf	??___flmul+1,f
  5132  020F  0CAD               	rrf	??___flmul,f
  5133  0210  0BB1               	decfsz	??___flmul+4,f
  5134  0211  2A0C               	goto	u2225
  5135  0212  0830               	movf	??___flmul+3,w
  5136  0213  00BC               	movwf	___flmul@prod+3
  5137  0214  082F               	movf	??___flmul+2,w
  5138  0215  00BB               	movwf	___flmul@prod+2
  5139  0216  082E               	movf	??___flmul+1,w
  5140  0217  00BA               	movwf	___flmul@prod+1
  5141  0218  082D               	movf	??___flmul,w
  5142  0219  00B9               	movwf	___flmul@prod
  5143  021A  3001               	movlw	1
  5144  021B  07BD               	addwf	___flmul@temp,f
  5145  021C  3000               	movlw	0
  5146  021D  3DBE               	addwfc	___flmul@temp+1,f
  5147  021E                     l1916:	
  5148  021E  083E               	movf	___flmul@temp+1,w
  5149  021F  3A80               	xorlw	128
  5150  0220  00AD               	movwf	??___flmul
  5151  0221  3080               	movlw	128
  5152  0222  022D               	subwf	??___flmul,w
  5153  0223  1D03               	skipz
  5154  0224  2A27               	goto	u2235
  5155  0225  30FF               	movlw	255
  5156  0226  023D               	subwf	___flmul@temp,w
  5157  0227                     u2235:	
  5158  0227  1C03               	skipc
  5159  0228  2A33               	goto	l1920
  5160  0229  307F               	movlw	127
  5161  022A  0020               	movlb	0	; select bank0
  5162  022B  00BC               	movwf	___flmul@prod+3
  5163  022C  3080               	movlw	128
  5164  022D  00BB               	movwf	___flmul@prod+2
  5165  022E  3000               	movlw	0
  5166  022F  00BA               	movwf	___flmul@prod+1
  5167  0230  3000               	movlw	0
  5168  0231  00B9               	movwf	___flmul@prod
  5169  0232  2A5D               	goto	l722
  5170  0233                     l1920:	
  5171  0233  0020               	movlb	0	; select bank0
  5172  0234  083E               	movf	___flmul@temp+1,w
  5173  0235  3A80               	xorlw	128
  5174  0236  00AD               	movwf	??___flmul
  5175  0237  3080               	movlw	128
  5176  0238  022D               	subwf	??___flmul,w
  5177  0239  1D03               	skipz
  5178  023A  2A3D               	goto	u2245
  5179  023B  3001               	movlw	1
  5180  023C  023D               	subwf	___flmul@temp,w
  5181  023D                     u2245:	
  5182  023D  1803               	skipnc
  5183  023E  2A4A               	goto	l1926
  5184  023F  3000               	movlw	0
  5185  0240  0020               	movlb	0	; select bank0
  5186  0241  00BC               	movwf	___flmul@prod+3
  5187  0242  3000               	movlw	0
  5188  0243  00BB               	movwf	___flmul@prod+2
  5189  0244  3000               	movlw	0
  5190  0245  00BA               	movwf	___flmul@prod+1
  5191  0246  3000               	movlw	0
  5192  0247  00B9               	movwf	___flmul@prod
  5193  0248  01B2               	clrf	___flmul@sign
  5194  0249  2A5D               	goto	l722
  5195  024A                     l1926:	
  5196  024A  0020               	movlb	0	; select bank0
  5197  024B  083D               	movf	___flmul@temp,w
  5198  024C  00AD               	movwf	??___flmul
  5199  024D  082D               	movf	??___flmul,w
  5200  024E  00B8               	movwf	___flmul@bexp
  5201  024F  30FF               	movlw	255
  5202  0250  05B9               	andwf	___flmul@prod,f
  5203  0251  30FF               	movlw	255
  5204  0252  05BA               	andwf	___flmul@prod+1,f
  5205  0253  307F               	movlw	127
  5206  0254  05BB               	andwf	___flmul@prod+2,f
  5207  0255  3000               	movlw	0
  5208  0256  05BC               	andwf	___flmul@prod+3,f
  5209  0257  1838               	btfsc	___flmul@bexp,0
  5210  0258  17BB               	bsf	___flmul@prod+2,7
  5211  0259  3638               	lsrf	___flmul@bexp,w
  5212  025A  00AD               	movwf	??___flmul
  5213  025B  082D               	movf	??___flmul,w
  5214  025C  00BC               	movwf	___flmul@prod+3
  5215  025D                     l722:	
  5216  025D  0832               	movf	___flmul@sign,w
  5217  025E  00AD               	movwf	??___flmul
  5218  025F  082D               	movf	??___flmul,w
  5219  0260  04BC               	iorwf	___flmul@prod+3,f
  5220  0261  083C               	movf	___flmul@prod+3,w
  5221  0262  00A8               	movwf	?___flmul+3
  5222  0263  083B               	movf	___flmul@prod+2,w
  5223  0264  00A7               	movwf	?___flmul+2
  5224  0265  083A               	movf	___flmul@prod+1,w
  5225  0266  00A6               	movwf	?___flmul+1
  5226  0267  0839               	movf	___flmul@prod,w
  5227  0268  00A5               	movwf	?___flmul
  5228  0269  0008               	return
  5229  026A                     __end_of___flmul:	
  5230                           
  5231                           	psect	text13
  5232  0E2F                     __ptext13:	
  5233 ;; *************** function __Umul8_16 *****************
  5234 ;; Defined at:
  5235 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  multiplier      1    wreg     unsigned char 
  5238 ;;  multiplicand    1    4[COMMON] unsigned char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5241 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5242 ;;  product         2    0[BANK0 ] unsigned int 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  2    4[COMMON] unsigned int 
  5245 ;; Registers used:
  5246 ;;		wreg, status,2, status,0
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;Total ram usage:        9 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    2
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		___flmul
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           
  5267                           ;psect for function __Umul8_16
  5268  0E2F                     __Umul8_16:	
  5269                           
  5270                           ;incstack = 0
  5271                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5272                           ;__Umul8_16@multiplier stored from wreg
  5273  0E2F  0020               	movlb	0	; select bank0
  5274  0E30  00A4               	movwf	__Umul8_16@multiplier
  5275  0E31  01A0               	clrf	__Umul8_16@product
  5276  0E32  01A1               	clrf	__Umul8_16@product+1
  5277  0E33  0874               	movf	__Umul8_16@multiplicand,w
  5278  0E34  00F6               	movwf	??__Umul8_16
  5279  0E35  01F7               	clrf	??__Umul8_16+1
  5280  0E36  0876               	movf	??__Umul8_16,w
  5281  0E37  00A2               	movwf	__Umul8_16@word_mpld
  5282  0E38  0877               	movf	??__Umul8_16+1,w
  5283  0E39  00A3               	movwf	__Umul8_16@word_mpld+1
  5284  0E3A                     l1538:	
  5285  0E3A  1C24               	btfss	__Umul8_16@multiplier,0
  5286  0E3B  2E40               	goto	l748
  5287  0E3C  0822               	movf	__Umul8_16@word_mpld,w
  5288  0E3D  07A0               	addwf	__Umul8_16@product,f
  5289  0E3E  0823               	movf	__Umul8_16@word_mpld+1,w
  5290  0E3F  3DA1               	addwfc	__Umul8_16@product+1,f
  5291  0E40                     l748:	
  5292  0E40  3001               	movlw	1
  5293  0E41                     u1465:	
  5294  0E41  35A2               	lslf	__Umul8_16@word_mpld,f
  5295  0E42  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5296  0E43  0B89               	decfsz	9,f
  5297  0E44  2E41               	goto	u1465
  5298  0E45  1003               	clrc
  5299  0E46  0CA4               	rrf	__Umul8_16@multiplier,f
  5300  0E47  0824               	movf	__Umul8_16@multiplier,w
  5301  0E48  1D03               	btfss	3,2
  5302  0E49  2E3A               	goto	l1538
  5303  0E4A  0821               	movf	__Umul8_16@product+1,w
  5304  0E4B  00F5               	movwf	?__Umul8_16+1
  5305  0E4C  0820               	movf	__Umul8_16@product,w
  5306  0E4D  00F4               	movwf	?__Umul8_16
  5307  0E4E  0008               	return
  5308  0E4F                     __end_of__Umul8_16:	
  5309                           
  5310                           	psect	text14
  5311  026A                     __ptext14:	
  5312 ;; *************** function ___fldiv *****************
  5313 ;; Defined at:
  5314 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  a               4   10[BANK0 ] unsigned int 
  5317 ;;  b               4   14[BANK0 ] unsigned int 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  grs             4   30[BANK0 ] unsigned long 
  5320 ;;  rem             4   23[BANK0 ] unsigned long 
  5321 ;;  new_exp         2   28[BANK0 ] int 
  5322 ;;  aexp            1   35[BANK0 ] unsigned char 
  5323 ;;  bexp            1   34[BANK0 ] unsigned char 
  5324 ;;  sign            1   27[BANK0 ] unsigned char 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  4   10[BANK0 ] unsigned char 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5334 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;Total ram usage:       26 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    2
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		__calculate_speed
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           
  5349                           ;psect for function ___fldiv
  5350  026A                     ___fldiv:	
  5351                           
  5352                           ;incstack = 0
  5353                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5354  026A  0020               	movlb	0	; select bank0
  5355  026B  0831               	movf	___fldiv@b+3,w
  5356  026C  3980               	andlw	128
  5357  026D  00B2               	movwf	??___fldiv
  5358  026E  0832               	movf	??___fldiv,w
  5359  026F  00BB               	movwf	___fldiv@sign
  5360  0270  3531               	lslf	___fldiv@b+3,w
  5361  0271  00B2               	movwf	??___fldiv
  5362  0272  0832               	movf	??___fldiv,w
  5363  0273  00C2               	movwf	___fldiv@bexp
  5364  0274  1BB0               	btfsc	___fldiv@b+2,7
  5365  0275  1442               	bsf	___fldiv@bexp,0
  5366  0276  0842               	movf	___fldiv@bexp,w
  5367  0277  1903               	btfsc	3,2
  5368  0278  2A87               	goto	l1676
  5369  0279  0A42               	incf	___fldiv@bexp,w
  5370  027A  1D03               	btfss	3,2
  5371  027B  2A84               	goto	l1672
  5372  027C  3000               	movlw	0
  5373  027D  00B1               	movwf	___fldiv@b+3
  5374  027E  3000               	movlw	0
  5375  027F  00B0               	movwf	___fldiv@b+2
  5376  0280  3000               	movlw	0
  5377  0281  00AF               	movwf	___fldiv@b+1
  5378  0282  3000               	movlw	0
  5379  0283  00AE               	movwf	___fldiv@b
  5380  0284                     l1672:	
  5381  0284  17B0               	bsf	___fldiv@b+2,7
  5382  0285  01B1               	clrf	___fldiv@b+3
  5383  0286  2A8F               	goto	l1678
  5384  0287                     l1676:	
  5385  0287  3000               	movlw	0
  5386  0288  00B1               	movwf	___fldiv@b+3
  5387  0289  3000               	movlw	0
  5388  028A  00B0               	movwf	___fldiv@b+2
  5389  028B  3000               	movlw	0
  5390  028C  00AF               	movwf	___fldiv@b+1
  5391  028D  3000               	movlw	0
  5392  028E  00AE               	movwf	___fldiv@b
  5393  028F                     l1678:	
  5394  028F  082D               	movf	___fldiv@a+3,w
  5395  0290  3980               	andlw	128
  5396  0291  00B2               	movwf	??___fldiv
  5397  0292  0832               	movf	??___fldiv,w
  5398  0293  06BB               	xorwf	___fldiv@sign,f
  5399  0294  352D               	lslf	___fldiv@a+3,w
  5400  0295  00B2               	movwf	??___fldiv
  5401  0296  0832               	movf	??___fldiv,w
  5402  0297  00C3               	movwf	___fldiv@aexp
  5403  0298  1BAC               	btfsc	___fldiv@a+2,7
  5404  0299  1443               	bsf	___fldiv@aexp,0
  5405  029A  0843               	movf	___fldiv@aexp,w
  5406  029B  1903               	btfsc	3,2
  5407  029C  2AAB               	goto	l1696
  5408  029D  0A43               	incf	___fldiv@aexp,w
  5409  029E  1D03               	btfss	3,2
  5410  029F  2AA8               	goto	l1692
  5411  02A0  3000               	movlw	0
  5412  02A1  00AD               	movwf	___fldiv@a+3
  5413  02A2  3000               	movlw	0
  5414  02A3  00AC               	movwf	___fldiv@a+2
  5415  02A4  3000               	movlw	0
  5416  02A5  00AB               	movwf	___fldiv@a+1
  5417  02A6  3000               	movlw	0
  5418  02A7  00AA               	movwf	___fldiv@a
  5419  02A8                     l1692:	
  5420  02A8  17AC               	bsf	___fldiv@a+2,7
  5421  02A9  01AD               	clrf	___fldiv@a+3
  5422  02AA  2AB3               	goto	l670
  5423  02AB                     l1696:	
  5424  02AB  3000               	movlw	0
  5425  02AC  00AD               	movwf	___fldiv@a+3
  5426  02AD  3000               	movlw	0
  5427  02AE  00AC               	movwf	___fldiv@a+2
  5428  02AF  3000               	movlw	0
  5429  02B0  00AB               	movwf	___fldiv@a+1
  5430  02B1  3000               	movlw	0
  5431  02B2  00AA               	movwf	___fldiv@a
  5432  02B3                     l670:	
  5433  02B3  082D               	movf	___fldiv@a+3,w
  5434  02B4  042C               	iorwf	___fldiv@a+2,w
  5435  02B5  042B               	iorwf	___fldiv@a+1,w
  5436  02B6  042A               	iorwf	___fldiv@a,w
  5437  02B7  1D03               	skipz
  5438  02B8  2AD2               	goto	l1706
  5439  02B9  3000               	movlw	0
  5440  02BA  00B1               	movwf	___fldiv@b+3
  5441  02BB  3000               	movlw	0
  5442  02BC  00B0               	movwf	___fldiv@b+2
  5443  02BD  3000               	movlw	0
  5444  02BE  00AF               	movwf	___fldiv@b+1
  5445  02BF  3000               	movlw	0
  5446  02C0  00AE               	movwf	___fldiv@b
  5447  02C1  3080               	movlw	128
  5448  02C2  04B0               	iorwf	___fldiv@b+2,f
  5449  02C3  307F               	movlw	127
  5450  02C4  04B1               	iorwf	___fldiv@b+3,f
  5451  02C5  083B               	movf	___fldiv@sign,w
  5452  02C6  00B2               	movwf	??___fldiv
  5453  02C7  0832               	movf	??___fldiv,w
  5454  02C8  04B1               	iorwf	___fldiv@b+3,f
  5455  02C9  0831               	movf	___fldiv@b+3,w
  5456  02CA  00AD               	movwf	?___fldiv+3
  5457  02CB  0830               	movf	___fldiv@b+2,w
  5458  02CC  00AC               	movwf	?___fldiv+2
  5459  02CD  082F               	movf	___fldiv@b+1,w
  5460  02CE  00AB               	movwf	?___fldiv+1
  5461  02CF  082E               	movf	___fldiv@b,w
  5462  02D0  00AA               	movwf	?___fldiv
  5463  02D1  0008               	return
  5464  02D2                     l1706:	
  5465  02D2  0842               	movf	___fldiv@bexp,w
  5466  02D3  1D03               	btfss	3,2
  5467  02D4  2AE6               	goto	l1712
  5468  02D5  3000               	movlw	0
  5469  02D6  00B1               	movwf	___fldiv@b+3
  5470  02D7  3000               	movlw	0
  5471  02D8  00B0               	movwf	___fldiv@b+2
  5472  02D9  3000               	movlw	0
  5473  02DA  00AF               	movwf	___fldiv@b+1
  5474  02DB  3000               	movlw	0
  5475  02DC  00AE               	movwf	___fldiv@b
  5476  02DD  0831               	movf	___fldiv@b+3,w
  5477  02DE  00AD               	movwf	?___fldiv+3
  5478  02DF  0830               	movf	___fldiv@b+2,w
  5479  02E0  00AC               	movwf	?___fldiv+2
  5480  02E1  082F               	movf	___fldiv@b+1,w
  5481  02E2  00AB               	movwf	?___fldiv+1
  5482  02E3  082E               	movf	___fldiv@b,w
  5483  02E4  00AA               	movwf	?___fldiv
  5484  02E5  0008               	return
  5485  02E6                     l1712:	
  5486  02E6  0843               	movf	___fldiv@aexp,w
  5487  02E7  00B2               	movwf	??___fldiv
  5488  02E8  01B3               	clrf	??___fldiv+1
  5489  02E9  09B2               	comf	??___fldiv,f
  5490  02EA  09B3               	comf	??___fldiv+1,f
  5491  02EB  0AB2               	incf	??___fldiv,f
  5492  02EC  1903               	skipnz
  5493  02ED  0AB3               	incf	??___fldiv+1,f
  5494  02EE  0842               	movf	___fldiv@bexp,w
  5495  02EF  0732               	addwf	??___fldiv,w
  5496  02F0  00B4               	movwf	??___fldiv+2
  5497  02F1  0833               	movf	??___fldiv+1,w
  5498  02F2  1803               	skipnc
  5499  02F3  0A33               	incf	??___fldiv+1,w
  5500  02F4  00B5               	movwf	??___fldiv+3
  5501  02F5  0834               	movf	??___fldiv+2,w
  5502  02F6  3E7F               	addlw	127
  5503  02F7  00BC               	movwf	___fldiv@new_exp
  5504  02F8  3000               	movlw	0
  5505  02F9  3D35               	addwfc	??___fldiv+3,w
  5506  02FA  00BD               	movwf	___fldiv@new_exp+1
  5507  02FB  0831               	movf	___fldiv@b+3,w
  5508  02FC  00BA               	movwf	___fldiv@rem+3
  5509  02FD  0830               	movf	___fldiv@b+2,w
  5510  02FE  00B9               	movwf	___fldiv@rem+2
  5511  02FF  082F               	movf	___fldiv@b+1,w
  5512  0300  00B8               	movwf	___fldiv@rem+1
  5513  0301  082E               	movf	___fldiv@b,w
  5514  0302  00B7               	movwf	___fldiv@rem
  5515  0303  3000               	movlw	0
  5516  0304  00B1               	movwf	___fldiv@b+3
  5517  0305  3000               	movlw	0
  5518  0306  00B0               	movwf	___fldiv@b+2
  5519  0307  3000               	movlw	0
  5520  0308  00AF               	movwf	___fldiv@b+1
  5521  0309  3000               	movlw	0
  5522  030A  00AE               	movwf	___fldiv@b
  5523  030B  3000               	movlw	0
  5524  030C  00C1               	movwf	___fldiv@grs+3
  5525  030D  3000               	movlw	0
  5526  030E  00C0               	movwf	___fldiv@grs+2
  5527  030F  3000               	movlw	0
  5528  0310  00BF               	movwf	___fldiv@grs+1
  5529  0311  3000               	movlw	0
  5530  0312  00BE               	movwf	___fldiv@grs
  5531  0313  01C3               	clrf	___fldiv@aexp
  5532  0314                     l1740:	
  5533  0314  301A               	movlw	26
  5534  0315  0243               	subwf	___fldiv@aexp,w
  5535  0316  1803               	btfsc	3,0
  5536  0317  2B50               	goto	l1742
  5537  0318  0843               	movf	___fldiv@aexp,w
  5538  0319  1903               	btfsc	3,2
  5539  031A  2B32               	goto	l1732
  5540  031B  3001               	movlw	1
  5541  031C                     u1805:	
  5542  031C  35B7               	lslf	___fldiv@rem,f
  5543  031D  0DB8               	rlf	___fldiv@rem+1,f
  5544  031E  0DB9               	rlf	___fldiv@rem+2,f
  5545  031F  0DBA               	rlf	___fldiv@rem+3,f
  5546  0320  0B89               	decfsz	9,f
  5547  0321  2B1C               	goto	u1805
  5548  0322  3001               	movlw	1
  5549  0323                     u1815:	
  5550  0323  35AE               	lslf	___fldiv@b,f
  5551  0324  0DAF               	rlf	___fldiv@b+1,f
  5552  0325  0DB0               	rlf	___fldiv@b+2,f
  5553  0326  0DB1               	rlf	___fldiv@b+3,f
  5554  0327  0B89               	decfsz	9,f
  5555  0328  2B23               	goto	u1815
  5556  0329  1BC1               	btfsc	___fldiv@grs+3,7
  5557  032A  142E               	bsf	___fldiv@b,0
  5558  032B  3001               	movlw	1
  5559  032C                     u1835:	
  5560  032C  35BE               	lslf	___fldiv@grs,f
  5561  032D  0DBF               	rlf	___fldiv@grs+1,f
  5562  032E  0DC0               	rlf	___fldiv@grs+2,f
  5563  032F  0DC1               	rlf	___fldiv@grs+3,f
  5564  0330  0B89               	decfsz	9,f
  5565  0331  2B2C               	goto	u1835
  5566  0332                     l1732:	
  5567  0332  082D               	movf	___fldiv@a+3,w
  5568  0333  023A               	subwf	___fldiv@rem+3,w
  5569  0334  1D03               	skipz
  5570  0335  2B40               	goto	u1845
  5571  0336  082C               	movf	___fldiv@a+2,w
  5572  0337  0239               	subwf	___fldiv@rem+2,w
  5573  0338  1D03               	skipz
  5574  0339  2B40               	goto	u1845
  5575  033A  082B               	movf	___fldiv@a+1,w
  5576  033B  0238               	subwf	___fldiv@rem+1,w
  5577  033C  1D03               	skipz
  5578  033D  2B40               	goto	u1845
  5579  033E  082A               	movf	___fldiv@a,w
  5580  033F  0237               	subwf	___fldiv@rem,w
  5581  0340                     u1845:	
  5582  0340  1C03               	skipc
  5583  0341  2B4B               	goto	l1738
  5584  0342  1741               	bsf	___fldiv@grs+3,6
  5585  0343  082A               	movf	___fldiv@a,w
  5586  0344  02B7               	subwf	___fldiv@rem,f
  5587  0345  082B               	movf	___fldiv@a+1,w
  5588  0346  3BB8               	subwfb	___fldiv@rem+1,f
  5589  0347  082C               	movf	___fldiv@a+2,w
  5590  0348  3BB9               	subwfb	___fldiv@rem+2,f
  5591  0349  082D               	movf	___fldiv@a+3,w
  5592  034A  3BBA               	subwfb	___fldiv@rem+3,f
  5593  034B                     l1738:	
  5594  034B  3001               	movlw	1
  5595  034C  00B2               	movwf	??___fldiv
  5596  034D  0832               	movf	??___fldiv,w
  5597  034E  07C3               	addwf	___fldiv@aexp,f
  5598  034F  2B14               	goto	l1740
  5599  0350                     l1742:	
  5600  0350  083A               	movf	___fldiv@rem+3,w
  5601  0351  0439               	iorwf	___fldiv@rem+2,w
  5602  0352  0438               	iorwf	___fldiv@rem+1,w
  5603  0353  0437               	iorwf	___fldiv@rem,w
  5604  0354  1D03               	btfss	3,2
  5605  0355  143E               	bsf	___fldiv@grs,0
  5606  0356                     l1756:	
  5607  0356  1BB0               	btfsc	___fldiv@b+2,7
  5608  0357  2B6D               	goto	l1758
  5609  0358  3001               	movlw	1
  5610  0359                     u1875:	
  5611  0359  35AE               	lslf	___fldiv@b,f
  5612  035A  0DAF               	rlf	___fldiv@b+1,f
  5613  035B  0DB0               	rlf	___fldiv@b+2,f
  5614  035C  0DB1               	rlf	___fldiv@b+3,f
  5615  035D  0B89               	decfsz	9,f
  5616  035E  2B59               	goto	u1875
  5617  035F  1BC1               	btfsc	___fldiv@grs+3,7
  5618  0360  142E               	bsf	___fldiv@b,0
  5619  0361  3001               	movlw	1
  5620  0362                     u1895:	
  5621  0362  35BE               	lslf	___fldiv@grs,f
  5622  0363  0DBF               	rlf	___fldiv@grs+1,f
  5623  0364  0DC0               	rlf	___fldiv@grs+2,f
  5624  0365  0DC1               	rlf	___fldiv@grs+3,f
  5625  0366  0B89               	decfsz	9,f
  5626  0367  2B62               	goto	u1895
  5627  0368  30FF               	movlw	255
  5628  0369  07BC               	addwf	___fldiv@new_exp,f
  5629  036A  30FF               	movlw	255
  5630  036B  3DBD               	addwfc	___fldiv@new_exp+1,f
  5631  036C  2B56               	goto	l1756
  5632  036D                     l1758:	
  5633  036D  01C3               	clrf	___fldiv@aexp
  5634  036E  1FC1               	btfss	___fldiv@grs+3,7
  5635  036F  2B86               	goto	l1768
  5636  0370  30FF               	movlw	255
  5637  0371  053E               	andwf	___fldiv@grs,w
  5638  0372  00B2               	movwf	??___fldiv
  5639  0373  30FF               	movlw	255
  5640  0374  053F               	andwf	___fldiv@grs+1,w
  5641  0375  00B3               	movwf	??___fldiv+1
  5642  0376  30FF               	movlw	255
  5643  0377  0540               	andwf	___fldiv@grs+2,w
  5644  0378  00B4               	movwf	??___fldiv+2
  5645  0379  307F               	movlw	127
  5646  037A  0541               	andwf	___fldiv@grs+3,w
  5647  037B  00B5               	movwf	??___fldiv+3
  5648  037C  0835               	movf	??___fldiv+3,w
  5649  037D  0434               	iorwf	??___fldiv+2,w
  5650  037E  0433               	iorwf	??___fldiv+1,w
  5651  037F  0432               	iorwf	??___fldiv,w
  5652  0380  1D03               	btfss	3,2
  5653  0381  2B84               	goto	l1766
  5654  0382  1C2E               	btfss	___fldiv@b,0
  5655  0383  2B86               	goto	l1768
  5656  0384                     l1766:	
  5657  0384  01C3               	clrf	___fldiv@aexp
  5658  0385  0AC3               	incf	___fldiv@aexp,f
  5659  0386                     l1768:	
  5660  0386  0843               	movf	___fldiv@aexp,w
  5661  0387  1903               	btfsc	3,2
  5662  0388  2BAF               	goto	l1778
  5663  0389  3001               	movlw	1
  5664  038A  07AE               	addwf	___fldiv@b,f
  5665  038B  3000               	movlw	0
  5666  038C  3DAF               	addwfc	___fldiv@b+1,f
  5667  038D  3000               	movlw	0
  5668  038E  3DB0               	addwfc	___fldiv@b+2,f
  5669  038F  3000               	movlw	0
  5670  0390  3DB1               	addwfc	___fldiv@b+3,f
  5671  0391  1C31               	btfss	___fldiv@b+3,0
  5672  0392  2BAF               	goto	l1778
  5673  0393  082E               	movf	___fldiv@b,w
  5674  0394  00B2               	movwf	??___fldiv
  5675  0395  082F               	movf	___fldiv@b+1,w
  5676  0396  00B3               	movwf	??___fldiv+1
  5677  0397  0830               	movf	___fldiv@b+2,w
  5678  0398  00B4               	movwf	??___fldiv+2
  5679  0399  0831               	movf	___fldiv@b+3,w
  5680  039A  00B5               	movwf	??___fldiv+3
  5681  039B  3001               	movlw	1
  5682  039C  00B6               	movwf	??___fldiv+4
  5683  039D                     u1965:	
  5684  039D  37B5               	asrf	??___fldiv+3,f
  5685  039E  0CB4               	rrf	??___fldiv+2,f
  5686  039F  0CB3               	rrf	??___fldiv+1,f
  5687  03A0  0CB2               	rrf	??___fldiv,f
  5688  03A1  0BB6               	decfsz	??___fldiv+4,f
  5689  03A2  2B9D               	goto	u1965
  5690  03A3  0835               	movf	??___fldiv+3,w
  5691  03A4  00B1               	movwf	___fldiv@b+3
  5692  03A5  0834               	movf	??___fldiv+2,w
  5693  03A6  00B0               	movwf	___fldiv@b+2
  5694  03A7  0833               	movf	??___fldiv+1,w
  5695  03A8  00AF               	movwf	___fldiv@b+1
  5696  03A9  0832               	movf	??___fldiv,w
  5697  03AA  00AE               	movwf	___fldiv@b
  5698  03AB  3001               	movlw	1
  5699  03AC  07BC               	addwf	___fldiv@new_exp,f
  5700  03AD  3000               	movlw	0
  5701  03AE  3DBD               	addwfc	___fldiv@new_exp+1,f
  5702  03AF                     l1778:	
  5703  03AF  083D               	movf	___fldiv@new_exp+1,w
  5704  03B0  3A80               	xorlw	128
  5705  03B1  00B2               	movwf	??___fldiv
  5706  03B2  3080               	movlw	128
  5707  03B3  0232               	subwf	??___fldiv,w
  5708  03B4  1D03               	skipz
  5709  03B5  2BB8               	goto	u1975
  5710  03B6  30FF               	movlw	255
  5711  03B7  023C               	subwf	___fldiv@new_exp,w
  5712  03B8                     u1975:	
  5713  03B8  1C03               	skipc
  5714  03B9  2BC7               	goto	l691
  5715  03BA  30FF               	movlw	255
  5716  03BB  0020               	movlb	0	; select bank0
  5717  03BC  00BC               	movwf	___fldiv@new_exp
  5718  03BD  3000               	movlw	0
  5719  03BE  00BD               	movwf	___fldiv@new_exp+1
  5720  03BF  3000               	movlw	0
  5721  03C0  00B1               	movwf	___fldiv@b+3
  5722  03C1  3000               	movlw	0
  5723  03C2  00B0               	movwf	___fldiv@b+2
  5724  03C3  3000               	movlw	0
  5725  03C4  00AF               	movwf	___fldiv@b+1
  5726  03C5  3000               	movlw	0
  5727  03C6  00AE               	movwf	___fldiv@b
  5728  03C7                     l691:	
  5729  03C7  0020               	movlb	0	; select bank0
  5730  03C8  083D               	movf	___fldiv@new_exp+1,w
  5731  03C9  3A80               	xorlw	128
  5732  03CA  00B2               	movwf	??___fldiv
  5733  03CB  3080               	movlw	128
  5734  03CC  0232               	subwf	??___fldiv,w
  5735  03CD  1D03               	skipz
  5736  03CE  2BD1               	goto	u1985
  5737  03CF  3001               	movlw	1
  5738  03D0  023C               	subwf	___fldiv@new_exp,w
  5739  03D1                     u1985:	
  5740  03D1  1803               	skipnc
  5741  03D2  2BDF               	goto	l692
  5742  03D3  0020               	movlb	0	; select bank0
  5743  03D4  01BC               	clrf	___fldiv@new_exp
  5744  03D5  01BD               	clrf	___fldiv@new_exp+1
  5745  03D6  3000               	movlw	0
  5746  03D7  00B1               	movwf	___fldiv@b+3
  5747  03D8  3000               	movlw	0
  5748  03D9  00B0               	movwf	___fldiv@b+2
  5749  03DA  3000               	movlw	0
  5750  03DB  00AF               	movwf	___fldiv@b+1
  5751  03DC  3000               	movlw	0
  5752  03DD  00AE               	movwf	___fldiv@b
  5753  03DE  01BB               	clrf	___fldiv@sign
  5754  03DF                     l692:	
  5755  03DF  0020               	movlb	0	; select bank0
  5756  03E0  083C               	movf	___fldiv@new_exp,w
  5757  03E1  00B2               	movwf	??___fldiv
  5758  03E2  0832               	movf	??___fldiv,w
  5759  03E3  00C2               	movwf	___fldiv@bexp
  5760  03E4  1C42               	btfss	___fldiv@bexp,0
  5761  03E5  2BE8               	goto	l1792
  5762  03E6  17B0               	bsf	___fldiv@b+2,7
  5763  03E7  2BEC               	goto	l694
  5764  03E8                     l1792:	
  5765  03E8  307F               	movlw	127
  5766  03E9  00B2               	movwf	??___fldiv
  5767  03EA  0832               	movf	??___fldiv,w
  5768  03EB  05B0               	andwf	___fldiv@b+2,f
  5769  03EC                     l694:	
  5770  03EC  3642               	lsrf	___fldiv@bexp,w
  5771  03ED  00B2               	movwf	??___fldiv
  5772  03EE  0832               	movf	??___fldiv,w
  5773  03EF  00B1               	movwf	___fldiv@b+3
  5774  03F0  083B               	movf	___fldiv@sign,w
  5775  03F1  00B2               	movwf	??___fldiv
  5776  03F2  0832               	movf	??___fldiv,w
  5777  03F3  04B1               	iorwf	___fldiv@b+3,f
  5778  03F4  0831               	movf	___fldiv@b+3,w
  5779  03F5  00AD               	movwf	?___fldiv+3
  5780  03F6  0830               	movf	___fldiv@b+2,w
  5781  03F7  00AC               	movwf	?___fldiv+2
  5782  03F8  082F               	movf	___fldiv@b+1,w
  5783  03F9  00AB               	movwf	?___fldiv+1
  5784  03FA  082E               	movf	___fldiv@b,w
  5785  03FB  00AA               	movwf	?___fldiv
  5786  03FC  0008               	return
  5787  03FD                     __end_of___fldiv:	
  5788                           
  5789                           	psect	intentry
  5790  0004                     __pintentry:	
  5791 ;; *************** function __isr *****************
  5792 ;; Defined at:
  5793 ;;		line 57 in file "main.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;Total ram usage:        0 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    1
  5814 ;; This function calls:
  5815 ;;		_capture_A_isr
  5816 ;;		_capture_B_isr
  5817 ;;		_display_isr
  5818 ;;		_timer_1_isr
  5819 ;; This function is called by:
  5820 ;;		Interrupt level 1
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824  0004                     __isr:	
  5825                           
  5826                           ;incstack = 0
  5827  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5828                           
  5829                           ; Regs used in __isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5830  0005  3180               	pagesel	$
  5831                           
  5832                           ;main.c: 60:     if(PIR4bits.TMR1IF)
  5833  0006  002E               	movlb	14	; select bank14
  5834  0007  1C10               	btfss	16,0	;volatile
  5835  0008  280C               	goto	i1l2190
  5836                           
  5837                           ;main.c: 61:     {;main.c: 62:         timer_1_isr();
  5838  0009  3186  267D  3180   	fcall	_timer_1_isr
  5839  000C                     i1l2190:	
  5840                           ;main.c: 63:     }
  5841                           
  5842                           
  5843                           ;main.c: 66:     if(PIR6bits.CCP1IF)
  5844  000C  002E               	movlb	14	; select bank14
  5845  000D  1C12               	btfss	18,0	;volatile
  5846  000E  2812               	goto	i1l2194
  5847                           
  5848                           ;main.c: 67:     {;main.c: 68:         capture_A_isr();
  5849  000F  318F  27AE  3180   	fcall	_capture_A_isr
  5850  0012                     i1l2194:	
  5851                           ;main.c: 69:     }
  5852                           
  5853                           
  5854                           ;main.c: 72:     if(PIR6bits.CCP2IF)
  5855  0012  002E               	movlb	14	; select bank14
  5856  0013  1C92               	btfss	18,1	;volatile
  5857  0014  2818               	goto	i1l2198
  5858                           
  5859                           ;main.c: 73:     {;main.c: 74:         capture_B_isr();
  5860  0015  3187  2795  3180   	fcall	_capture_B_isr
  5861  0018                     i1l2198:	
  5862                           ;main.c: 75:     }
  5863                           
  5864                           
  5865                           ;main.c: 78:     if(PIR4bits.TMR2IF)
  5866  0018  002E               	movlb	14	; select bank14
  5867  0019  1C90               	btfss	16,1	;volatile
  5868  001A  281D               	goto	i1l72
  5869                           
  5870                           ;main.c: 79:     {;main.c: 80:         display_isr();
  5871  001B  318E  26C8         	fcall	_display_isr
  5872  001D                     i1l72:	
  5873                           ;main.c: 81:     }
  5874                           
  5875  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5876  001E  0009               	retfie
  5877  001F                     __end_of__isr:	
  5878                           
  5879                           	psect	text16
  5880  067D                     __ptext16:	
  5881 ;; *************** function _timer_1_isr *****************
  5882 ;; Defined at:
  5883 ;;		line 51 in file "encoder.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;Total ram usage:        4 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		__isr
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function _timer_1_isr
  5912  067D                     _timer_1_isr:	
  5913                           
  5914                           ;encoder.c: 53:     ++rollover_cnt;
  5915                           
  5916                           ;incstack = 0
  5917                           ; Regs used in _timer_1_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  5918  067D  3001               	movlw	1
  5919  067E  00F0               	movwf	??_timer_1_isr
  5920  067F  0870               	movf	??_timer_1_isr,w
  5921  0680  07F9               	addwf	_rollover_cnt,f
  5922                           
  5923                           ;encoder.c: 56:     if((rollover_cnt&0b11111) == 0)
  5924  0681  0879               	movf	_rollover_cnt,w
  5925  0682  391F               	andlw	31
  5926  0683  1D03               	btfss	3,2
  5927  0684  2EC7               	goto	i1l1396
  5928                           
  5929                           ;encoder.c: 57:     {;encoder.c: 59:         if(rollover_cnt==0)
  5930  0685  0879               	movf	_rollover_cnt,w
  5931  0686  1D03               	btfss	3,2
  5932  0687  2E99               	goto	i1l1386
  5933                           
  5934                           ;encoder.c: 60:         {;encoder.c: 61:             os.time_sum -= 536870912;
  5935  0688  3000               	movlw	0
  5936  0689  00F0               	movwf	??_timer_1_isr
  5937  068A  3000               	movlw	0
  5938  068B  00F1               	movwf	??_timer_1_isr+1
  5939  068C  3000               	movlw	0
  5940  068D  00F2               	movwf	??_timer_1_isr+2
  5941  068E  3020               	movlw	32
  5942  068F  00F3               	movwf	??_timer_1_isr+3
  5943  0690  0870               	movf	??_timer_1_isr,w
  5944  0691  0020               	movlb	0	; select bank0
  5945  0692  02E4               	subwf	_os+12,f	;volatile
  5946  0693  0871               	movf	??_timer_1_isr+1,w
  5947  0694  3BE5               	subwfb	_os+13,f	;volatile
  5948  0695  0872               	movf	??_timer_1_isr+2,w
  5949  0696  3BE6               	subwfb	_os+14,f	;volatile
  5950  0697  0873               	movf	??_timer_1_isr+3,w
  5951  0698  3BE7               	subwfb	_os+15,f	;volatile
  5952  0699                     i1l1386:	
  5953                           ;encoder.c: 62:         }
  5954                           
  5955                           
  5956                           ;encoder.c: 64:         os.encoder_difference = os.encoder - os.encoder_last;
  5957  0699  0020               	movlb	0	; select bank0
  5958  069A  095A               	comf	_os+2,w	;volatile
  5959  069B  00F0               	movwf	??_timer_1_isr
  5960  069C  095B               	comf	_os+3,w	;volatile
  5961  069D  00F1               	movwf	??_timer_1_isr+1
  5962  069E  0AF0               	incf	??_timer_1_isr,f
  5963  069F  1903               	skipnz
  5964  06A0  0AF1               	incf	??_timer_1_isr+1,f
  5965  06A1  0858               	movf	_os,w	;volatile
  5966  06A2  0770               	addwf	??_timer_1_isr,w
  5967  06A3  00F2               	movwf	??_timer_1_isr+2
  5968  06A4  0859               	movf	_os+1,w	;volatile
  5969  06A5  3D71               	addwfc	??_timer_1_isr+1,w
  5970  06A6  00F3               	movwf	??_timer_1_isr+3
  5971  06A7  0872               	movf	??_timer_1_isr+2,w
  5972  06A8  00DC               	movwf	_os+4	;volatile
  5973  06A9  0873               	movf	??_timer_1_isr+3,w
  5974  06AA  00DD               	movwf	_os+5	;volatile
  5975                           
  5976                           ;encoder.c: 65:         os.encoder_last = os.encoder;
  5977  06AB  0859               	movf	_os+1,w	;volatile
  5978  06AC  00DB               	movwf	_os+3	;volatile
  5979  06AD  0858               	movf	_os,w	;volatile
  5980  06AE  00DA               	movwf	_os+2	;volatile
  5981                           
  5982                           ;encoder.c: 67:         os.capture = 32;
  5983  06AF  3020               	movlw	32
  5984  06B0  00F0               	movwf	??_timer_1_isr
  5985  06B1  0870               	movf	??_timer_1_isr,w
  5986  06B2  00DE               	movwf	_os+6	;volatile
  5987                           
  5988                           ;encoder.c: 68:         os.time_sum_last = os.time_sum;
  5989  06B3  300C               	movlw	12
  5990  06B4  3E58               	addlw	(low (_os| 0))& (0+255)
  5991  06B5  0086               	movwf	6
  5992  06B6  0187               	clrf	7
  5993  06B7  3F40               	moviw [0]fsr1
  5994  06B8  00E0               	movwf	_os+8	;volatile
  5995  06B9  3F41               	moviw [1]fsr1
  5996  06BA  00E1               	movwf	_os+9	;volatile
  5997  06BB  3F42               	moviw [2]fsr1
  5998  06BC  00E2               	movwf	_os+10	;volatile
  5999  06BD  3F43               	moviw [3]fsr1
  6000  06BE  00E3               	movwf	_os+11	;volatile
  6001                           
  6002                           ;encoder.c: 69:         os.time_sum = 0;
  6003  06BF  3000               	movlw	0
  6004  06C0  00E7               	movwf	_os+15	;volatile
  6005  06C1  3000               	movlw	0
  6006  06C2  00E6               	movwf	_os+14	;volatile
  6007  06C3  3000               	movlw	0
  6008  06C4  00E5               	movwf	_os+13	;volatile
  6009  06C5  3000               	movlw	0
  6010  06C6  00E4               	movwf	_os+12	;volatile
  6011  06C7                     i1l1396:	
  6012                           ;encoder.c: 70:     }
  6013                           
  6014                           
  6015                           ;encoder.c: 74:     if((rollover_cnt&0b11111) == 0b11111)
  6016  06C7  301F               	movlw	31
  6017  06C8  0579               	andwf	_rollover_cnt,w
  6018  06C9  00F0               	movwf	??_timer_1_isr
  6019  06CA  301F               	movlw	31
  6020  06CB  0670               	xorwf	??_timer_1_isr,w
  6021  06CC  1D03               	btfss	3,2
  6022  06CD  2EDF               	goto	i1l1406
  6023                           
  6024                           ;encoder.c: 75:     {;encoder.c: 77:         if(os.capture!=0)
  6025  06CE  0020               	movlb	0	; select bank0
  6026  06CF  085E               	movf	_os+6,w	;volatile
  6027  06D0  1903               	btfsc	3,2
  6028  06D1  2EDF               	goto	i1l1406
  6029                           
  6030                           ;encoder.c: 78:         {;encoder.c: 80:             os.capture = 0;
  6031  06D2  01DE               	clrf	_os+6	;volatile
  6032                           
  6033                           ;encoder.c: 82:             os.time_sum = 0;
  6034  06D3  3000               	movlw	0
  6035  06D4  00E7               	movwf	_os+15	;volatile
  6036  06D5  3000               	movlw	0
  6037  06D6  00E6               	movwf	_os+14	;volatile
  6038  06D7  3000               	movlw	0
  6039  06D8  00E5               	movwf	_os+13	;volatile
  6040  06D9  3000               	movlw	0
  6041  06DA  00E4               	movwf	_os+12	;volatile
  6042                           
  6043                           ;encoder.c: 84:             os.ready = 1;
  6044  06DB  3001               	movlw	1
  6045  06DC  00F0               	movwf	??_timer_1_isr
  6046  06DD  0870               	movf	??_timer_1_isr,w
  6047  06DE  00DF               	movwf	_os+7	;volatile
  6048  06DF                     i1l1406:	
  6049                           ;encoder.c: 86:     }
  6050                           
  6051                           ;encoder.c: 85:         }
  6052                           
  6053                           
  6054                           ;encoder.c: 89:     PIR4bits.TMR1IF = 0;
  6055  06DF  002E               	movlb	14	; select bank14
  6056  06E0  1010               	bcf	16,0	;volatile
  6057  06E1  0008               	return
  6058  06E2                     __end_of_timer_1_isr:	
  6059                           
  6060                           	psect	text17
  6061  0EC8                     __ptext17:	
  6062 ;; *************** function _display_isr *****************
  6063 ;; Defined at:
  6064 ;;		line 126 in file "display.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;		None
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;		None
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;Total ram usage:        2 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		__isr
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           
  6092                           ;psect for function _display_isr
  6093  0EC8                     _display_isr:	
  6094                           
  6095                           ;display.c: 128:     LATBbits.LATB7 = 1;
  6096                           
  6097                           ;incstack = 0
  6098                           ; Regs used in _display_isr: [wreg-fsr1h+status,2+status,0]
  6099  0EC8  0020               	movlb	0	; select bank0
  6100  0EC9  1797               	bsf	23,7	;volatile
  6101                           
  6102                           ;display.c: 129:     LATBbits.LATB6 = 1;
  6103  0ECA  1717               	bsf	23,6	;volatile
  6104                           
  6105                           ;display.c: 130:     LATBbits.LATB5 = 1;
  6106  0ECB  1697               	bsf	23,5	;volatile
  6107                           
  6108                           ;display.c: 131:     LATBbits.LATB4 = 1;
  6109  0ECC  1617               	bsf	23,4	;volatile
  6110                           
  6111                           ;display.c: 133:     LATC = characters[segment&0b11];
  6112  0ECD  086E               	movf	_segment,w	;volatile
  6113  0ECE  3903               	andlw	3
  6114  0ECF  3E6A               	addlw	(low (_characters| 0))& (0+255)
  6115  0ED0  0086               	movwf	6
  6116  0ED1  0187               	clrf	7
  6117  0ED2  0801               	movf	1,w
  6118  0ED3  0098               	movwf	24	;volatile
  6119                           
  6120                           ;display.c: 135:     switch(segment&0b11)
  6121  0ED4  2EDD               	goto	i1l2158
  6122  0ED5                     i1l141:	
  6123                           ;display.c: 136:     {;display.c: 137:         case 0:
  6124                           
  6125                           
  6126                           ;display.c: 138:             LATBbits.LATB7 = 0;
  6127  0ED5  1397               	bcf	23,7	;volatile
  6128                           
  6129                           ;display.c: 139:             break;
  6130  0ED6  2EF4               	goto	i1l2160
  6131  0ED7                     i1l143:	
  6132                           ;display.c: 140:         case 1:
  6133                           
  6134                           
  6135                           ;display.c: 141:             LATBbits.LATB6 = 0;
  6136  0ED7  1317               	bcf	23,6	;volatile
  6137                           
  6138                           ;display.c: 142:             break;
  6139  0ED8  2EF4               	goto	i1l2160
  6140  0ED9                     i1l144:	
  6141                           ;display.c: 143:         case 2:
  6142                           
  6143                           
  6144                           ;display.c: 144:             LATBbits.LATB5 = 0;
  6145  0ED9  1297               	bcf	23,5	;volatile
  6146                           
  6147                           ;display.c: 145:             break;
  6148  0EDA  2EF4               	goto	i1l2160
  6149  0EDB                     i1l145:	
  6150                           ;display.c: 146:         case 3:
  6151                           
  6152                           
  6153                           ;display.c: 147:             LATBbits.LATB4 = 0;
  6154  0EDB  1217               	bcf	23,4	;volatile
  6155                           
  6156                           ;display.c: 149:     }
  6157                           
  6158                           ;display.c: 148:             break;
  6159  0EDC  2EF4               	goto	i1l2160
  6160  0EDD                     i1l2158:	
  6161  0EDD  086E               	movf	_segment,w	;volatile
  6162  0EDE  3903               	andlw	3
  6163  0EDF  00F0               	movwf	??_display_isr
  6164  0EE0  01F1               	clrf	??_display_isr+1
  6165                           
  6166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6167                           ; Switch size 1, requested type "space"
  6168                           ; Number of cases is 1, Range of values is 0 to 0
  6169                           ; switch strategies available:
  6170                           ; Name         Instructions Cycles
  6171                           ; simple_byte            4     3 (average)
  6172                           ; direct_byte            8     6 (fixed)
  6173                           ; jumptable            260     6 (fixed)
  6174                           ;	Chosen strategy is simple_byte
  6175  0EE1  0871               	movf	??_display_isr+1,w
  6176  0EE2  3A00               	xorlw	0	; case 0
  6177  0EE3  1903               	skipnz
  6178  0EE4  2EE6               	goto	i1l2382
  6179  0EE5  2EF4               	goto	i1l2160
  6180  0EE6                     i1l2382:	
  6181                           
  6182                           ; Switch size 1, requested type "space"
  6183                           ; Number of cases is 4, Range of values is 0 to 3
  6184                           ; switch strategies available:
  6185                           ; Name         Instructions Cycles
  6186                           ; simple_byte           13     7 (average)
  6187                           ; direct_byte           14     6 (fixed)
  6188                           ; jumptable            260     6 (fixed)
  6189                           ;	Chosen strategy is simple_byte
  6190  0EE6  0870               	movf	??_display_isr,w
  6191  0EE7  3A00               	xorlw	0	; case 0
  6192  0EE8  1903               	skipnz
  6193  0EE9  2ED5               	goto	i1l141
  6194  0EEA  3A01               	xorlw	1	; case 1
  6195  0EEB  1903               	skipnz
  6196  0EEC  2ED7               	goto	i1l143
  6197  0EED  3A03               	xorlw	3	; case 2
  6198  0EEE  1903               	skipnz
  6199  0EEF  2ED9               	goto	i1l144
  6200  0EF0  3A01               	xorlw	1	; case 3
  6201  0EF1  1903               	skipnz
  6202  0EF2  2EDB               	goto	i1l145
  6203  0EF3  2EF4               	goto	i1l2160
  6204  0EF4                     i1l2160:	
  6205                           
  6206                           ;display.c: 151:     ++segment;
  6207  0EF4  3001               	movlw	1
  6208  0EF5  00F0               	movwf	??_display_isr
  6209  0EF6  0870               	movf	??_display_isr,w
  6210  0EF7  07EE               	addwf	_segment,f	;volatile
  6211                           
  6212                           ;display.c: 154:     PIR4bits.TMR2IF = 0;
  6213  0EF8  002E               	movlb	14	; select bank14
  6214  0EF9  1090               	bcf	16,1	;volatile
  6215  0EFA  0008               	return
  6216  0EFB                     __end_of_display_isr:	
  6217                           
  6218                           	psect	text18
  6219  0795                     __ptext18:	
  6220 ;; *************** function _capture_B_isr *****************
  6221 ;; Defined at:
  6222 ;;		line 156 in file "encoder.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;		None
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;Total ram usage:        4 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		__isr
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           
  6250                           ;psect for function _capture_B_isr
  6251  0795                     _capture_B_isr:	
  6252                           
  6253                           ;encoder.c: 159:     if(os.capture)
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in _capture_B_isr: [wreg+status,2+status,0]
  6257  0795  0020               	movlb	0	; select bank0
  6258  0796  085E               	movf	_os+6,w	;volatile
  6259  0797  1903               	btfsc	3,2
  6260  0798  2FD5               	goto	i1l2138
  6261                           
  6262                           ;encoder.c: 160:     {;encoder.c: 162:         time = rollover_cnt;
  6263  0799  0879               	movf	_rollover_cnt,w
  6264  079A  00F0               	movwf	??_capture_B_isr
  6265  079B  01F1               	clrf	??_capture_B_isr+1
  6266  079C  01F2               	clrf	??_capture_B_isr+2
  6267  079D  01F3               	clrf	??_capture_B_isr+3
  6268  079E  0873               	movf	??_capture_B_isr+3,w
  6269  079F  0021               	movlb	1	; select bank1
  6270  07A0  00AD               	movwf	(_time+3)^(0+128)
  6271  07A1  0872               	movf	??_capture_B_isr+2,w
  6272  07A2  00AC               	movwf	(_time+2)^(0+128)
  6273  07A3  0871               	movf	??_capture_B_isr+1,w
  6274  07A4  00AB               	movwf	(_time+1)^(0+128)
  6275  07A5  0870               	movf	??_capture_B_isr,w
  6276  07A6  00AA               	movwf	_time^(0+128)
  6277                           
  6278                           ;encoder.c: 163:         time <<= 8;
  6279  07A7  3008               	movlw	8
  6280  07A8                     u263_25:	
  6281  07A8  35AA               	lslf	_time^(0+128),f
  6282  07A9  0DAB               	rlf	(_time+1)^(0+128),f
  6283  07AA  0DAC               	rlf	(_time+2)^(0+128),f
  6284  07AB  0DAD               	rlf	(_time+3)^(0+128),f
  6285  07AC  0B89               	decfsz	9,f
  6286  07AD  2FA8               	goto	u263_25
  6287                           
  6288                           ;encoder.c: 164:         time |= CCPR2H;
  6289  07AE  0026               	movlb	6	; select bank6
  6290  07AF  0811               	movf	17,w	;volatile
  6291  07B0  0021               	movlb	1	; select bank1
  6292  07B1  04AA               	iorwf	_time^(0+128),f
  6293                           
  6294                           ;encoder.c: 165:         time <<= 8;
  6295  07B2  3008               	movlw	8
  6296  07B3                     u264_25:	
  6297  07B3  35AA               	lslf	_time^(0+128),f
  6298  07B4  0DAB               	rlf	(_time+1)^(0+128),f
  6299  07B5  0DAC               	rlf	(_time+2)^(0+128),f
  6300  07B6  0DAD               	rlf	(_time+3)^(0+128),f
  6301  07B7  0B89               	decfsz	9,f
  6302  07B8  2FB3               	goto	u264_25
  6303                           
  6304                           ;encoder.c: 166:         time |= CCPR2L;
  6305  07B9  0026               	movlb	6	; select bank6
  6306  07BA  0810               	movf	16,w	;volatile
  6307  07BB  0021               	movlb	1	; select bank1
  6308  07BC  04AA               	iorwf	_time^(0+128),f
  6309                           
  6310                           ;encoder.c: 168:         os.time_sum += time;
  6311  07BD  082A               	movf	_time^(0+128),w	;volatile
  6312  07BE  0020               	movlb	0	; select bank0
  6313  07BF  07E4               	addwf	_os+12,f	;volatile
  6314  07C0  0021               	movlb	1	; select bank1
  6315  07C1  082B               	movf	(_time+1)^(0+128),w	;volatile
  6316  07C2  0020               	movlb	0	; select bank0
  6317  07C3  3DE5               	addwfc	_os+13,f	;volatile
  6318  07C4  0021               	movlb	1	; select bank1
  6319  07C5  082C               	movf	(_time+2)^(0+128),w	;volatile
  6320  07C6  0020               	movlb	0	; select bank0
  6321  07C7  3DE6               	addwfc	_os+14,f	;volatile
  6322  07C8  0021               	movlb	1	; select bank1
  6323  07C9  082D               	movf	(_time+3)^(0+128),w	;volatile
  6324  07CA  0020               	movlb	0	; select bank0
  6325  07CB  3DE7               	addwfc	_os+15,f	;volatile
  6326                           
  6327                           ;encoder.c: 170:         --os.capture;
  6328  07CC  3001               	movlw	1
  6329  07CD  02DE               	subwf	_os+6,f	;volatile
  6330                           
  6331                           ;encoder.c: 172:         if(os.capture==0)
  6332  07CE  085E               	movf	_os+6,w	;volatile
  6333  07CF  1D03               	btfss	3,2
  6334  07D0  2FD5               	goto	i1l2138
  6335                           
  6336                           ;encoder.c: 173:         {;encoder.c: 174:             os.ready = 1;
  6337  07D1  3001               	movlw	1
  6338  07D2  00F0               	movwf	??_capture_B_isr
  6339  07D3  0870               	movf	??_capture_B_isr,w
  6340  07D4  00DF               	movwf	_os+7	;volatile
  6341  07D5                     i1l2138:	
  6342                           ;encoder.c: 176:     }
  6343                           
  6344                           ;encoder.c: 175:         }
  6345                           
  6346                           
  6347                           ;encoder.c: 178:     if(PORTBbits.RB1)
  6348  07D5  1C8D               	btfss	13,1	;volatile
  6349  07D6  2FDA               	goto	i1l219
  6350                           
  6351                           ;encoder.c: 179:     {;encoder.c: 180:         if(PORTBbits.RB2)
  6352  07D7  190D               	btfsc	13,2	;volatile
  6353  07D8  2FE0               	goto	i1l2148
  6354                           
  6355                           ;encoder.c: 188:         else
  6356                           
  6357                           ;encoder.c: 187:         }
  6358                           
  6359                           ;encoder.c: 181:         {;encoder.c: 183:                 --os.encoder;
  6360  07D9  2FDC               	goto	L7
  6361  07DA                     i1l219:	
  6362                           ;encoder.c: 197:     else
  6363                           
  6364                           ;encoder.c: 196:     }
  6365                           
  6366                           ;encoder.c: 195:         }
  6367                           
  6368                           ;encoder.c: 189:         {;encoder.c: 191:                 ++os.encoder;
  6369                           
  6370                           
  6371                           ;encoder.c: 198:     {;encoder.c: 199:         if(PORTBbits.RB2)
  6372  07DA  1D0D               	btfss	13,2	;volatile
  6373  07DB  2FE0               	goto	i1l2148
  6374  07DC                     L7:	
  6375                           
  6376                           ;encoder.c: 200:         {;encoder.c: 202:                 ++os.encoder;
  6377  07DC  3001               	movlw	1
  6378  07DD  07D8               	addwf	_os,f	;volatile
  6379  07DE  3000               	movlw	0
  6380  07DF  2FE3               	goto	L6
  6381  07E0                     i1l2148:	
  6382                           ;encoder.c: 207:         else
  6383                           
  6384                           ;encoder.c: 206:         }
  6385                           
  6386                           
  6387                           ;encoder.c: 208:         {;encoder.c: 210:                 --os.encoder;
  6388  07E0  30FF               	movlw	255
  6389  07E1  07D8               	addwf	_os,f	;volatile
  6390  07E2  30FF               	movlw	255
  6391  07E3                     L6:	
  6392  07E3  3DD9               	addwfc	_os+1,f	;volatile
  6393                           
  6394                           ;encoder.c: 216:     PIR6bits.CCP2IF = 0;
  6395                           
  6396                           ;encoder.c: 215:     }
  6397                           
  6398                           ;encoder.c: 214:         }
  6399  07E4  002E               	movlb	14	; select bank14
  6400  07E5  1092               	bcf	18,1	;volatile
  6401  07E6  0008               	return
  6402  07E7                     __end_of_capture_B_isr:	
  6403                           
  6404                           	psect	text19
  6405  0FAE                     __ptext19:	
  6406 ;; *************** function _capture_A_isr *****************
  6407 ;; Defined at:
  6408 ;;		line 92 in file "encoder.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;Total ram usage:        4 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		__isr
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function _capture_A_isr
  6437  0FAE                     _capture_A_isr:	
  6438                           
  6439                           ;encoder.c: 95:     if(os.capture)
  6440                           
  6441                           ;incstack = 0
  6442                           ; Regs used in _capture_A_isr: [wreg+status,2+status,0]
  6443  0FAE  0020               	movlb	0	; select bank0
  6444  0FAF  085E               	movf	_os+6,w	;volatile
  6445  0FB0  1903               	btfsc	3,2
  6446  0FB1  2FEE               	goto	i1l2110
  6447                           
  6448                           ;encoder.c: 96:     {;encoder.c: 98:         time = rollover_cnt;
  6449  0FB2  0879               	movf	_rollover_cnt,w
  6450  0FB3  00F0               	movwf	??_capture_A_isr
  6451  0FB4  01F1               	clrf	??_capture_A_isr+1
  6452  0FB5  01F2               	clrf	??_capture_A_isr+2
  6453  0FB6  01F3               	clrf	??_capture_A_isr+3
  6454  0FB7  0873               	movf	??_capture_A_isr+3,w
  6455  0FB8  0021               	movlb	1	; select bank1
  6456  0FB9  00AD               	movwf	(_time+3)^(0+128)
  6457  0FBA  0872               	movf	??_capture_A_isr+2,w
  6458  0FBB  00AC               	movwf	(_time+2)^(0+128)
  6459  0FBC  0871               	movf	??_capture_A_isr+1,w
  6460  0FBD  00AB               	movwf	(_time+1)^(0+128)
  6461  0FBE  0870               	movf	??_capture_A_isr,w
  6462  0FBF  00AA               	movwf	_time^(0+128)
  6463                           
  6464                           ;encoder.c: 99:         time <<= 8;
  6465  0FC0  3008               	movlw	8
  6466  0FC1                     u256_25:	
  6467  0FC1  35AA               	lslf	_time^(0+128),f
  6468  0FC2  0DAB               	rlf	(_time+1)^(0+128),f
  6469  0FC3  0DAC               	rlf	(_time+2)^(0+128),f
  6470  0FC4  0DAD               	rlf	(_time+3)^(0+128),f
  6471  0FC5  0B89               	decfsz	9,f
  6472  0FC6  2FC1               	goto	u256_25
  6473                           
  6474                           ;encoder.c: 100:         time |= CCPR1H;
  6475  0FC7  0026               	movlb	6	; select bank6
  6476  0FC8  080D               	movf	13,w	;volatile
  6477  0FC9  0021               	movlb	1	; select bank1
  6478  0FCA  04AA               	iorwf	_time^(0+128),f
  6479                           
  6480                           ;encoder.c: 101:         time <<= 8;
  6481  0FCB  3008               	movlw	8
  6482  0FCC                     u257_25:	
  6483  0FCC  35AA               	lslf	_time^(0+128),f
  6484  0FCD  0DAB               	rlf	(_time+1)^(0+128),f
  6485  0FCE  0DAC               	rlf	(_time+2)^(0+128),f
  6486  0FCF  0DAD               	rlf	(_time+3)^(0+128),f
  6487  0FD0  0B89               	decfsz	9,f
  6488  0FD1  2FCC               	goto	u257_25
  6489                           
  6490                           ;encoder.c: 102:         time |= CCPR1L;
  6491  0FD2  0026               	movlb	6	; select bank6
  6492  0FD3  080C               	movf	12,w	;volatile
  6493  0FD4  0021               	movlb	1	; select bank1
  6494  0FD5  04AA               	iorwf	_time^(0+128),f
  6495                           
  6496                           ;encoder.c: 104:         os.time_sum += time;
  6497  0FD6  082A               	movf	_time^(0+128),w	;volatile
  6498  0FD7  0020               	movlb	0	; select bank0
  6499  0FD8  07E4               	addwf	_os+12,f	;volatile
  6500  0FD9  0021               	movlb	1	; select bank1
  6501  0FDA  082B               	movf	(_time+1)^(0+128),w	;volatile
  6502  0FDB  0020               	movlb	0	; select bank0
  6503  0FDC  3DE5               	addwfc	_os+13,f	;volatile
  6504  0FDD  0021               	movlb	1	; select bank1
  6505  0FDE  082C               	movf	(_time+2)^(0+128),w	;volatile
  6506  0FDF  0020               	movlb	0	; select bank0
  6507  0FE0  3DE6               	addwfc	_os+14,f	;volatile
  6508  0FE1  0021               	movlb	1	; select bank1
  6509  0FE2  082D               	movf	(_time+3)^(0+128),w	;volatile
  6510  0FE3  0020               	movlb	0	; select bank0
  6511  0FE4  3DE7               	addwfc	_os+15,f	;volatile
  6512                           
  6513                           ;encoder.c: 106:         --os.capture;
  6514  0FE5  3001               	movlw	1
  6515  0FE6  02DE               	subwf	_os+6,f	;volatile
  6516                           
  6517                           ;encoder.c: 108:         if(os.capture==0)
  6518  0FE7  085E               	movf	_os+6,w	;volatile
  6519  0FE8  1D03               	btfss	3,2
  6520  0FE9  2FEE               	goto	i1l2110
  6521                           
  6522                           ;encoder.c: 109:         {;encoder.c: 110:             os.ready = 1;
  6523  0FEA  3001               	movlw	1
  6524  0FEB  00F0               	movwf	??_capture_A_isr
  6525  0FEC  0870               	movf	??_capture_A_isr,w
  6526  0FED  00DF               	movwf	_os+7	;volatile
  6527  0FEE                     i1l2110:	
  6528                           ;encoder.c: 112:     }
  6529                           
  6530                           ;encoder.c: 111:         }
  6531                           
  6532                           
  6533                           ;encoder.c: 114:     if(PORTBbits.RB2)
  6534  0FEE  1D0D               	btfss	13,2	;volatile
  6535  0FEF  2FF3               	goto	i1l208
  6536                           
  6537                           ;encoder.c: 115:     {;encoder.c: 116:         if(PORTBbits.RB1)
  6538  0FF0  188D               	btfsc	13,1	;volatile
  6539  0FF1  2FF9               	goto	i1l2120
  6540                           
  6541                           ;encoder.c: 124:         else
  6542                           
  6543                           ;encoder.c: 123:         }
  6544                           
  6545                           ;encoder.c: 117:         {;encoder.c: 119:                 ++os.encoder;
  6546  0FF2  2FF5               	goto	L11
  6547  0FF3                     i1l208:	
  6548                           ;encoder.c: 133:     else
  6549                           
  6550                           ;encoder.c: 132:     }
  6551                           
  6552                           ;encoder.c: 131:         }
  6553                           
  6554                           ;encoder.c: 125:         {;encoder.c: 127:                 --os.encoder;
  6555                           
  6556                           
  6557                           ;encoder.c: 134:     {;encoder.c: 135:         if(PORTBbits.RB1)
  6558  0FF3  1C8D               	btfss	13,1	;volatile
  6559  0FF4  2FF9               	goto	i1l2120
  6560  0FF5                     L11:	
  6561                           
  6562                           ;encoder.c: 136:         {;encoder.c: 138:                 --os.encoder;
  6563  0FF5  30FF               	movlw	255
  6564  0FF6  07D8               	addwf	_os,f	;volatile
  6565  0FF7  30FF               	movlw	255
  6566  0FF8  2FFC               	goto	L10
  6567  0FF9                     i1l2120:	
  6568                           ;encoder.c: 143:         else
  6569                           
  6570                           ;encoder.c: 142:         }
  6571                           
  6572                           
  6573                           ;encoder.c: 144:         {;encoder.c: 146:                 ++os.encoder;
  6574  0FF9  3001               	movlw	1
  6575  0FFA  07D8               	addwf	_os,f	;volatile
  6576  0FFB  3000               	movlw	0
  6577  0FFC                     L10:	
  6578  0FFC  3DD9               	addwfc	_os+1,f	;volatile
  6579                           
  6580                           ;encoder.c: 152:     PIR6bits.CCP1IF = 0;
  6581                           
  6582                           ;encoder.c: 151:     }
  6583                           
  6584                           ;encoder.c: 150:         }
  6585  0FFD  002E               	movlb	14	; select bank14
  6586  0FFE  1012               	bcf	18,0	;volatile
  6587  0FFF  0008               	return
  6588  1000                     __end_of_capture_A_isr:	
  6589  007E                     btemp	set	126	;btemp
  6590  007E                     int$flags	set	126
  6591  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     56      79
    BANK1            80      0      14
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display_set->___lwdiv
    _display_set->___lwmod
    __system_init->_display_init
    __calculate_speed->___fltol
    __calculate_speed->___xxtofl
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl

Critical Paths under __isr in COMMON

    __isr->_capture_A_isr
    __isr->_capture_B_isr
    __isr->_timer_1_isr

Critical Paths under _main in BANK0

    _main->__calculate_speed
    _display_set->___lwdiv
    __calculate_speed->___fldiv
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl

Critical Paths under __isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under __isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under __isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under __isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under __isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under __isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under __isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under __isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under __isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under __isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under __isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under __isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under __isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8281
                   __calculate_speed
                     __handle_relays
                       __system_init
                        _display_set
                    _display_startup
 ---------------------------------------------------------------------------------
 (1) _display_startup                                     17    17      0     539
                                              4 COMMON     1     1      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _display_set                                         11     8      3    2978
                                              3 BANK0     11     8      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     952
                                              4 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) __system_init                                         0     0      0       0
                       _display_init
                       _encoder_init
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) __handle_relays                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) __calculate_speed                                    20    20      0    4764
                                             36 BANK0     20    20      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     427
                                              4 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                              5 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              4 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) __isr                                                 0     0      0       0
                      _capture_A_isr
                      _capture_B_isr
                        _display_isr
                        _timer_1_isr
 ---------------------------------------------------------------------------------
 (5) _timer_1_isr                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _display_isr                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _capture_B_isr                                        4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _capture_A_isr                                        4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __calculate_speed
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
     ___fltol
     ___xxtofl
   __handle_relays
   __system_init
     _display_init
     _encoder_init
   _display_set
     ___lwdiv
     ___lwmod
   _display_startup

 __isr (ROOT)
   _capture_A_isr
   _capture_B_isr
   _display_isr
   _timer_1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       E       7       17.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      67      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      67      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Oct 02 21:15:14 2018

                    ___fldiv@aexp 0043                      ___fldiv@bexp 0042                      ___fldiv@sign 003B  
                     __CFG_CP$OFF 0000                                l80 0758                                l85 077F  
                    ?_display_isr 0070                                l78 076D                                l87 0791  
                              l79 076A                      _rollover_cnt 0079                      ?_display_set 0023  
                              _os 0058               __Umul8_16@word_mpld 0022                       __CFG_LVP$ON 0000  
                             l151 072C                               l514 066B                               l722 025D  
                             l670 02B3                               l742 05D0                               l743 05DA  
                             l735 05BC                               l729 0586                               l691 03C7  
                             l692 03DF                               l748 0E40                               l694 03EC  
                   ?_display_init 0070                               _PR2 028D                      __CFG_CPD$OFF 0000  
                     __CFG_WRT$ON 0000                      __CFG_BORV$HI 0000                               wreg 0009  
                    ___flmul@aexp 0037                      ___flmul@bexp 0038                      ___flmul@sign 0032  
                    ___flmul@temp 003D                      ___flmul@prod 0039                      __CFG_ZCD$OFF 0000  
                    ___fltol@exp1 0026                              l2028 073C                              l2302 040C  
                            l2304 0410                              l2252 0662                              l2244 0647  
                            l2228 0619                              l1620 0F04                              l2332 049F  
                            l2254 066E                              l2246 0655                              l1622 0F10  
                            l1712 02E6                              l1632 0F2B                              l2272 0EBA  
                            l2360 0E91                              l1706 02D2                              l1538 0E3A  
                            l2266 0EA2                              l1732 0332                              l1740 0314  
                            l1812 0058                              l2284 04C6                              l1628 0F22  
                            l2268 0EAE                              l2276 0EC3                              l2348 0E79  
                            l1742 0350                              l1830 007B                              l1814 005A  
                            l2286 04CE                              l1672 0284                              l1920 0233  
                            l1904 01F3                              l1832 007D                              l1816 0062  
                            l1738 034B                              l1906 01F5                              l1842 0093  
                            l1834 0085                              l1756 0356                              l1692 02A8  
                            l1676 0287                              l1916 021E                              l1766 0384  
                            l1758 036D                              l1678 028F                              l1926 024A  
                            l1950 0595                              l1792 03E8                              l1768 0386  
                            l1696 02AB                              l1944 057E                              l1778 03AF  
                            l1962 05C1                              l1954 0599                              l1964 05CA  
                            l1956 05A9                              l1894 01C5                              l1896 01DC  
                            l1978 05F5  __calculate_speed@time_difference 0050                              u1035 0752  
                            u1055 0764                              u2105 018E                              u2115 01A5  
                            u1075 0779                              u2125 01B4                              u2135 01C8  
                            u1095 078B                              _LATC 0018                              u2225 020C  
                            u2235 0227                              u2155 01D1                              u2315 05B6  
                            u2245 023D                              u2085 0109                              u2095 0138  
                            u2335 05C4                              u1615 0F11                              u1465 0E41  
                            u1625 0F1B                              u1635 0F23                              u1805 031C  
                            u1815 0323                              u2375 05E2                              u2295 05A2  
                            u1835 032C                              u1595 0F07                              u1845 0340  
                            u2825 0663                              u1875 0359                              u1965 039D  
                            u2765 0622                              u1975 03B8                              u1895 0362  
                            u1985 03D1                              u2865 0EA5                              u2795 0648  
                            u2885 0EB4                              u2895 0EBB                              i1l72 001D  
                  ??_encoder_init 0074                              __isr 0004                              _main 0E73  
                            _time 00AA                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            fsr1l 0006                              btemp 007E                     __CFG_BOREN$ON 0000  
                            start 001F           __end_of_display_startup 0741                   ___fldiv@new_exp 003C  
                   __CFG_CSWEN$ON 0000                     __CFG_MCLRE$ON 0000                             ?__isr 0070  
                   ___fltol@sign1 0025                    ??_display_init 0074                             ?_main 0070  
                 __end_of___fldiv 03FD                     __CFG_WDTE$OFF 0000                   __end_of___flmul 026A  
                 __end_of___fltol 067D                   __end_of___lwdiv 0F30                             i1l141 0ED5  
                           i1l143 0ED7                             i1l208 0FF3                             i1l144 0ED9  
                           i1l145 0EDB                             i1l219 07DA           display_startup@position 002F  
                 __end_of___lwmod 0EC8                     __CFG_PWRTE$ON 0000                    __CFG_FCMEN$OFF 0000  
                   ?__system_init 0070                             status 0003                             wtemp0 007E  
                 __initialization 0021                      __end_of__isr 001F                      __end_of_main 0E9B  
                          ??__isr 0074                            ??_main 0079         __calculate_speed@distance 004C  
                  ??__system_init 0075                            _CCPR1H 030D                            _CCPR2H 0311  
                          _CCPR1L 030C                            _CCPR2L 0310              display_set@abs_value 002C  
                          i1l2110 0FEE                            i1l2120 0FF9                            i1l1406 06DF  
                          i1l2160 0EF4                            i1l2138 07D5                            i1l2148 07E0  
                          i1l2158 0EDD                            i1l2190 000C                            i1l1386 0699  
                          i1l2194 0012                            i1l1396 06C7                            i1l2382 0EE6  
                          i1l2198 0018                    __CFG_WDTCCS$SC 0000                            u263_25 07A8  
                          u256_25 0FC1                            u264_25 07B3                            u257_25 0FCC  
                __end_of___xxtofl 05FE                  ?_display_startup 0070             __end_of_capture_A_isr 1000  
           __end_of_capture_B_isr 07E7                         ??___fldiv 0032                    __CFG_STVREN$ON 0000  
                       ??___flmul 002D                         ??___fltol 0020                         ??___lwdiv 0078  
                       ??___lwmod 0078              __end_of_encoder_init 0F6E                      ?_timer_1_isr 0070  
            __size_of_display_isr 0033              __size_of_display_set 00BC                __size_of__Umul8_16 0020  
                    ___xxtofl@arg 0026                      ___xxtofl@exp 0025                      ___xxtofl@val 0074  
         __end_of__initialization 003A                   __CFG_FEXTOSC$HS 0000              __end_of_display_init 0E73  
                      ___fltol@f1 0074                 ?__calculate_speed 0070                    __pcstackCOMMON 0070  
              ??__calculate_speed 0044                      __pidataBANK1 07E7                        __pbssBANK0 0058  
                      __pbssBANK1 00AA           __size_of__handle_relays 0054                        _characters 006A  
               __end_of__Umul8_16 0E4F                      _T2CLKCONbits 0290                        __pmaintext 0E73  
            __end_of__system_init 0FAE                        __pintentry 0004                           _CCP1PPS 0EA1  
                         _CCP2PPS 0EA2                         ?___xxtofl 0074                           _PPSLOCK 0E8F  
           __size_of_encoder_init 003E              __CFG_SCANE$available 0000                           ___fldiv 026A  
                         ___flmul 003E                           ___fltol 05FE                           ___lwdiv 0EFB  
                         ___lwmod 0E9B                           __ptext1 06E2                           __ptext2 03FD  
                         __ptext3 0E9B                           __ptext4 0EFB                           __ptext5 0F6E  
                         __ptext6 0F30                           __ptext7 0E4F                           __ptext8 0741  
                         __ptext9 04B9                         _T1CLKbits 0211                         _T1CONbits 020E  
                       _T2CONbits 028E                        ??___xxtofl 0020              __size_of_timer_1_isr 0065  
                         _segment 006E                           clrloop0 07F8               display_startup@cntr 0020  
           __size_of_display_init 0024              end_of_initialization 003A                           init_ram 07F1  
                         initloop 07F2                      _encoder_init 0F30             __CFG_WDTCPS$WDTCPS_31 0000  
                       _PORTAbits 000C                         _PORTBbits 000D                      _display_init 0E4F  
                   ___xxtofl@sign 0024                         _TRISAbits 0011                         _TRISBbits 0012  
                       _TRISCbits 0013                       ___fldiv@grs 003E                       ___fldiv@rem 0037  
                     _CCP1CAPbits 030F                       _CCP2CAPbits 0313                    __handle_relays 0741  
           display_set@temp_chars 0028                       ___flmul@grs 0033             __size_of__system_init 0040  
                     _CCP1CONbits 030E                       _CCP2CONbits 0312                     ??_display_isr 0070  
                   ??_display_set 0026          __size_of_display_startup 005F         __size_of__calculate_speed 00AF  
             start_initialization 0021            __size_of_capture_A_isr 0052            __size_of_capture_B_isr 0052  
                    __system_init 0F6E            __end_of__handle_relays 0795            __calculate_speed@speed 0054  
               __CFG_RSTOSC$EXT4X 0000                  __CFG_LPBOREN$OFF 0000                         __Umul8_16 0E2F  
                     __pdataBANK1 00A0                         ___fldiv@a 002A                         ___fldiv@b 002E  
             __end_of_display_isr 0EFB               __end_of_display_set 04B9                         ___flmul@a 0029  
                       ___flmul@b 0025                       __pbssCOMMON 0079                         ___latbits 0002  
                   __pcstackBANK0 0020                 __size_of___xxtofl 0096                       _char_lookup 00A0  
                 ?__handle_relays 0070                  ___lwdiv@dividend 0076                     _capture_A_isr 0FAE  
                   _capture_B_isr 0795                          ?___fldiv 002A                          ?___flmul 0025  
                        ?___fltol 0074                        ?__Umul8_16 0074                          ?___lwdiv 0074  
                        ?___lwmod 0074                  __CFG_PPS1WAY$OFF 0000                 ??_display_startup 0074  
                ___lwdiv@quotient 0020                          _LATAbits 0016                          _LATBbits 0017  
              display_startup@tmp 0022                         clear_ram0 07F7                          _PIE4bits 071A  
                        _PIE6bits 071C                    ?_capture_A_isr 0070                    ?_capture_B_isr 0070  
                        _PIR4bits 0710                          _PIR6bits 0712                       _display_isr 0EC8  
                     _display_set 03FD                     ??_timer_1_isr 0070                  __calculate_speed 04B9  
                     ??__Umul8_16 0076                  __size_of___fldiv 0193                  __size_of___flmul 022C  
                __size_of___fltol 007F                  __size_of___lwdiv 0035                  __size_of___lwmod 002D  
                      _ANSELAbits 0F38                        _ANSELBbits 0F43                          ___xxtofl 0568  
                 ___lwdiv@divisor 0074                   ___lwdiv@counter 0022               __end_of_timer_1_isr 06E2  
                        __ptext10 0568                          __ptext11 05FE                          __ptext12 003E  
                        __ptext13 0E2F                          __ptext14 026A                          __ptext16 067D  
                        __ptext17 0EC8                          __ptext18 0795                          __ptext19 0FAE  
                   __size_of__isr 001B                     __size_of_main 0028                   ??_capture_A_isr 0070  
                 ??_capture_B_isr 0070              __CFG_WDTCWS$WDTCWS_7 0000         display_startup@last_value 002E  
        display_set@decimal_flags 0025                          int$flags 007E                  display_set@value 0023  
                ??__handle_relays 0074                        _INTCONbits 000B                          intlevel1 0000  
                ___lwmod@dividend 0076                 __CFG_CLKOUTEN$OFF 0000                       _PPSLOCKbits 0E8F  
                 _display_startup 06E2                       _timer_1_isr 067D            __Umul8_16@multiplicand 0074  
                 ___lwmod@divisor 0074                   ___lwmod@counter 0020                     ?_encoder_init 0070  
            __Umul8_16@multiplier 0024          __end_of__calculate_speed 0568                 __Umul8_16@product 0020  
